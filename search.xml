<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>welcome to my blog</title>
    <url>/2020/10/24/welcome-to-my-blog/</url>
    <content><![CDATA[<blockquote class="blockquote-center">
            <i class="fa fa-quote-left"></i>
            <p>&#x521D;&#xB7;&#x89C1;</p>

            <i class="fa fa-quote-right"></i>
          </blockquote>
<a id="more"></a>
<p>&#x200B;	&#x54C8;&#x55BD;&#xFF0C;&#x5927;&#x5BB6;&#x597D;&#xFF0C;&#x6211;&#x662F;cozy&#x3002;&#x6B22;&#x8FCE;&#x5927;&#x5BB6;&#x8BBF;&#x95EE;&#x6211;&#x7684;&#x4E2A;&#x4EBA;&#x4E3B;&#x9875;&#x3002;&#x4E00;&#x76F4;&#x4EE5;&#x6765;&#x90FD;&#x5F88;&#x60F3;&#x62E5;&#x6709;&#x4E00;&#x4E2A;&#x81EA;&#x5DF1;&#x7684;&#x7F51;&#x9875;&#xFF0C;&#x4ECA;&#x5929;&#x7EC8;&#x4E8E;&#x5B9E;&#x73B0;&#x4E86;&#xFF0C;&#x5F88;&#x5F00;&#x5FC3;&#x53EF;&#x4EE5;&#x5728;1024&#x4E0E;&#x5927;&#x5BB6;&#x89C1;&#x9762;&#x3002;&#x867D;&#x7136;&#x73B0;&#x5728;&#x6709;&#x70B9;&#x7A7A;&#x8361;&#x8361;&#x7684;&#xFF0C;&#x4F46;&#x6211;&#x4F1A;&#x597D;&#x597D;&#x52AA;&#x529B;&#xFF0C;&#x5206;&#x4EAB;&#x4E00;&#x4E9B;&#x6709;<s>&#x4EF7;&#x503C;</s>&#xFF08;&#x6C99;&#x96D5;&#xFF09;&#x7684;&#x5185;&#x5BB9;&#xFF0C;&#x5E0C;&#x671B;&#x5927;&#x5BB6;&#x4EE5;&#x540E;&#x6709;&#x7A7A;&#x6CA1;&#x7A7A;&#x5E38;&#x6765;&#x770B;&#x770B;&#x3001;&#x50AC;&#x66F4;&#xFF0C;&#x6216;&#x8005;&#x53EA;&#x662F;&#x5355;&#x7EAF;&#x60F3;&#x548C;&#x6211;&#x804A;&#x5929;&#xFF0C;&#x53EF;&#x4EE5;&#x53BB;&#x7559;&#x8A00;&#x677F;&#xFF0C;&#x5E94;&#x8BE5;&#x662F;&#x5B8C;&#x5168;&#x533F;&#x540D;&#x7684;&#x5427;&#xFF0C;&#x4E0D;&#x8FC7;&#x8FD9;&#x6BD5;&#x7ADF;&#x662F;&#x4E2A;&#x7F51;&#x7AD9;&#x4E0D;&#x662F;&#x670B;&#x53CB;&#x5708;&#xFF0C;&#x8981;&#x6CE8;&#x610F;&#x9690;&#x79C1;&#x54E6;&#x3002;&#x7559;&#x8A00;&#x677F;&#x4E0B;&#x65B9;&#x662F;<span class="label success">cozy&#x8BF4;</span>&#xFF0C;&#x90A3;&#x662F;&#x4E00;&#x4E2A;&#x6211;&#x5206;&#x4EAB;&#x52A8;&#x6001;&#x7684;&#x5730;&#x65B9;&#xFF0C;&#x76EE;&#x524D;&#x5927;&#x5BB6;&#x53EA;&#x6709;&#x8BFB;&#x7684;&#x6743;&#x9650;&#x2026;</p>
<p>&#x200B;	&#x5728;&#x6211;&#x76EE;&#x524D;&#x7684;&#x5B9A;&#x4F4D;&#x4E2D;&#xFF0C;&#x672A;&#x6765;&#x8BE5;&#x7F51;&#x7AD9;&#x4E0D;&#x4EC5;&#x4EC5;&#x53EA;&#x6709;&#x6280;&#x672F;&#x7C7B;&#x7684;&#x6587;&#x7AE0;&#xFF0C;&#x5F53;&#x7136;&#x8FD9;&#x53EF;&#x80FD;&#x662F;&#x5927;&#x90E8;&#x5206;&#x5566;&#xFF0C;&#x6211;&#x8FD8;&#x60F3;&#x7528;&#x6765;&#x8BB0;&#x5F55;&#x5E73;&#x65E5;&#x7684;&#x751F;&#x6D3B;&#xFF0C;&#x5199;&#x4E00;&#x5199;&#x603B;&#x7ED3;&#x4E4B;&#x7C7B;&#x7684;&#x3002;&#x6B63;&#x5982;&#x535A;&#x5BA2;&#x540D;<span class="label info">cozy</span>&#xFF0C;&#x8FD9;&#x662F;&#x4E00;&#x4E2A;&#x6709;&#x6E29;&#x5EA6;&#x7684;&#x535A;&#x5BA2;&#xFF0C;&#x4E0D;&#x4EC5;&#x4EC5;&#x662F;&#x51B7;&#x51B0;&#x51B0;&#x7684;&#x6280;&#x672F;&#xFF0C;<s>&#x4E00;&#x6253;&#x5C31;&#x62A5;&#x9519;</s>&#x7684;&#x4EE3;&#x7801;&#x3002;&#x5982;&#x679C;&#x60A8;&#x89C9;&#x5F97;&#x67D0;&#x7BC7;&#x6587;&#x7AE0;&#x6709;&#x610F;&#x601D;&#xFF0C;&#x53EF;&#x4EE5;<s>&#x4E00;&#x952E;&#x4E09;&#x8FDE;&#x2013;&#x8F6C;&#x53D1;&#xFF0C;&#x6295;&#x5E01;&#xFF0C;&#x70B9;&#x8D5E;</s>&#xFF08;&#x597D;&#x5427;&#xFF0C;&#x8FD9;&#x4E9B;&#x529F;&#x80FD;&#x90FD;&#x6CA1;&#x6709;&#x5B9E;&#x73B0;&#xFF09;&#x5728;&#x8BC4;&#x8BBA;&#x533A;&#x7559;&#x8A00;&#x54E6;&#xFF01;</p>
<p>&#x200B;	&#x8FD9;&#x4E2A;&#x7F51;&#x9875;&#x65AD;&#x65AD;&#x7EED;&#x7EED;&#x642D;&#x5EFA;&#x4E86;&#x4FE9;&#x5468;&#xFF0C;&#x4F46;&#x4E00;&#x76F4;&#x5728;&#x7535;&#x8111;&#x4E0A;&#x8C03;&#x8BD5;&#xFF0C;&#x6CA1;&#x6709;&#x592A;&#x6CE8;&#x610F;&#x5230;&#x624B;&#x673A;&#x7AEF;&#x7684;&#x89C6;&#x89C9;&#x4F53;&#x9A8C;&#xFF0C;&#x800C;&#x4E14;&#x53EF;&#x80FD;&#x4F1A;&#x6BD4;&#x8F83;&#x6162;&#xFF0C;&#x62B1;&#x6B49;&#xFF08;&#x3002;pc&#x7AEF;&#x548C;&#x624B;&#x673A;&#x7AEF;&#x53EF;&#x80FD;&#x770B;&#x5230;&#x7684;&#x5206;&#x5E03;&#x4E0D;&#x592A;&#x4E00;&#x6837;&#xFF0C;pc&#x7AEF;&#x7684;&#x529F;&#x80FD;&#x8DF3;&#x8F6C;&#x952E;&#x5728;&#x5DE6;&#x4FA7;&#xFF0C;&#x624B;&#x673A;&#x7AEF;&#x7684;&#x5728;&#x4E0A;&#x65B9;&#xFF0C;&#x6211;&#x81EA;&#x5DF1;&#x89C9;&#x5F97;pc&#x7AEF;&#x66F4;&#x597D;&#x770B;&#x4E00;&#x4E9B;&#x54C8;&#x54C8;&#x3002;</p>
<p>&#x200B;				&#x518D;&#x6B21;&#x611F;&#x8C22;&#x5927;&#x5BB6;&#x7684;&#x9605;&#x8BFB;&#xFF0C;&#x87F9;&#x87F9;&#xFF01;</p>
<blockquote class="blockquote-center">
            <i class="fa fa-quote-left"></i>
            <p>&#x8BF7;&#x591A;&#x591A;&#x5173;&#x7167;</p>

            <i class="fa fa-quote-right"></i>
          </blockquote>]]></content>
  </entry>
  <entry>
    <title>Atrick</title>
    <url>/2020/11/02/Atrick/</url>
    <content><![CDATA[<p>&#x5F85;&#x586B;&#x5751;&#x2026;</p>
<a id="more"></a>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt;v;</span><br><span class="line">v[v.size()<span class="number">-1</span>]-----&gt; v.back()</span><br><span class="line"><span class="comment">//&#x53D6;v&#x7684;&#x524D;n&#x4E2A;&#x6570;</span></span><br><span class="line"> v.resize(n)</span><br></pre></td></tr></table></figure>
<p><font color="red">&#x6240;&#x4EE5;vector&#x5B8C;&#x5168;&#x53EF;&#x4EE5;&#x4EE3;&#x66FF;stack</font></p>
]]></content>
  </entry>
  <entry>
    <title>华清特普</title>
    <url>/2020/11/16/%E5%8D%8E%E6%B8%85%E7%89%B9%E6%99%AE/</url>
    <content><![CDATA[<p>&#x534E;&#x6E05;&#x7279;&#x666E;</p>
<a id="more"></a>
<p>No. 145</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#x8FD9;&#x4E0D;&#x662F;&#x4EC0;&#x4E48;&#x62A5;&#x540D;&#xFF0C;&#x53EA;&#x662F;&#x4F5C;&#x4E3A;&#x4E00;&#x4E2A;&#x53C2;&#x4E0E;&#x8005;&#x60F3;&#x8C08;&#x8C08;&#x8FD9;&#x6B21;&#x6D3B;&#x52A8;/&#x8FD9;&#x573A;&#x884C;&#x4E3A;&#x827A;&#x672F;&#xFF0C;&#x4EC5;&#x4EE3;&#x8868;&#x6211;&#x4E2A;&#x4EBA;&#x3002;</span><br><span class="line"></span><br><span class="line">&#x8FD9;&#x6B21;&#x6D3B;&#x52A8;&#xFF0C;&#x5C31;&#x50CF;&#x6709;&#x4EBA;&#x8C08;&#x5230;&#x7684;&#xFF0C;&#x662F;&#x5BF9;&#x9020;&#x795E;&#x8FD0;&#x52A8;&#x7684;&#x4E00;&#x6B21;&#x5E73;&#x6C11;&#x5316;&#x53CD;&#x51FB;&#x4E0E;&#x81EA;&#x5A31;&#x81EA;&#x4E50;&#x3002;&#x5728;&#x56ED;&#x5B50;&#x91CC;&#xFF0C;&#x7EFD;&#x653E;&#x5149;&#x8292;&#x7684;&#x6C38;&#x8FDC;&#x53EA;&#x662F;&#x91D1;&#x5B57;&#x5854;&#x9876;&#x7AEF;&#x7684;&#x4E00;&#x5C0F;&#x90E8;&#x5206;&#x4EBA;&#xFF0C;&#x800C;&#x8FD9;&#x6B21;&#xFF0C;&#x5E0C;&#x671B;&#x7ED9;&#x6211;&#x4EEC;&#x8FD9;&#x4E9B;&#x80CC;&#x666F;&#x677F;&#x4E00;&#x4E2A;&#x5C55;&#x793A;&#x81EA;&#x6211;&#x3001;&#x88AB;&#x770B;&#x5230;&#x3001;&#x88AB;&#x542C;&#x5230;&#x7684;&#x673A;&#x4F1A;&#xFF0C;&#x540C;&#x65F6;&#x4E5F;&#x662F;&#x5C55;&#x73B0;&#x51FA;&#x4E00;&#x4E2A;&#x66F4;&#x666E;&#x901A;&#xFF0C;&#x4F46;&#x4E5F;&#x66F4;&#x771F;&#x5B9E;&#x7684;&#x6E05;&#x534E;&#xFF0C;&#x5E76;&#x53D1;&#x51FA;&#x4E00;&#x58F0;&#x5450;&#x558A;&#xFF0C;&#x6E05;&#x534E;&#x4E0D;&#x662F;&#x53EA;&#x6709;&#x201C;&#x795E;&#x201D;&#xFF0C;&#x4E5F;&#x6709;&#x201C;&#x4EBA;&#x201D;&#x3002;</span><br><span class="line">&#x968F;&#x7740;&#x6D3B;&#x52A8;&#x7684;&#x4F20;&#x64AD;&#xFF0C;&#x5C24;&#x5176;&#x4F20;&#x5230;&#x6821;&#x5916;&#x540E;&#xFF0C;&#x4E5F;&#x51FA;&#x73B0;&#x4E86;&#x4E00;&#x4E9B;&#x4E89;&#x8BAE;&#x3002;&#x6709;&#x4E9B;&#x53EF;&#x80FD;&#x662F;&#x6211;&#x4EEC;&#x7684;&#x6D3B;&#x52A8;&#x672C;&#x8EAB;&#x6709;&#x7F3A;&#x9677;&#xFF0C;&#x6709;&#x4E9B;&#x53EF;&#x80FD;&#x662F;&#x6211;&#x4EEC;&#x5BF9;&#x4E00;&#x4E9B;&#x7EC6;&#x8282;&#x8868;&#x8FF0;&#x5F97;&#x4E0D;&#x591F;&#x6E05;&#x695A;&#x3002;</span><br><span class="line"></span><br><span class="line">&#x5148;&#x8BF4;&#x7B2C;&#x4E00;&#x4E2A;&#x95EE;&#x9898;&#xFF0C;&#x8FD9;&#x573A;&#x6D3B;&#x52A8;&#x628A;&#x5BF9;&#x7279;&#x5956;&#x7684;&#x89E3;&#x6784;&#x843D;&#x5B9E;&#x4E86;&#xFF0C;&#x50CF;&#x6A21;&#x50CF;&#x6837;&#x5730;&#x771F;&#x641E;&#x4E86;&#x4E00;&#x6B21;&#x8BC4;&#x5956;&#xFF0C;&#x8FD9;&#x662F;&#x5426;&#x5C31;&#x610F;&#x5473;&#x7740;&#x89E3;&#x6784;&#x5931;&#x6548;&#x4E86;&#xFF1F;</span><br><span class="line">&#x98DE;&#x9762;&#x6559;&#x6216;&#x8BB8;&#x662F;&#x4E00;&#x4E2A;&#x5F88;&#x597D;&#x7684;&#x4F8B;&#x5B50;&#x3002;&#x56FA;&#x7136;&#xFF0C;&#x82E5;&#x53EA;&#x662F;&#x865A;&#x6784;&#x4E00;&#x5957;&#x8BBE;&#x60F3;&#xFF0C;&#x6216;&#x5199;&#x51E0;&#x7BC7;&#x6587;&#x7AE0;&#x4F20;&#x64AD;&#xFF0C;&#x4E5F;&#x662F;&#x4E00;&#x79CD;&#x65B9;&#x5F0F;&#xFF0C;&#x4F46;&#x6548;&#x679C;&#x4E0A;&#x5C31;&#x8FDC;&#x8FDC;&#x4E0D;&#x5982;&#x628A;&#x8BBD;&#x523A;&#x53D8;&#x6210;&#x73B0;&#x5B9E;&#x7684;&#x98DE;&#x9762;&#x6559;&#x4E86;&#x3002;&#x5982;&#x679C;&#x6709;&#x4EBA;&#x8BF4;&#x201C;&#x8BBD;&#x523A;&#x5B97;&#x6559;&#x4E5F;&#x8981;&#x8BBE;&#x7ACB;&#x5B97;&#x6559;&#xFF0C;&#x8BBD;&#x523A;&#x7684;&#x610F;&#x4E49;&#x5C31;&#x88AB;&#x6D88;&#x89E3;&#x4E86;&#x201D;&#x3001;&#x201C;&#x53CD;&#x5BF9;&#x5B97;&#x6559;&#x4E5F;&#x8981;&#x7ACB;&#x4E00;&#x5957;&#x6212;&#x5F8B;&#x7F16;&#x4E00;&#x5957;&#x8BBE;&#x5B9A;&#x641E;&#x4E2A;&#x5B97;&#x6559;&#x7684;&#x5F62;&#x5F0F;&#xFF0C;&#x53EA;&#x80FD;&#x8BF4;&#x660E;&#x4F60;&#x4EEC;&#x5185;&#x5FC3;&#x8FD8;&#x662F;&#x63A5;&#x53D7;&#x4E0D;&#x4E86;&#x6CA1;&#x6709;&#x795E;&#x201D;&#xFF0C;&#x6211;&#x5012;&#x89C9;&#x5F97;&#x633A;&#x4E0D;&#x89E3;&#x98CE;&#x60C5;&#x7684;&#x3002;</span><br><span class="line"></span><br><span class="line">&#x53E6;&#x4E00;&#x4E2A;&#x5FC5;&#x987B;&#x76F4;&#x9762;&#x7684;&#x95EE;&#x9898;&#x662F;&#xFF0C;&#x5DF2;&#x7ECF;&#x5728;&#x6E05;&#x534E;&#x4E86;&#xFF0C;&#x662F;&#x4E0D;&#x662F;&#x5C31;&#x610F;&#x5473;&#x7740;&#x4E0D;&#x666E;&#x901A;&#xFF1F;</span><br><span class="line">&#x5176;&#x5B9E;&#x5F88;&#x591A;&#x4E1C;&#x897F;&#x90FD;&#x662F;&#x76F8;&#x5BF9;&#x7684;&#xFF0C;&#x8FD9;&#x91CC;&#x63A2;&#x8BA8;&#x7684;&#x672C;&#x6765;&#x5C31;&#x662F;&#x5BF9;&#x4E8E;&#x4E00;&#x4E2A;&#x7279;&#x5B9A;&#x73AF;&#x5883;&#xFF0C;&#x8FD9;&#x4E2A;&#x73AF;&#x5883;&#x4E0B;&#x7684;&#x666E;&#x901A;&#x4EBA;&#x4E0E;&#x8FD9;&#x4E2A;&#x73AF;&#x5883;&#x7684;&#x5173;&#x7CFB;&#x3002;&#x5982;&#x679C;&#x771F;&#x8981;&#x8BF4;&#x7EDD;&#x5BF9;&#x610F;&#x4E49;&#x4E0A;&#x7684;&#x201C;&#x666E;&#x901A;&#x201D;&#xFF0C;&#x8003;&#x8651;&#x5230;&#x76EE;&#x524D;&#x4E0D;&#x5230;&#x4E00;&#x534A;&#x7684;&#x672C;&#x79D1;&#x7387;&#xFF0C;&#x767E;&#x5206;&#x4E4B;&#x5341;&#x7684;&#x4E00;&#x672C;&#x7387;&#xFF0C;&#x8BF4;&#x4E0A;&#x6E05;&#x534E;&#x5C31;&#x5DF2;&#x7ECF;&#x4E0D;&#x666E;&#x901A;&#x8005;&#xFF0C;&#x81EA;&#x5DF1;&#x5728;&#x771F;&#x6B63;&#x7684;&#x5927;&#x591A;&#x6570;&#x9762;&#x524D;&#xFF0C;&#x53C8;&#x7B97;&#x5F97;&#x4E0A;&#x666E;&#x901A;&#x5417;&#x3002;&#x66F4;&#x8FDB;&#x4E00;&#x6B65;&#xFF0C;&#x6211;&#x751A;&#x81F3;&#x53EF;&#x4EE5;&#x8BF4;&#x5BB6;&#x5EAD;&#x5E73;&#x5747;&#x5E74;&#x6536;&#x5165;&#x5927;&#x4E8E;1000&#x7684;&#x90FD;&#x4E0D;&#x7B97;&#x666E;&#x901A;&#x3002;&#x8FD9;&#x624D;&#x662F;&#x771F;&#x6B63;&#x5728;&#x6D88;&#x89E3;&#x201C;&#x666E;&#x901A;&#x201D;&#x3002;</span><br><span class="line">&#x65E2;&#x7136;&#x6709;&#x4E9B;&#x95EE;&#x9898;&#x5BA2;&#x89C2;&#x5B58;&#x5728;&#xFF0C;&#x603B;&#x4F1A;&#x6709;&#x4EBA;&#x505A;&#x51FA;&#x5C1D;&#x8BD5;&#xFF0C;&#x603B;&#x4F1A;&#x6709;&#x4EBA;&#x53D1;&#x51FA;&#x5450;&#x558A;&#x3002;&#x5982;&#x679C;&#x771F;&#x662F;&#x7531;&#x975E;top&#x7684;&#x5B66;&#x6821;&#x5E26;&#x5934;&#x53D1;&#x8D77;&#x8FD9;&#x6837;&#x7684;&#x201C;&#x7279;&#x666E;&#x901A;&#x5956;&#x201D;&#xFF0C;&#x975E;&#x8BAE;&#x5C31;&#x4F1A;&#x66F4;&#x5C11;&#x5417;&#xFF1F;</span><br><span class="line"> &#x6B64;&#x5916;&#xFF0C;&#x6E05;&#x534E;&#x6BD5;&#x4E1A;&#x8FC7;&#x5F97;&#x4E0D;&#x5982;&#x975E;&#x6E05;&#x534E;&#x6BD5;&#x4E1A;&#x7684;&#x4E5F;&#x5927;&#x6709;&#x4EBA;&#x5728;&#xFF0C;&#x8F7B;&#x6613;&#x7528;&#x5B66;&#x6821;&#x5212;&#x5206;&#x4EBA;&#x672C;&#x6765;&#x5C31;&#x662F;&#x6211;&#x4EEC;&#x5E0C;&#x671B;&#x53CD;&#x5BF9;&#x7684;&#x4E1C;&#x897F;&#x3002;</span><br><span class="line"></span><br><span class="line">&#x8BF4;&#x5230;&#x95EE;&#x9898;&#x5BA2;&#x89C2;&#x5B58;&#x5728;&#xFF0C;&#x8FD9;&#x4E5F;&#x662F;&#x4EF6;&#x5F88;&#x73B0;&#x5B9E;&#x7684;&#x4E8B;&#x60C5;&#x3002;&#x70ED;&#x8877;&#x9020;&#x795E;&#x3001;&#x8FC7;&#x4E8E;&#x805A;&#x7126;&#x91D1;&#x5B57;&#x5854;&#x9876;&#x5C16;&#x3001;&#x6807;&#x51C6;&#x5355;&#x4E00;&#x5316;&#x3001;&#x4E0D;&#x5FC5;&#x8981;&#x7684;&#x7ADE;&#x4E89;&#x3001;&#x5BF9;&#x666E;&#x901A;&#x4EBA;&#x7684;&#x5FC3;&#x7406;&#x4F24;&#x5BB3;&#xFF0C;&#x8FD9;&#x4E9B;&#x90FD;&#x662F;&#x6211;&#x4EEC;&#x65F6;&#x65F6;&#x523B;&#x523B;&#x5728;&#x9762;&#x5BF9;&#x7684;&#x73B0;&#x5B9E;&#x95EE;&#x9898;&#x3002;&#x7136;&#x800C;&#x4F3C;&#x4E4E;&#x6709;&#x4E9B;&#x4EBA;&#x770B;&#x6765;&#xFF0C;&#x8FD9;&#x4E9B;&#x90FD;&#x4E0D;&#x5B58;&#x5728;&#x7684;&#xFF0C;&#x90FD;&#x4E0D;&#x5982;&#x4ED6;&#x7684;&#x4E00;&#x53E5;&#x6240;&#x8C13;&#x6BD2;&#x820C;&#x4FCF;&#x76AE;&#x8BDD;&#x91CD;&#x8981;&#xFF0C;&#x6216;&#x8005;&#x53EA;&#x8981;&#x5927;&#x5BB6;&#x201C;&#x9AA8;&#x5B50;&#x91CC;&#x63A5;&#x7EB3;&#x666E;&#x901A;&#x201D;&#xFF0C;&#x95EE;&#x9898;&#x5C31;&#x81EA;&#x52A8;&#x6D88;&#x5931;&#x4E86;&#x3002;&#x5F53;&#x6709;&#x4EBA;&#x505A;&#x51FA;&#x5C1D;&#x8BD5;&#xFF0C;&#x6709;&#x4EBA;&#x505A;&#x51FA;&#x53CD;&#x6297;&#xFF0C;&#x6709;&#x4EBA;&#x82E6;&#x4E2D;&#x4F5C;&#x4E50;&#xFF0C;&#x53CD;&#x5012;&#x6210;&#x4E86;&#x201C;&#x9AA8;&#x5B50;&#x91CC;&#x8FD8;&#x662F;&#x6CA1;&#x6709;&#x63A5;&#x7EB3;&#x666E;&#x901A;&#x201D;&#x3002;</span><br><span class="line">&#x628A;&#x6240;&#x8C13;&#x4E92;&#x9ED1;&#x653E;&#x5728;&#x4E86;&#x5BA2;&#x89C2;&#x4E8B;&#x4EF6;&#x672C;&#x8EAB;&#x4E4B;&#x4E0A;&#xFF0C;&#x672A;&#x514D;&#x843D;&#x4E86;&#x4E0B;&#x4E58;&#x3002;</span><br><span class="line"></span><br><span class="line">&#x7A76;&#x7ADF;&#x5728;&#x8BC4;&#x4EC0;&#x4E48;&#x3001;&#x600E;&#x4E48;&#x8BC4;&#xFF0C;&#x4E5F;&#x662F;&#x4E00;&#x4EF6;&#x9700;&#x8981;&#x8BF4;&#x6E05;&#x695A;&#x7684;&#x4E8B;&#x60C5;&#x3002;</span><br><span class="line">&#x6211;&#x4EEC;&#x5E76;&#x4E0D;&#x662F;&#x771F;&#x7684;&#x8981;&#x5377;&#x51FA;10&#x4E2A;&#x6700;&#x6700;&#x201C;&#x666E;&#x901A;&#x201D;&#x7684;&#x4EBA;&#xFF0C;&#x4ED6;&#x4EEC;&#x6BD4;&#x5176;&#x4ED6;&#x4EBA;&#x66F4;&#x201C;&#x666E;&#x901A;&#x201D;&#xFF0C;&#x6211;&#x4EEC;&#x4E5F;&#x4E0D;&#x662F;&#x8981;&#x641E;&#x4EC0;&#x4E48;&#x6C11;&#x95F4;&#x9AD8;&#x624B;&#x5927;&#x6BD4;&#x62FC;&#x3002;&#x6211;&#x4EEC;&#x6700;&#x5E0C;&#x671B;&#x7684;&#xFF0C;&#x662F;&#x7ED9;&#x51FA;10&#x4E2A;&#x666E;&#x901A;&#x4EBA;&#x7684;&#x4EE3;&#x8868;&#xFF0C;&#x901A;&#x8FC7;&#x5C55;&#x73B0;&#x8FD9;10&#x4E2A;&#x4EBA;&#xFF0C;&#x5C3D;&#x91CF;&#x591A;&#x5730;&#x5C55;&#x73B0;&#x666E;&#x901A;&#x4EBA;&#x7FA4;&#x4F53;&#xFF0C;&#x5C55;&#x73B0;&#x201C;&#x6211;&#x4EEC;&#x201D;&#x3002;&#x540C;&#x65F6;&#xFF0C;&#x4F20;&#x8FBE;&#x51FA;&#x4EBA;&#x4EBA;&#x90FD;&#x53EF;&#x80FD;&#x83B7;&#x5956;&#xFF0C;&#x4EBA;&#x4EBA;&#x90FD;&#x80FD;&#x6536;&#x83B7;&#x81EA;&#x5DF1;&#x7684;&#x5FEB;&#x4E50;&#x3002;</span><br><span class="line">10&#x4F4D;&#x83B7;&#x5956;&#x8005;&#x4E5F;&#x5E76;&#x4E0D;&#x4F1A;&#x88AB;&#x516C;&#x5F00;&#x4E2A;&#x4EBA;&#x4FE1;&#x606F;&#xFF0C;&#x53D6;&#x800C;&#x4EE3;&#x4E4B;&#x7684;&#x662F;&#x63CF;&#x7ED8;&#x4ED6;&#x4EEC;&#x7684;&#x7528;&#x6237;&#x753B;&#x50CF;&#x3002;</span><br><span class="line">&#x800C;&#x8BC4;&#x9009;&#x672C;&#x8EAB;&#xFF0C;&#x662F;&#x4EA4;&#x7ED9;&#x5927;&#x4F17;&#x8BC4;&#x59D4;&#x56E2;&#x7684;&#x3002;&#x666E;&#x901A;&#x6CA1;&#x6709;&#x6807;&#x51C6;&#xFF0C;&#x4E5F;&#x6CA1;&#x6709;&#x6A21;&#x677F;&#xFF0C;&#x6700;&#x7EC8;&#x7684;&#x7ED3;&#x679C;&#x5C06;&#x7531;&#x5927;&#x4F17;&#x8BC4;&#x59D4;&#x56E2;&#x7684;&#x6253;&#x5206;&#x51B3;&#x5B9A;&#xFF0C;&#x4E3B;&#x529E;&#x65B9;&#x4F1A;&#x5C3D;&#x91CF;&#x907F;&#x514D;&#x6709;&#x4EFB;&#x4F55;&#x5E72;&#x6D89;&#x3002;</span><br><span class="line"></span><br><span class="line">&#x8BF4;&#x4E86;&#x90A3;&#x4E48;&#x591A;&#x4E4B;&#x524D;&#x7684;&#x8BAE;&#x8BBA;&#xFF0C;&#x6765;&#x8BF4;&#x70B9;&#x4E4B;&#x540E;&#x7684;&#x4E8B;&#x60C5;&#x3002;&#x521D;&#x9009;&#x63D0;&#x540D;&#x5DF2;&#x7ECF;&#x7ED3;&#x675F;&#x4E86;&#xFF0C;&#x73B0;&#x5728;&#x662F;&#x4ECE;&#x5165;&#x56F4;&#x8005;&#x4E2D;&#x9009;&#x51FA;&#x6700;&#x7EC8;10&#x540D;&#x5F97;&#x4E3B;&#x7684;&#x9636;&#x6BB5;&#x3002;&#x7B54;&#x8FA9;&#x4F1A;&#x653E;&#x5728;&#x95ED;&#x793E;&#x5E73;&#x53F0;&#x4E0A;&#xFF0C;&#x8FD9;&#x662F;&#x4E00;&#x4E2A;&#x9700;&#x8981;&#x6E05;&#x534E;&#x90AE;&#x7BB1;&#x6CE8;&#x518C;&#x7684;&#x5730;&#x65B9;&#xFF0C;&#x4E0D;&#x540C;&#x4E8E;&#x4E4B;&#x524D;&#x7684;&#x7B80;&#x5355;&#x8FC7;&#x6EE4;&#x4E86;&#x3002;&#x6240;&#x8C13;&#x201C;&#x7B54;&#x8FA9;&#x201D;&#xFF0C;&#x5176;&#x5B9E;&#x5C31;&#x662F;&#x53D1;&#x5E03;&#x4E00;&#x6BB5;&#x65B0;&#x7684;&#xFF0C;&#x53EF;&#x80FD;&#x66F4;&#x8BE6;&#x7EC6;&#x7684;&#x9648;&#x8FF0;&#xFF0C;&#x5728;&#x8BC4;&#x8BBA;&#x533A;&#x4E0E;&#x8BC4;&#x59D4;&#x3001;&#x89C2;&#x4F17;&#x4E92;&#x52A8;&#xFF0C;&#x56DE;&#x7B54;&#x63D0;&#x95EE;&#x3002;&#x5982;&#x679C;&#x6709;&#x5174;&#x8DA3;&#xFF0C;&#x53EF;&#x4EE5;&#x5148;&#x628A;&#x95ED;&#x793E;&#x5E10;&#x53F7;&#x6CE8;&#x518C;&#x7740;&#x3002;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#x6700;&#x540E;&#xFF0C;&#x795D;&#x5927;&#x5BB6;&#x90FD;&#x4E16;&#x4E8B;&#x9759;&#x597D;&#xFF0C;&#x5E73;&#x5B89;&#x559C;&#x4E50;&#x3002;</span><br></pre></td></tr></table></figure>
<p>5&#x5929;&#x4E4B;&#x524D; <a href="https://closed.social/ordinary/?page=1&amp;per_page=20&amp;sort_by=time##"> 32</a></p>
<p>No. 144</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#x4EC0;&#x4E48;&#x662F;&#x666E;&#x901A;&#x5462;&#xFF1F;&#x6CA1;&#x6709;&#x624D;&#x827A;&#x3001;&#x4E0D;&#x61C2;&#x4E50;&#x5668;&#x3001;&#x6B23;&#x8D4F;&#x4E0D;&#x6765;&#x827A;&#x672F;&#x3001;&#x505A;&#x4E0D;&#x4E86;&#x793E;&#x5DE5;&#x3001;&#x4E0D;&#x64C5;&#x957F;&#x4F53;&#x80B2;&#x3001;&#x51E0;&#x4E4E;&#x6CA1;&#x6709;&#x793E;&#x4EA4;&#x5417;&#xFF1F;&#x90A3;&#x6211;&#x90FD;&#x662F;&#x3002;</span><br><span class="line"></span><br><span class="line">&#x4E0A;&#x5927;&#x5B66;&#x4EE5;&#x6765;&#xFF0C;&#x5C1D;&#x8BD5;&#x505A;&#x8FC7;&#x5404;&#x79CD;&#x4E8B;&#x60C5;&#xFF0C;&#x53BB;&#x542C;&#x4E94;&#x82B1;&#x516B;&#x95E8;&#x7684;&#x8BB2;&#x5EA7;&#xFF0C;&#x5C1D;&#x8BD5;&#x5B66;&#x4E60;&#x4E71;&#x4E03;&#x516B;&#x7CDF;&#x7684;&#x6280;&#x80FD;&#xFF0C;&#x4E0A;&#x5947;&#x5947;&#x602A;&#x602A;&#x7684;&#x8BFE;&#xFF0C;&#x4F46;&#x603B;&#x662F;&#x524D;&#x529F;&#x5C3D;&#x5F03;&#x3001;&#x534A;&#x9014;&#x800C;&#x5E9F;&#xFF0C;&#x5230;&#x73B0;&#x5728;&#x90FD;&#x6CA1;&#x6709;&#x4EC0;&#x4E48;&#x53EF;&#x4EE5;&#x62FF;&#x51FA;&#x6765;&#x5938;&#x8000;&#x7684;&#x3002;</span><br><span class="line"></span><br><span class="line">&#x6709;&#x65F6;&#x5019;&#x4F1A;&#x5BF9;&#x7740;&#x7A7A;&#x7A7A;&#x7684;word&#x590D;&#x76D8;&#x81EA;&#x5DF1;&#x5230;&#x5E95;&#x5982;&#x4F55;&#x4ECE;&#x9AD8;&#x4E2D;&#x65F6;&#x90A3;&#x4E48;&#x9A84;&#x50B2;&#x7684;&#x4E00;&#x4E2A;&#x4EBA;&#x53D8;&#x5F97;&#x8FD9;&#x4E48;&#x5E73;&#x5EB8;&#xFF0C;&#x590D;&#x76D8;&#x5B8C;&#x4E86;&#xFF0C;&#x95F7;&#x5934;&#x7761;&#x4E00;&#x89C9;&#xFF0C;&#x660E;&#x5929;&#x8FD8;&#x8981;&#x4E0A;&#x8BFE;&#x3002;</span><br><span class="line"></span><br><span class="line">&#x8BB0;&#x5F97;&#x6E05;&#x534E;&#x6709;&#x4E00;&#x5E74;&#x7684;&#x5BA3;&#x4F20;&#x7247;&#x53EB;&#x505A;&#x201C;&#x4F60;&#x7684;&#x6E05;&#x534E;&#xFF0C;&#x7531;&#x4F60;&#x5B9A;&#x4E49;&#x201D;&#xFF0C;&#x6211;&#x76F8;&#x4FE1;&#x6709;&#x5F88;&#x591A;&#x4F18;&#x79C0;&#x7684;&#x540C;&#x5B66;&#x771F;&#x7684;&#x627E;&#x5230;&#x4E86;&#x81EA;&#x5DF1;&#x60F3;&#x8981;&#x7684;&#x6E05;&#x534E;&#xFF0C;&#x53EF;&#x6211;&#x4E0D;&#x5728;&#x4ED6;&#x4EEC;&#x7684;&#x90A3;&#x4E2A;&#x6E05;&#x534E;&#xFF0C;&#x6211;&#x5728;&#x81EA;&#x5DF1;&#x666E;&#x901A;&#x7684;&#x6E05;&#x534E;&#x3002;</span><br><span class="line"></span><br><span class="line">&#x6211;&#x597D;&#x60F3;&#x6210;&#x4E3A;&#x90A3;&#x4E9B;&#x95EA;&#x95EA;&#x53D1;&#x5149;&#x7684;&#x4EBA;&#x554A;&#x3002;</span><br><span class="line">&#x7ED9;&#x6211;&#x4E00;&#x5F20;&#x660E;&#x4FE1;&#x7247;&#x5427;&#x3002;</span><br></pre></td></tr></table></figure>
<p>8&#x5929;&#x4E4B;&#x524D; <a href="https://closed.social/ordinary/?page=1&amp;per_page=20&amp;sort_by=time##"> 39</a></p>
<p>No. 143</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#x6211;&#x60F3;&#x6211;&#x6700;&#x666E;&#x901A;&#x7684;&#x5730;&#x65B9;&#xFF0C;&#x5C31;&#x662F;&#x4E0D;&#x60F3;&#x666E;&#x901A;&#x4E86;&#x5427;</span><br></pre></td></tr></table></figure>
<p>8&#x5929;&#x4E4B;&#x524D; <a href="https://closed.social/ordinary/?page=1&amp;per_page=20&amp;sort_by=time##"> 38</a></p>
<p>No. 142</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#x8FD9;&#x91CC;&#x7684;&#x666E;&#x901A;&#x7684;&#x5B9A;&#x4E49;&#x662F;&#x4EC0;&#x4E48;&#x5462;&#xFF1F;&#x662F;&#x4E0D;&#x4F18;&#x79C0;&#xFF1F;&#x8FD8;&#x662F;&#x8DDF;&#x201C;&#x5927;&#x591A;&#x6570;&#x4EBA;&#x201D;&#x4E00;&#x6837;&#xFF1F;</span><br><span class="line">&#x6211;&#x89C9;&#x5F97;&#x6211;&#x5C5E;&#x4E8E;&#x4E0D;&#x4F18;&#x79C0;&#x8FD9;&#x4E00;&#x7C7B;&#x3002;</span><br><span class="line">&#x5174;&#x8DA3;&#x7231;&#x597D;&#x4E00;&#x5927;&#x5806;&#x4F46;&#x6CA1;&#x6709;&#x4E00;&#x9879;&#x4F18;&#x79C0;&#xFF1B;&#x9664;&#x4E86;&#x5B66;&#x4E60;&#x6CA1;&#x6709;&#x4EFB;&#x4F55;&#x4E1C;&#x897F;&#x53EF;&#x4EE5;&#x88AB;&#x201C;&#x666E;&#x4E16;&#x201D;&#x5938;(&#x51B5;&#x4E14;&#x6211;&#x4ECE;&#x6765;&#x4E5F;&#x4E0D;&#x8BA4;&#x771F;&#x5B66;&#x4E60;)</span><br><span class="line">&#x4E0A;&#x6E05;&#x534E;&#x90FD;&#x53EA;&#x80FD;&#x7814;&#x7A76;&#x751F;&#x4E0A;&#xFF0C;&#x6BD5;&#x4E1A;&#x4E86;&#x5927;&#x6982;&#x7387;&#x4E5F;&#x505A;&#x4E0D;&#x51FA;&#x4EC0;&#x4E48;&#x6709;&#x7528;&#x7684;&#x79D1;&#x7814;&#xFF0C;&#x53EF;&#x80FD;&#x8FD8;&#x662F;&#x53BB;&#x9AD8;&#x4E2D;&#x5F53;&#x4E2A;&#x8001;&#x5E08;&#x7F62;&#x3002;</span><br><span class="line">&#x6CA1;&#x6709;&#x4EC0;&#x4E48;&#x670B;&#x53CB;&#xFF0C;&#x6709;&#x8BDD;&#x4E5F;&#x53EA;&#x80FD;&#x618B;&#x7740;&#x3002;</span><br><span class="line">&#x8BF4;&#x81EA;&#x5DF1;&#x7406;&#x60F3;&#x4E3B;&#x4E49;&#x5427;&#xFF0C;&#x4E5F;&#x4ECE;&#x6765;&#x6CA1;&#x6709;&#x4ED8;&#x51FA;&#x884C;&#x52A8;&#x3002;</span><br><span class="line">&#x8FDE;&#x53C2;&#x52A0;&#x7279;&#x666E;&#x901A;&#x5956;&#x8BC4;&#x9009;&#x4E5F;&#x53EA;&#x662F;&#x4E3A;&#x4E86;&#x4E00;&#x5F20;&#x660E;&#x4FE1;&#x7247;&#x3002;</span><br><span class="line">&#x7B97;&#x4E86;&#xFF0C;&#x665A;&#x4E0A;&#x518D;&#x53BB;qq&#x62AB;&#x8428;&#x653E;&#x7EB5;&#x4E00;&#x665A;&#xFF08;</span><br></pre></td></tr></table></figure>
<p>8&#x5929;&#x4E4B;&#x524D; <a href="https://closed.social/ordinary/?page=1&amp;per_page=20&amp;sort_by=time##"> 16</a></p>
<p>No. 141</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#x201C;</span><br><span class="line">&#x6709;&#x4E00;&#x4E2A;&#x4EBA;&#x5728;&#x6E05;&#x534E;&#x770B;&#x89C1;&#x4E00;&#x540D;&#x5B66;&#x751F;&#xFF0C;&#x4E8E;&#x662F;&#x5C31;&#x4EA7;&#x751F;&#x4E86;&#x5927;&#x81F4;&#x5982;&#x4E0B;&#x7684;&#x5BF9;&#x8BDD;&#xFF1A;</span><br><span class="line">&quot;&#x4F60;&#x90A3;&#x4E48;&#x5185;&#x5377;&#x4E3A;&#x4E86;&#x662F;&#x4EC0;&#x4E48;&#x5440;?&quot;</span><br><span class="line">&quot;&#x4E3A;&#x4E86;&#x51FA;&#x56FD;/&#x4FDD;&#x7814;&#x3002;&quot;</span><br><span class="line">&quot; &#x4F60;&#x51FA;&#x56FD;/&#x4FDD;&#x7814;&#x505A;&#x4EC0;&#x4E48;&#x5440;?&quot; </span><br><span class="line">&#x201C;&#x62FF;&#x6237;&#x53E3;&#xFF0C;&#x8D5A;&#x94B1;&#xFF0C;&#x5A36;&#x5AB3;&#x5987;&#x5457;&#x3002;&#x201D;</span><br><span class="line">&#x201C;&#x5A36;&#x5B8C;&#x5AB3;&#x5987;&#x5462;&#xFF1F;&#x201D;</span><br><span class="line">&#x201C;&#x751F;&#x5A03;&#x3002;&#x201D;</span><br><span class="line">&#x201C;&#x7136;&#x540E;&#x5462;&#xFF1F;&#x201D;</span><br><span class="line">&#x201C;&#x563B;&#x563B;.... &#x8BA9;&#x5B69;&#x5B50;&#x8003;&#x6E05;&#x534E;&#x5440;&#x201D;</span><br><span class="line">&#x201D;</span><br></pre></td></tr></table></figure>
<p>8&#x5929;&#x4E4B;&#x524D; <a href="https://closed.social/ordinary/?page=1&amp;per_page=20&amp;sort_by=time##"> 35</a></p>
<p>No. 140</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#x62DB;&#x751F;&#x5BA3;&#x4F20;&#x7247;&#x91CC;&#x8BF4;&#xFF0C;&#x6E05;&#x534E;&#x7684;&#x821E;&#x53F0;&#x8DB3;&#x591F;&#x5927;</span><br><span class="line">&#x53EF;&#x662F;&#xFF0C;&#x805A;&#x5149;&#x706F;&#x4E0B;&#x7684;&#x4F4D;&#x7F6E;&#xFF0C;&#x5374;&#x5C11;&#x5F97;&#x53EF;&#x601C;</span><br></pre></td></tr></table></figure>
<p>8&#x5929;&#x4E4B;&#x524D; <a href="https://closed.social/ordinary/?page=1&amp;per_page=20&amp;sort_by=time##"> 41</a></p>
<p>No. 139</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#x5B66;&#x7740;&#x6750;&#x6599;&#x5B66;&#x77E5;&#x9053;&#x6750;&#x6599;&#x6CA1;&#x524D;&#x9014;&#x3002;&#x770B;&#x4E0D;&#x61C2;&#x56FA;&#x4F53;&#x7269;&#x7406;&#x91CF;&#x5B50;&#x7EDF;&#x8BA1;&#x4F46;&#x662F;&#x786C;&#x7740;&#x5934;&#x76AE;&#x62FC;&#x5C3D;&#x5168;&#x529B;&#x4E5F;&#x8981;&#x8003;&#x4E2A;c+&#x3002;&#x867D;&#x7136;&#x660E;&#x77E5;&#x6BD5;&#x4E1A;&#x4E86;&#x5927;&#x6982;&#x7387;&#x4E5F;&#x5C31;&#x662F;&#x53BB;&#x5F53;&#x4E2A;&#x5316;&#x5B66;&#x8001;&#x5E08;&#xFF0C;&#x4F9D;&#x7136;&#x4E0D;&#x5F97;&#x4E0D;&#x5B66;&#x7740;&#x65E0;&#x8DA3;&#x7684;&#x4E1C;&#x897F;&#x3002;</span><br></pre></td></tr></table></figure>
<p>8&#x5929;&#x4E4B;&#x524D; <a href="https://closed.social/ordinary/?page=1&amp;per_page=20&amp;sort_by=time##"> 22</a></p>
<p>No. 138</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#x6CA1;&#x4EC0;&#x4E48;&#x660E;&#x786E;&#x7684;&#x76EE;&#x6807;&#xFF0C;&#x5C31;&#x60F3;&#x6BD5;&#x4E1A;&#x4E4B;&#x540E;&#x627E;&#x4E2A;&#x80FD;&#x517B;&#x6D3B;&#x81EA;&#x5DF1;&#x7684;&#x5DE5;&#x4F5C;&#xFF0C;&#x80FD;&#x6709;&#x5E78;&#x798F;&#x7684;&#x5BB6;&#x5EAD;&#x3002;&#x672C;&#x4E13;&#x4E1A;&#x7684;&#x8BFE;&#x8FD8;&#x633A;&#x559C;&#x6B22;&#xFF0C;&#x4F46;&#x603B;&#x662F;&#x82E6;&#x4E8E;&#x4E8B;&#x60C5;&#x592A;&#x591A;&#x6CA1;&#x65F6;&#x95F4;&#x5B66;&#x4E60;&#x3002;&#x603B;&#x662F;&#x7761;&#x4E0D;&#x597D;&#x89C9;&#xFF0C;&#x6BCF;&#x5929;&#x90FD;&#x7761;&#x5230;&#x5F88;&#x665A;&#xFF0C;&#x6BCF;&#x5468;&#x8FD8;&#x8981;&#x4E00;&#x4E24;&#x5929;&#x8865;&#x89C9;&#xFF0C;&#x5F88;&#x4E0D;&#x559C;&#x6B22;&#x8FD9;&#x79CD;&#x72B6;&#x6001;&#x4F46;&#x53C8;&#x96BE;&#x4EE5;&#x6539;&#x53D8;&#x3002;</span><br></pre></td></tr></table></figure>
<p>9&#x5929;&#x4E4B;&#x524D; <a href="https://closed.social/ordinary/?page=1&amp;per_page=20&amp;sort_by=time##"> 23</a></p>
<p>No. 137</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#x6211;&#x7684;&#x666E;&#x901A;&#x4F53;&#x73B0;&#x5728;&#xFF1A;&#x6BCF;&#x5929;&#x90FD;&#x60F3;&#x52AA;&#x529B;&#x8BC1;&#x660E;&#x81EA;&#x5DF1;&#x4E0D;&#x666E;&#x901A;&#xFF0C;&#x672A;&#x679C;&#x3002;</span><br></pre></td></tr></table></figure>
<p>9&#x5929;&#x4E4B;&#x524D; <a href="https://closed.social/ordinary/?page=1&amp;per_page=20&amp;sort_by=time##"> 26</a></p>
<p>No. 136</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#x5728;&#x521A;&#x8FDB;&#x5165;&#x6E05;&#x534E;&#x7684;&#x65F6;&#x5019;&#xFF0C;&#x6211;&#x662F;&#x7279;&#x5F81;&#x9C9C;&#x660E;&#x7684;&#xFF08;&#x67D0;&#x4E2A;&#x610F;&#x4E49;&#x4E0A;&#x4E5F;&#x66F4;&#x7B80;&#x5355;&#xFF09;&#xFF0C;&#x6781;&#x5EA6;&#x7406;&#x6027;&#x4E3B;&#x4E49;&#xFF0C;&#x793E;&#x4F1A;&#x8FBE;&#x5C14;&#x6587;&#x503E;&#x5411;&#xFF0C;&#x575A;&#x4FE1;&#x4E00;&#x5207;&#x90FD;&#x5728;&#x63A7;&#x5236;&#x4E2D;&#x3002;&#x5F53;&#x7136;&#xFF0C;&#x8FD9;&#x79CD;&#x7279;&#x8D28;&#x5728;&#x6E05;&#x534E;&#x53EF;&#x80FD;&#x662F;&#x70C2;&#x5927;&#x8857;&#x7684;&#xFF0C;&#x4F46;&#x8FD9;&#x79CD;&#x4EBA;&#x53EF;&#x4ECE;&#x6765;&#x4E0D;&#x4F1A;&#x8BA4;&#x4E3A;&#x81EA;&#x5DF1;&#x662F;&#x201C;&#x666E;&#x901A;&#x201D;&#x7684;&#x3002;</span><br><span class="line"></span><br><span class="line">&#x7136;&#x540E;&#x6211;&#x4E00;&#x8DEF;&#x54B8;&#x9C7C;&#x5230;&#x4E86;&#x5927;&#x4E09;&#xFF0C;&#x88AB;&#x91CD;&#x51FB;&#x4E86;&#x4E00;&#x53D1;&#xFF08;&#x8D35;&#x7CFB;&#x7684;&#x7279;&#x8272;&#x8BFE;&#x7A0B;&#x5206;&#x5E03;&#xFF09;&#xFF0C;&#x5728;&#x610F;&#x8BC6;&#x5230;&#x5F88;&#x591A;&#x4E8B;&#x60C5;&#x4E0D;&#x7531;&#x6211;&#x7684;&#x610F;&#x5FD7;&#x6539;&#x53D8;&#x6216;&#x8005;&#x6211;&#x7684;&#x80FD;&#x529B;&#x65E0;&#x6CD5;&#x6539;&#x53D8;&#x540E;&#xFF0C;&#x6211;&#x4E00;&#x5EA6;&#x53D8;&#x5F97;&#x201C;&#x4F5B;&#x7CFB;&#x201D;&#x8D77;&#x6765;&#xFF0C;&#x8FDE;&#x5E26;&#x7740;&#x6C89;&#x5165;&#x4E86;&#x76F8;&#x5F53;&#x7684;&#x5C01;&#x95ED;&#x4E2D;&#x3002;&#x4E0D;&#x8FC7;&#x5728;&#x51E0;&#x4E2A;&#x6708;&#x7684;&#x5C01;&#x95ED;&#x540E;&#xFF0C;&#x6211;&#x53C8;&#x4E00;&#x6B21;&#x627E;&#x5230;&#x4E86;&#x5766;&#x7136;&#x4E0E;&#x5B8C;&#x5907;&#xFF0C;&#x91CD;&#x65B0;&#x8F6C;&#x8EAB;&#x9762;&#x5411;&#x5916;&#x7269;&#xFF0C;&#x6574;&#x4E2A;&#x5FC3;&#x8DEF;&#x8F6C;&#x53D8;&#x7684;&#x6D41;&#x7A0B;&#x6211;&#x81F3;&#x4ECA;&#x4E5F;&#x6CA1;&#x5B8C;&#x5168;&#x7406;&#x51FA;&#x6765;&#xFF0C;&#x4F46;&#x81F3;&#x5C11;&#x9700;&#x8981;&#x611F;&#x8C22;&#x611F;&#x8C22;&#x65E5;&#x5E38;&#x62C9;&#x6211;&#x8FD0;&#x52A8;&#x7684;&#x548C;&#x5468;&#x5E38;&#x548C;&#x6211;&#x8C08;&#x8BBA;&#x54F2;&#x5B66;&#x7684;&#x4FE9;&#x670B;&#x53CB;&#x5427;&#x3002;</span><br><span class="line"></span><br><span class="line">&#x8FD9;&#x6BB5;&#x7ECF;&#x5386;&#x5F88;&#x5947;&#x5999;&#xFF0C;&#x7528;&#x7834;&#x8327;&#x6253;&#x6BD4;&#x65B9;&#x4E0D;&#x5BF9;&#xFF08;&#x4F46;&#x7684;&#x786E;&#x662F;&#x5728;&#x81EA;&#x6211;&#x5C01;&#x95ED;&#x4E2D;&#x5B8C;&#x6210;&#x7684;&#x6DF7;&#x4E71;&#x7684;&#x91CD;&#x5851;&#xFF09;&#xFF0C;&#x56E0;&#x4E3A;&#x5728;&#x4E4B;&#x540E;&#x5E76;&#x4E0D;&#x6BD4;&#x4E4B;&#x524D;&#x66F4;&#x7F8E;&#x4E3D;&#xFF0C;&#x7528;&#x738B;&#x5C0F;&#x6CE2;&#x7684;&#x201C;&#x9524;&#x725B;&#x201D;&#x6253;&#x6BD4;&#x65B9;&#x4E5F;&#x4E0D;&#x5BF9;&#xFF08;&#x4F46;&#x786E;&#x5B9E;&#x5F88;&#x50CF;&#x201C;&#x751F;&#x6D3B;&#x5C31;&#x662F;&#x4E2A;&#x7F13;&#x6162;&#x53D7;&#x9524;&#x7684;&#x8FC7;&#x7A0B;&#x201D;&#xFF09;&#xFF0C;&#x56E0;&#x4E3A;&#x5728;&#x4E4B;&#x524D;&#x4E5F;&#x5E76;&#x4E0D;&#x6BD4;&#x4E4B;&#x540E;&#x66F4;&#x96C4;&#x5FC3;&#x3002;&#x603B;&#x4E4B;&#x6211;&#x8FD8;&#x662F;&#x6211;&#xFF0C;&#x524D;&#x540E;&#x5E73;&#x7B49;&#xFF0C;&#x6CA1;&#x6709;&#x9AD8;&#x4F4E;&#xFF0C;&#x6211;&#x5BF9;&#x6B64;&#x7684;&#x6700;&#x597D;&#x7684;&#x8BF4;&#x6CD5;&#x662F;&#xFF0C;&#x201C;&#x6211;&#x5728;&#x538B;&#x529B;&#x4E2D;&#x4F4E;&#x4E0B;&#x8EAB;&#xFF0C;&#x63A5;&#x8FD1;&#x4E86;&#x5F71;&#x5B50;&#xFF0C;&#x800C;&#x518D;&#x6B21;&#x8D77;&#x8EAB;&#x65F6;&#xFF0C;&#x5E26;&#x4E0A;&#x4E86;&#x4E00;&#x90E8;&#x5206;&#x539F;&#x672C;&#x5BF9;&#x7ACB;&#x7684;&#x5F71;&#x5B50;&#x3002;&#x201D;&#x6211;&#x662F;&#x5426;&#x5B9A;&#x7684;&#x7CBE;&#x7075;&#xFF0C;&#x662F;&#x6D6E;&#x58EB;&#x5FB7;&#x535A;&#x58EB;&#xFF0C;&#x6211;&#x4F1A;&#x65E0;&#x4F11;&#x5730;&#x8FFD;&#x5BFB;&#x4E00;&#x53E5;&#x8BDD;&#xFF0C;&#x201C;Verweile doch, du bist so sch&#xF6;n!&#x201D;&#xFF08;&#x771F;&#x7F8E;&#x554A;&#xFF0C;&#x8BF7;&#x505C;&#x4E0B;&#x6765;&#x5427;&#xFF01;&#xFF09;</span><br><span class="line"></span><br><span class="line">&#x73B0;&#x5728;&#x6211;&#x4ECD;&#x7136;&#x81EA;&#x89C6;&#x4E0D;&#x201C;&#x666E;&#x901A;&#x201D;&#xFF0C;&#x6BD5;&#x7ADF;&#x4E0D;&#x5B58;&#x5728;&#x4E00;&#x4E2A;&#x4E0E;&#x6211;&#x5185;&#x5FC3;&#x4E92;&#x4E3A;&#x6479;&#x5199;&#x4E4B;&#x4EBA;&#xFF0C;&#x9700;&#x8981;&#x600E;&#x6837;&#x7684;&#x5DE7;&#x5408;&#x624D;&#x80FD;&#x5728;&#x53E6;&#x4E00;&#x4E2A;&#x5185;&#x5FC3;&#x590D;&#x5236;&#x540C;&#x6837;&#x7684;&#x51B2;&#x7A81;&#x548C;&#x7EDF;&#x4E00;&#x5462;&#xFF1F;&#x4F46;&#x53E6;&#x5916;&#x4E00;&#x65B9;&#x9762;&#xFF0C;&#x6211;&#x4E5F;&#x627F;&#x8BA4;&#x81EA;&#x6211;&#x7684;&#x201C;&#x666E;&#x901A;&#x201D;&#xFF0C;&#x6BD5;&#x7ADF;&#x5728;&#x76F8;&#x5F53;&#x591A;&#x7684;&#x53EF;&#x8BC4;&#x5224;&#x7684;&#x7EF4;&#x5EA6;&#x4E0A;&#xFF0C;&#x6211;&#x8FD8;&#x662F;&#x843D;&#x5728;&#x4E86;&#x5468;&#x56F4;&#x73AF;&#x5883;&#x7684;&#x5927;&#x805A;&#x7C7B;&#x4E2D;&#x3002;&#x4F60;&#x770B;&#xFF0C;&#x6211;&#x559C;&#x6B22;&#x7B11;&#x7740;&#x4EE5;&#x54B8;&#x9C7C;&#x81EA;&#x79F0;&#xFF0C;&#x62B1;&#x6028;&#x79D1;&#x7814;&#x7684;&#x9EBB;&#x70E6;&#x4E8B;&#xFF08;&#x60F3;&#x4E00;&#x60F3;&#x4E0B;&#x5B66;&#x671F;&#x8FD8;&#x4F1A;&#x6210;&#x4E3A;&#x5F53;&#x5E74;&#x88AB;&#x6298;&#x817E;&#x7684;&#x8BFE;&#x7684;&#x52A9;&#x6559;&#xFF09;&#xFF0C;&#x8BF4;&#x7740;&#x90A3;&#x4E9B;&#x5728;&#x6E05;&#x534E;&#x65E0;&#x6570;&#x89D2;&#x843D;&#x90FD;&#x6709;&#x7684;&#x5BF9;&#x8BDD;&#xFF0C;&#x4E5F;&#x559C;&#x6B22;&#x5728;&#x8336;/&#x5496;&#x5561;/&#x9152;&#x7CBE;&#x4E2D;&#x7545;&#x8C08;&#xFF0C;&#x4E3A;&#x5171;&#x9E23;&#x5185;&#x5FC3;&#x7684;&#x6700;&#x72EC;&#x7279;&#x7684;&#x9891;&#x7387;&#x800C;&#x98A4;&#x6817;&#x4E0D;&#x5DF2;&#x3002;</span><br><span class="line"></span><br><span class="line">&#x6240;&#x4EE5;&#x201C;&#x666E;&#x5956;&#x201D;&#x5230;&#x5E95;&#x4F1A;&#x600E;&#x4E48;&#x9009;&#x51FA;&#x6765;&#x5462;&#xFF1F;&#x82E5;&#x4EE5;&#x90A3;&#x4E9B;&#x201C;&#x666E;&#x901A;&#x201D;&#x7684;&#x7EF4;&#x5EA6;&#xFF0C;&#x6210;&#x7EE9;&#x554A;&#x79D1;&#x7814;&#x554A;&#x793E;&#x5DE5;&#x554A;&#xFF0C;&#x6050;&#x6015;&#x8981;&#x4E48;&#x5168;&#x53D1;&#x8981;&#x4E48;&#x968F;&#x673A;&#x4E86;&#x7F62;&#x3002;&#x4F46;&#x8981;&#x662F;&#x771F;&#x8981;&#x62FF;&#x5176;&#x4ED6;&#x7EF4;&#x5EA6;&#xFF0C;&#x6211;&#x90FD;&#x81EA;&#x8BA4;&#x4E0D;&#x666E;&#x901A;&#x4E86;&#x4F30;&#x6478;&#x7740;&#x4E5F;&#x6CA1;&#x5565;&#x6307;&#x671B;&#x3002;&#x6211;&#x8FD8;&#x7EA0;&#x7ED3;&#x4E86;&#x4E00;&#x9635;&#x5B50;&#x5F53;&#x8BC4;&#x59D4;&#x8FD8;&#x662F;&#x62A5;&#x540D;&#xFF0C;&#x4E0D;&#x8FC7;&#x4F60;&#x4EEC;&#x6709;&#x4E00;&#x4E2A;&#x597D;&#xFF0C;&#x5C31;&#x662F;5&#x4E2A;&#x8D5E;&#x5C31;&#x53D1;&#x660E;&#x4FE1;&#x7247;&#xFF0C;&#x60F3;&#x60F3;&#x8FD8;&#x662F;&#x62A5;&#x540D;&#x66F4;&#x597D;&#x73A9;&#x5427;&#x3002;</span><br></pre></td></tr></table></figure>
<p>10&#x5929;&#x4E4B;&#x524D; <a href="https://closed.social/ordinary/?page=1&amp;per_page=20&amp;sort_by=time##"> 42</a></p>
<p>No. 135</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#x4E0D;&#x77E5;&#x9053;&#x6709;&#x591A;&#x5C11;&#x4EBA;&#x548C;&#x6211;&#x4E00;&#x6837;&#xFF0C;</span><br><span class="line">&#x603B;&#x89C9;&#x5F97;&#x81EA;&#x5DF1;&#x5E76;&#x4E0D;&#x51FA;&#x4F17;&#xFF0C;&#x6709;&#x65F6;&#x5019;&#x751A;&#x81F3;&#x8FD8;&#x4F1A;&#x6709;&#x4E9B;&#x5C0F;&#x81EA;&#x5351;&#xFF0C;&#x6CA1;&#x6709;&#x624D;&#x827A;&#x4E0D;&#x61C2;&#x4E50;&#x5668;&#xFF0C;&#x552F;&#x4E00;&#x5269;&#x4E0B;&#x7684;&#x5B66;&#x4E60;&#x4E5F;&#x4E0D;&#x662F;&#x6700;&#x4F18;&#x79C0;&#x3002;</span><br><span class="line">&#x6709;&#x65F6;&#x5019;&#x770B;&#x7740;&#x522B;&#x4EBA;&#x611F;&#x89C9;&#x8FD9;&#x4E2A;&#x4EBA;&#x597D;&#x6709;&#x8DA3;&#x554A;&#xFF0C;&#x6240;&#x4EE5;&#x4F1A;&#x4E0D;&#x81EA;&#x89C9;&#x7684;&#x53BB;&#x6A21;&#x4EFF;&#xFF0C;&#x4E5F;&#x60F3;&#x8BD5;&#x7740;&#x6210;&#x4E3A;&#x6709;&#x8DA3;&#x7684;&#x7075;&#x9B42;&#xFF0C;&#x90FD;&#x8BF4;&#x8981;&#x505A;&#x81EA;&#x5DF1;&#xFF0C;&#x53EF;&#x662F;&#x522B;&#x4EBA;&#x662F;&#x95EA;&#x95EA;&#x53D1;&#x5149;&#x7684;&#x8BDD;&#xFF0C;&#x5F53;&#x7136;&#x4F1A;&#x4E0D;&#x81EA;&#x89C9;&#x7684;&#x60F3;&#x53BB;&#x6210;&#x4E3A;&#x90A3;&#x4E2A;&#x4EBA;&#x5427;&#x3002;</span><br><span class="line">&#x6709;&#x65F6;&#x5019;&#x4F1A;&#x7A81;&#x7136;&#x611F;&#x89C9;&#xFF0C;&#x4EC0;&#x4E48;&#x554A;&#xFF0C;&#x81EA;&#x5DF1;&#x8FD8;&#x662F;&#x5F88;&#x5389;&#x5BB3;&#x7684;&#x561B;&#xFF0C;&#x4F46;&#x662F;&#x5728;&#x7167;&#x7167;&#x955C;&#x5B50;&#xFF0C;&#x5374;&#x53D1;&#x73B0;&#x4E09;&#x5206;&#x949F;&#x70ED;&#x5EA6;&#x8FC7;&#x4E86;&#x4EE5;&#x540E;&#xFF0C;&#x81EA;&#x5DF1;&#x8FD8;&#x662F;&#x90A3;&#x4E48;&#x666E;&#x901A;&#x3002;</span><br><span class="line">&#x6709;&#x65F6;&#x5019;&#x4F1A;&#x60F3;&#x7740;&#xFF0C;&#x53EF;&#x80FD;&#x81EA;&#x5DF1;&#x662F;&#x72EC;&#x4E00;&#x65E0;&#x4E8C;&#x7684;&#xFF0C;&#x611F;&#x89C9;&#x8D85;&#x7EA7;&#x6210;&#x719F;&#xFF0C;&#x4F46;&#x662F;&#x770B;&#x7740;&#x81EA;&#x5DF1;&#x5E73;&#x65F6;&#x7684;&#x8868;&#x73B0;&#x53C8;&#x4F1A;&#x610F;&#x8BC6;&#x5230;&#xFF0C;&#x539F;&#x6765;&#xFF0C;&#x81EA;&#x5DF1;&#x4E5F;&#x53EA;&#x662F;&#x4E2A;&#x5E7C;&#x7A1A;&#x7684;&#x5B69;&#x5B50;&#x554A;&#x3002;</span><br><span class="line">&#x5F53;&#x6709;&#x559C;&#x6B22;&#x7684;&#x4EBA;&#x7684;&#x65F6;&#x5019;&#xFF0C;&#x6211;&#x4F1A;&#x767E;&#x822C;&#x72B9;&#x8C6B;&#xFF0C;&#x5BB3;&#x6015;&#x88AB;&#x62D2;&#x7EDD;&#xFF0C;&#x62C5;&#x5FC3;&#x81EA;&#x5DF1;&#x914D;&#x4E0D;&#x4E0A;&#xFF0C;&#x538B;&#x6291;&#x7740;&#x81EA;&#x5DF1;&#x76F4;&#x5230;&#x8FD9;&#x4EFD;&#x611F;&#x60C5;&#x6D88;&#x5931;&#x3002;</span><br><span class="line">&#x8FD9;&#x5C31;&#x662F;&#x6211;&#xFF0C;&#x654F;&#x611F;&#xFF0C;&#x7565;&#x5FAE;&#x81EA;&#x5351;&#xFF0C;&#x8FD8;&#x6709;&#x4E9B;&#xFF0C;&#x6002;&#x4F46;&#x662F;&#x4E5F;&#x5411;&#x5F80;&#x7740;&#x751F;&#x6D3B;&#x7684;&#x7F8E;&#x597D;&#xFF0C;&#x8FD9;&#x6837;&#x7684;&#x4E00;&#x4E2A;&#x4EBA;&#x3002;</span><br></pre></td></tr></table></figure>
<p>10&#x5929;&#x4E4B;&#x524D; <a href="https://closed.social/ordinary/?page=1&amp;per_page=20&amp;sort_by=time##"> 30</a></p>
<p>No. 134</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#x666E;&#x901A;&#x4E0D;&#x7B49;&#x4E8E;&#x4E00;&#x4E8B;&#x65E0;&#x6210;&#xFF0C;&#x6709;&#x6210;&#x6709;&#x8D25;&#xFF0C;&#x5E76;&#x4E0D;&#x8000;&#x773C;&#xFF0C;&#x5C31;&#x662F;&#x666E;&#x901A;&#x3002;</span><br><span class="line">&#x590D;&#x8BFB;&#x624D;&#x8FDB;&#x6765;&#xFF0C;&#x8FDB;&#x4E86;&#x7ECF;&#x7BA1;&#x624D;&#x771F;&#x6B63;&#x4F53;&#x4F1A;&#x5230;&#x81EA;&#x5DF1;&#x7684;&#x666E;&#x901A;&#x3002;</span><br><span class="line">&#x7EE9;&#x70B9;&#x5728;&#x5E74;&#x7EA7;&#x540E;&#x767E;&#x5206;&#x4E4B;&#x4E09;&#x5341;&#xFF0C;&#x7531;&#x4E8E;&#x4E2D;&#x5B66;&#x5B66;&#x6587;&#x79D1;&#x5FAE;&#x79EF;&#x5206;&#x7EBF;&#x6027;&#x4EE3;&#x6570;&#x90FD;&#x662F;2&#x5F00;&#x5934;&#xFF0C;&#x5176;&#x4E2D;&#x5FAE;&#x79EF;&#x5206;&#x66F4;&#x662F;&#x4FEE;&#x4E86;&#x56DB;&#x4E2A;&#x5B66;&#x671F;&#x4FEE;&#x904D;ABC&#x3002;&#x4F46;&#x662F;&#x6CA1;&#x653E;&#x5F03;&#x79D1;&#x7814;&#x68A6;&#x60F3;&#xFF0C;&#x8FD8;&#x5728;&#x5B66;&#x6570;&#x7406;&#x76F8;&#x5173;&#x7684;&#x8BFE;&#xFF0C;&#x7B2C;&#x4E00;&#x95E8;&#x4E0A;3&#x7684;&#x6570;&#x5B66;&#x8BFE;&#x662F;&#x5B9E;&#x5206;&#x6790;&#x3002;&#x73B0;&#x5728;&#x60F3;&#x8BD5;&#x8BD5;&#x6709;&#x6CA1;&#x6709;&#x53EF;&#x80FD;&#x5F04;&#x4E00;&#x95E8;&#x4E0A;4&#x7684;&#x3002;</span><br><span class="line">&#x70ED;&#x7231;&#x79D1;&#x7814;&#xFF0C;&#x624B;&#x4E0A;&#x4E5F;&#x6709;&#x82E5;&#x5E72;&#x9879;&#x76EE;&#xFF0C;&#x81EA;&#x5DF1;&#x5F00;&#x7684;&#x8001;&#x5E08;&#x7ED9;&#x7684;&#xFF0C;&#x65F6;&#x4E0D;&#x65F6;&#x9879;&#x76EE;&#x505C;&#x6EDE;&#x4E00;&#x4FE9;&#x6708;&#xFF0C;&#x67E5;&#x8D44;&#x6599;&#x4E2D;&#x3002;&#x4E5F;&#x4E0D;&#x77E5;&#x9053;&#x8FD8;&#x80FD;&#x4E0D;&#x80FD;&#x51FA;&#x56FD;&#xFF0C;&#x591A;&#x4E2A;&#x9009;&#x62E9;&#x603B;&#x662F;&#x597D;&#xFF0C;&#x6258;&#x798F;&#x4E09;&#x6218;&#x5907;&#x8003;&#x4E2D;&#x3002;&#x4E5F;&#x4E0D;&#x77E5;&#x9053;&#x4E3A;&#x4E86;&#x8BFB;&#x5230;&#x535A;&#x58EB;&#x9700;&#x8981;&#x71AC;&#x591A;&#x4E45;&#x3002;</span><br><span class="line">&#x4E09;&#x4E2A;&#x6708;&#x524D;&#x624D;&#x8131;&#x5355;&#xFF0C;&#x5BF9;&#x8C61;&#x662F;&#x73B0;&#x5728;&#x6BD4;&#x81EA;&#x5DF1;&#x5927;&#x4E00;&#x5C4A;&#x7684;&#x9AD8;&#x4E2D;&#x540E;&#x684C;&#xFF0C;&#x521A;&#x4FDD;&#x4E0A;&#x7814;&#x3002;&#x6211;&#x81EA;&#x5DF1;&#x73B0;&#x5728;&#x6B63;&#x5728;&#x4E3A;&#x524D;&#x9014;&#x62C5;&#x5FE7;&#xFF0C;&#x62C5;&#x5FE7;&#x548C;&#x5BF9;&#x65B9;&#x7684;&#x672A;&#x6765;&#x3002;</span><br></pre></td></tr></table></figure>
<p>10&#x5929;&#x4E4B;&#x524D; <a href="https://closed.social/ordinary/?page=1&amp;per_page=20&amp;sort_by=time##"> 18</a></p>
<p>No. 133</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#x8FD9;&#x4E2A;&#x5956;&#x5B66;&#x91D1;&#x6211;&#x5FD7;&#x5728;&#x5FC5;&#x5F97;</span><br><span class="line">&#x6211;&#x53EA;&#x9700;&#x8981;&#x8BF4;&#x4E00;&#x53E5;&#x8BDD;</span><br><span class="line">&#x7261;&#x4E39;&#x4E8C;&#x5341;&#x591A;&#x5E74;&#x6CA1;&#x6709;&#x5973;&#x670B;&#x53CB;</span><br></pre></td></tr></table></figure>
<p>12&#x5929;&#x4E4B;&#x524D; <a href="https://closed.social/ordinary/?page=1&amp;per_page=20&amp;sort_by=time##"> 21</a></p>
<p>No. 132</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#x611F;&#x89C9;&#x6211;&#x5FC3;&#x6001;&#x8FD8;&#x662F;&#x4E0D;&#x9519;&#x7684;&#x54C8;&#xFF0C;&#x5728;&#x81EA;&#x5DF1;&#x7684;&#x4E16;&#x754C;&#x91CC;&#x5149;&#x9C9C;&#x4EAE;&#x4E3D;&#x7F62;&#x4E86;&#x3002;</span><br></pre></td></tr></table></figure>
<p>12&#x5929;&#x4E4B;&#x524D; <a href="https://closed.social/ordinary/?page=1&amp;per_page=20&amp;sort_by=time##"> 10</a></p>
<p>No. 131</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#x4ECD;&#x672A;&#x77E5;&#x6653;&#x4E16;&#x754C;&#x4E0E;&#x751F;&#x6D3B;&#x5C3D;&#x5934;&#x5728;&#x4F55;&#x65B9;</span><br><span class="line">&#x4E5F;&#x4E0D;&#x77E5;&#x9053;&#x5982;&#x4F55;&#x624D;&#x80FD;&#x5728;&#x4EBA;&#x751F;&#x8DEF;&#x4E0A;&#x65E0;&#x60B2;&#x65E0;&#x4F24;</span><br><span class="line">&#x6BCF;&#x4E2A;&#x4EBA;&#x5FC3;&#x4E2D;&#x603B;&#x6709;&#x4E9B;&#x60F3;&#x6CD5;&#xFF0C;&#x4E5F;&#x603B;&#x6709;&#x4E9B;&#x52C7;&#x6C14;</span><br><span class="line">&#x603B;&#x6709;&#x67D0;&#x4E00;&#x77AC;&#x95F4;&#xFF0C;&#x80FD;&#x591F;&#x5B9E;&#x73B0;&#x81EA;&#x5DF1;&#x7684;&#x68A6;&#x60F3;</span><br><span class="line">&#x770B;&#x7740;&#x5929;&#x4E0A;&#x4E91;&#x8212;&#x4E91;&#x5377;</span><br><span class="line">&#x65E5;&#x6708;&#x8F6E;&#x56DE;  &#x661F;&#x8FB0;&#x4E07;&#x5343;</span><br><span class="line">&#x68A6;&#x9192;&#x4E4B;&#x540E;&#x7684;&#x65B0;&#x7684;&#x6668;&#x66E6;&#xFF0C;&#x4E5F;&#x8981;&#x91CD;&#x65B0;&#x8FC8;&#x6B65;&#x5411;&#x524D;</span><br></pre></td></tr></table></figure>
<p>12&#x5929;&#x4E4B;&#x524D; <a href="https://closed.social/ordinary/?page=1&amp;per_page=20&amp;sort_by=time##"> 17</a></p>
<p>No. 130</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#x6211;&#x662F;&#x4E00;&#x4E2A;&#x7814;&#x4E00;&#x65B0;&#x751F;</span><br><span class="line">&#x8981;&#x8BF4;&#x6709;&#x591A;&#x666E;&#x901A;</span><br><span class="line">&#x4E0A;&#x5468;&#x82F1;&#x8BED;&#x8BFE;&#x9700;&#x8981;&#x8BB2;&#x4E00;&#x4E2A;&#x81EA;&#x5DF1;&#x7684;&#x6545;&#x4E8B;&#xFF0C;&#x5173;&#x4E8E;&#x81EA;&#x5DF1;&#x4EE4;&#x4EBA;&#x611F;&#x5230;&#x8BB0;&#x5FC6;&#x6DF1;&#x523B;&#x7684;&#x6545;&#x4E8B;&#xFF0C;&#x6211;&#x601D;&#x8003;&#x4E86;&#x826F;&#x4E45;&#xFF0C;&#x597D;&#x50CF;&#x6CA1;&#x6709;</span><br><span class="line">&#x6CA1;&#x6709;&#x4EC0;&#x4E48;&#x6545;&#x4E8B;&#x503C;&#x5F97;&#x8BF4;&#x51FA;&#x53E3;</span><br><span class="line">&#x9AD8;&#x4E2D;&#x65F6;&#x53EA;&#x4F1A;&#x95F7;&#x5934;&#x5B66;&#x4E60;&#xFF0C;&#x5927;&#x5B66;&#x66F4;&#x662F;&#x53EA;&#x4F1A;&#x5377;GPA&#xFF0C;&#x8BFB;&#x7814;&#x4E86;&#x8FDE;&#x4EF6;&#x559C;&#x6B22;&#x7684;&#x4E8B;&#x60C5;&#x90FD;&#x627E;&#x4E0D;&#x5230;&#xFF0C;&#x6211;&#x751A;&#x81F3;&#x6CA1;&#x8C08;&#x8FC7;&#x604B;&#x7231;</span><br><span class="line"></span><br><span class="line">&#x6709;&#x65F6;&#x53C8;&#x89C9;&#x5F97;&#x81EA;&#x5DF1;&#x5E76;&#x4E0D;&#x666E;&#x901A;&#xFF0C;&#x6211;&#x66FE;&#x60F3;&#x547D;&#x7531;&#x6211;&#x4E0D;&#x7531;&#x5929;&#xFF0C;&#x6211;&#x53C8;&#x6709;&#x591A;&#x4E48;&#x4F18;&#x79C0;&#x624D;&#x80FD;&#x6765;&#x5230;&#x5927;&#x6E05;&#x8BFB;&#x4E66;&#xFF0C;&#x4F46;&#x5728;&#x8FD9;&#x91CC;&#x6211;&#x53EA;&#x662F;&#x4E00;&#x4E2A;&#x666E;&#x901A;&#x4EBA;&#xFF0C;&#x6B63;&#x662F;&#x8FD9;&#x79CD;&#x843D;&#x5DEE;&#xFF0C;&#x8BA9;&#x6211;&#x611F;&#x5230;&#x96BE;&#x8FC7;</span><br><span class="line">&#x96BE;&#x8FC7;&#x5230;&#x6CA1;&#x6709;&#x4EFB;&#x4F55;&#x4E00;&#x4EF6;&#x611F;&#x5230;&#x7CBE;&#x5F69;&#x7684;&#x4E8B;&#x60F3;&#x5BF9;&#x5927;&#x5BB6;&#x8BF4;&#x3002;</span><br><span class="line"></span><br><span class="line">&#x62B1;&#x6B49;</span><br></pre></td></tr></table></figure>
<p>13&#x5929;&#x4E4B;&#x524D; <a href="https://closed.social/ordinary/?page=1&amp;per_page=20&amp;sort_by=time##"> 39</a></p>
<p>No. 129</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#x4F1A;&#x5728;&#x65E9;&#x516B;&#x548C;&#x7EE7;&#x7EED;&#x7761;&#x4E4B;&#x95F4;&#x6597;&#x4E89;&#xFF0C;&#x4F1A;&#x56E0;&#x4E3A;&#x4E0D;&#x64C5;&#x957F;&#x7684;&#x4EFB;&#x52A1;&#x800C;&#x7126;&#x8651;&#x4E00;&#x5929;&#xFF0C;&#x4F1A;&#x5BF9;&#x672A;&#x6765;&#x611F;&#x5230;&#x8FF7;&#x832B;&#x3002;</span><br><span class="line">&#x4F46;&#x662F;&#x4E5F;&#x4F1A;&#x56E0;&#x4E3A;&#x770B;&#x89C1;&#x4E86;&#x661F;&#x661F;&#x800C;&#x6FC0;&#x52A8;&#xFF0C;&#x4F1A;&#x548C;&#x670B;&#x53CB;&#x4E00;&#x8D77;&#x95F9;&#x4E00;&#x6574;&#x5929;&#xFF0C;&#x4F1A;&#x56E0;&#x4E3A;&#x770B;&#x5230;&#x559C;&#x6B22;&#x7684;&#x4EBA;&#x800C;&#x5F00;&#x5FC3;&#x3002;</span><br><span class="line">&#x4E5F;&#x4F1A;&#x60F3;&#x8981;&#x518D;&#x52AA;&#x529B;&#x4E00;&#x628A;&#xFF0C;&#x4F46;&#x662F;&#x53C8;&#x6CA1;&#x6709;&#x90A3;&#x79CD;&#x65E5;&#x590D;&#x4E00;&#x65E5;&#x901A;&#x5BB5;&#x8FBE;&#x65E6;&#x7684;&#x52C7;&#x6C14;&#xFF0C;&#x4E5F;&#x662F;&#x6015;&#x81EA;&#x5DF1;&#x4ED8;&#x51FA;&#x4E4B;&#x540E;&#x4ECD;&#x7136;&#x5F97;&#x4E0D;&#x5230;&#x56DE;&#x62A5;&#xFF0C;&#x5F92;&#x589E;&#x75DB;&#x82E6;&#x3002;</span><br><span class="line">&#x66FE;&#x7ECF;&#x4E5F;&#x6709;&#x8FC7;&#x68A6;&#x60F3;&#xFF0C;&#x4E0D;&#x8FC7;&#x73B0;&#x5728;&#x770B;&#x6765;&#x4E5F;&#x53EA;&#x80FD;&#x7B11;&#x7B11;&#x5C31;&#x8FC7;&#x4E86;&#x3002;</span><br><span class="line">&#x6211;&#x4E0D;&#x8BA8;&#x538C;&#x73B0;&#x5728;&#x7684;&#x751F;&#x6D3B;&#xFF0C;&#x4F46;&#x4E5F;&#x8C08;&#x4E0D;&#x4E0A;&#x591A;&#x559C;&#x6B22;&#x5B83;&#x3002;</span><br><span class="line">&#x6211;&#x5C31;&#x662F;&#x56ED;&#x5B50;&#x91CC;&#x7684;&#x4E00;&#x4E2A;&#x666E;&#x901A;&#x4EBA;&#x3002;</span><br></pre></td></tr></table></figure>
<p>13&#x5929;&#x4E4B;&#x524D; <a href="https://closed.social/ordinary/?page=1&amp;per_page=20&amp;sort_by=time##"> 16</a></p>
<p>No. 128</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#x4EF0;&#x5929;&#x5927;&#x7B11;&#x51FA;&#x95E8;&#x53BB;&#xFF0C;&#x6211;&#x8F88;&#x5DF2;&#x662F;&#x666E;&#x901A;&#x4EBA;</span><br></pre></td></tr></table></figure>
<p>No. 127</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#x535A;&#x4E94;&#xFF0C;&#x5927;&#x6982;&#x7387;&#x5EF6;&#x6BD5;&#xFF0C;&#x5374;&#x8FD8;&#x662F;&#x8981;&#x8DD1;&#x79CB;&#x62DB;</span><br><span class="line">&#x6CA1;&#x6709;&#x8BBA;&#x6587;&#xFF0C;&#x6CA1;&#x6709;offer&#xFF0C;&#x6CA1;&#x6709;&#x5BF9;&#x8C61;</span><br><span class="line">&#x6CA1;&#x6709;&#x653E;&#x5F03;</span><br></pre></td></tr></table></figure>
<p>13&#x5929;&#x4E4B;&#x524D; <a href="https://closed.social/ordinary/?page=2&amp;per_page=20&amp;sort_by=time##"> 63</a></p>
<p>No. 126</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#x666E;&#x901A;&#x7684;&#x7814;&#x4E00;&#x65B0;&#x751F;&#xFF0C;&#x666E;&#x901A;&#x7684;&#x4E13;&#x4E1A;&#xFF0C;</span><br><span class="line">&#x666E;&#x901A;&#x5230;&#x4E0D;&#x6562;&#x5411;&#x559C;&#x6B22;&#x7684;&#x4EBA;&#x544A;&#x767D;&#xFF0C;</span><br><span class="line">&#x76F4;&#x5230;&#x53D8;&#x6210;&#x9057;&#x61BE;&#x3002;</span><br><span class="line">&#x666E;&#x901A;&#x7684;&#x4EBA;&#xFF0C;&#x8BF7;&#x4F60;&#x81F3;&#x5C11;&#x52C7;&#x6562;&#x3002;</span><br><span class="line">&#x73B0;&#x5728;&#x5F97;&#x51FA;&#x8FD9;&#x6837;&#x7684;&#x7ED3;&#x8BBA;&#x4F1A;&#x4E0D;&#x4F1A;&#x592A;&#x665A;&#xFF1F;</span><br></pre></td></tr></table></figure>
<p>13&#x5929;&#x4E4B;&#x524D; <a href="https://closed.social/ordinary/?page=2&amp;per_page=20&amp;sort_by=time##"> 13</a></p>
<p>No. 125</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#x666E;&#x901A;&#x5E26;&#x7ED9;&#x6211;&#x6700;&#x5927;&#x7684;&#x56F0;&#x6270;&#x662F;&#x8FF7;&#x832B;</span><br><span class="line">&#x5B66;&#x6821;&#x548C;&#x793E;&#x4F1A;&#x7ED9;&#x4E88;&#x7684;&#x671F;&#x671B;&#x592A;&#x9AD8;&#x4E86;&#xFF0C;&#x6E05;&#x534E;&#x7ED9;&#x4E86;&#x6211;&#x4E00;&#x4E2A;&#x66F4;&#x9AD8;&#x7684;&#x89C6;&#x89D2;&#xFF0C;&#x4F46;&#x6211;&#x6700;&#x7EC8;&#x53D1;&#x73B0;&#x81EA;&#x5DF1;&#x6CA1;&#x6709;&#x4E0E;&#x4E4B;&#x5339;&#x914D;&#x7684;&#x89C9;&#x609F;&#x548C;&#x80FD;&#x529B;</span><br><span class="line">&#x4ECA;&#x5E74;&#x8FD4;&#x6821;&#x7684;&#x5C0F;&#x5B66;&#x671F;&#x7684;&#x7ED3;&#x8425;&#x6C47;&#x62A5;&#x4E0A;&#xFF0C;&#x9662;&#x91CC;&#x7684;&#x8001;&#x5E08;&#x8BF4;&#xFF0C;&#x6E05;&#x534E;&#x57F9;&#x517B;&#x4F60;&#x4EEC;&#x662F;&#x5E0C;&#x671B;&#x4F60;&#x4EEC;&#x6210;&#x4E3A;&#x603B;&#x5E08;&#x7684;&#xFF0C;&#x800C;&#x4E0D;&#x662F;&#x6280;&#x672F;&#x9AA8;&#x5E72;</span><br><span class="line">&#x5C0F;&#x5B66;&#x671F;&#x662F;&#x5DE5;&#x79D1;&#x521B;&#x65B0;&#x5B9E;&#x8DF5;&#x8425;&#xFF0C;&#x6709;&#x7684;&#x4EBA;&#x627E;&#x4E86;&#x5BFC;&#x5E08;&#x81EA;&#x4E3B;&#x7ACB;&#x9879;&#xFF0C;&#x6709;&#x7684;&#x4EBA;&#x7684;&#x6210;&#x679C;&#x53EF;&#x9760;&#x800C;&#x53C8;&#x4E13;&#x4E1A;&#xFF0C;&#x800C;&#x6211;&#x4EEC;&#x5C0F;&#x7EC4;&#x505A;&#x4E86;&#x4E00;&#x6761;&#x4F1A;&#x6F0F;&#x6C34;&#x7684;&#x4EFF;&#x751F;&#x9C7C;&#x3002;&#x5176;&#x5B9E;&#x8FD9;&#x8FD8;&#x662F;&#x5728;&#x8001;&#x5E08;&#x7684;&#x4E0D;&#x65AD;push&#x4E0B;&#x7684;&#x6210;&#x679C;&#xFF0C;&#x800C;&#x6700;&#x540E;&#x7684;&#x4E00;&#x4E2A;&#x6C47;&#x62A5;&#x53EA;&#x4E0D;&#x8FC7;&#x662F;&#x5757;&#x906E;&#x7F9E;&#x5E03;&#x7F62;&#x4E86;</span><br><span class="line">&#x6211;&#x7684;&#x8FF7;&#x832B;&#x5728;&#x4E8E;&#xFF0C;&#x5927;&#x5BB6;&#x90FD;&#x5728;&#x9AD8;&#x8C08;&#x9614;&#x8BBA;&#x7740;&#x5377;&#x3001;GPA&#x3001;&#x4FDD;&#x7814;&#xFF0C;&#x5374;&#x4ECE;&#x6765;&#x6CA1;&#x6709;&#x4EBA;&#x544A;&#x8BC9;&#x8FC7;&#x6211;&#x4E3A;&#x4EC0;&#x4E48;&#x8981;&#x505A;&#x8FD9;&#x4E9B;&#x4E8B;&#x60C5;</span><br><span class="line">&#x5927;&#x5B66;&#x6BD5;&#x4E1A;&#x53BB;&#x627E;&#x4E00;&#x4EFD;&#x666E;&#x901A;&#x7684;&#x5DE5;&#x4F5C;&#x548C;&#x8BFB;&#x5B8C;&#x7814;&#x7A76;&#x751F;&#x6BD5;&#x4E1A;&#x53BB;&#x627E;&#x4E00;&#x4EFD;&#x666E;&#x901A;&#x7684;&#x5DE5;&#x4F5C;&#xFF0C;&#x5BF9;&#x6211;&#x800C;&#x8A00;&#x597D;&#x50CF;&#x90FD;&#x662F;&#x4E00;&#x773C;&#x671B;&#x5F97;&#x5230;&#x5C3D;&#x5934;&#x7684;&#x4EBA;&#x751F;</span><br><span class="line">&#x6211;&#xFF0C;&#x5BB6;&#x5883;&#x666E;&#x901A;&#xFF0C;&#x7236;&#x6BCD;&#x7ED9;&#x4E0D;&#x4E86;&#x6211;&#x5F88;&#x591A;&#x7684;&#x8D44;&#x6E90;&#x4F46;&#x7ED9;&#x4E86;&#x6211;&#x65E0;&#x4FDD;&#x7559;&#x7684;&#x7231;&#xFF1B;&#x793E;&#x4EA4;&#x666E;&#x901A;&#xFF0C;&#x5728;&#x5927;&#x5B66;&#x91CC;&#x6CA1;&#x6709;&#x627E;&#x5230;&#x4EA4;&#x5FC3;&#x7684;&#x670B;&#x53CB;&#xFF0C;&#x800C;&#x820D;&#x53CB;&#x90FD;&#x6709;&#x7740;&#x4EE4;&#x6211;&#x6709;&#x4E9B;&#x7FA1;&#x6155;&#x7684;&#x5B66;&#x4E60;&#x6210;&#x7EE9;&#x548C;&#x79D1;&#x7814;&#x62B1;&#x8D1F;&#xFF1B;&#x60C5;&#x611F;&#x666E;&#x901A;&#xFF0C;&#x8C08;&#x4E86;3&#x6B21;&#x604B;&#x7231;&#xFF0C;2&#x6B21;&#x5F02;&#x5730;&#xFF0C;&#x8FDE;&#x5206;&#x624B;&#x4E5F;&#x662F;&#x81EA;&#x7136;&#x800C;&#x7136;&#x7D22;&#x7136;&#x65E0;&#x5473;&#xFF1B;&#x5B66;&#x4E60;&#x666E;&#x901A;&#xFF0C;&#x5927;&#x4E00;&#x6210;&#x7EE9;&#x5C1A;&#x53EF;&#xFF0C;&#x5927;&#x4E8C;&#x6210;&#x7EE9;&#x4E2D;&#x4E0B;&#xFF0C;&#x6570;&#x7406;&#x57FA;&#x7840;&#x666E;&#x901A;&#x4E5F;&#x5E26;&#x6765;&#x4E86;&#x73B0;&#x5728;&#x9762;&#x5BF9;&#x8BB8;&#x591A;&#x8BFE;&#x7A0B;&#x65F6;&#x7684;&#x65E0;&#x529B;&#x611F;&#xFF1B;&#x793E;&#x5DE5;&#x666E;&#x901A;&#xFF0C;&#x5927;&#x4E00;&#x602F;&#x751F;&#x751F;&#x800C;&#x4E0D;&#x6562;&#x53BB;&#x52A0;&#x9662;&#x91CC;&#x7684;&#x5B66;&#x751F;&#x4F1A;&#xFF0C;&#x4EA4;&#x4E86;&#x5409;&#x4ED6;&#x793E;&#x7684;&#x4F1A;&#x8D39;&#x6CA1;&#x53BB;&#x8FC7;&#x4E00;&#x6B21;&#x6D3B;&#x52A8;&#x6700;&#x540E;&#x9ED8;&#x9ED8;&#x9000;&#x7FA4;&#xFF1B;&#x4F53;&#x80B2;&#x666E;&#x901A;&#xFF0C;&#x4F53;&#x80FD;&#x4E00;&#x822C;&#xFF0C;&#x559C;&#x6B22;&#x8DB3;&#x7403;&#x7684;&#x7F8E;&#x611F;&#x5374;&#x6CA1;&#x6709;&#x5B9E;&#x73B0;&#x7684;&#x8EAB;&#x4F53;&#x7D20;&#x8D28;&#xFF1B;&#x6E38;&#x620F;&#x666E;&#x901A;&#xFF0C;&#x53CD;&#x5E94;&#x4E0D;&#x5FEB;&#xFF0C;&#x552F;&#x4E00;&#x575A;&#x6301;&#x73A9;&#x7684;&#x6E38;&#x620F;&#x53EA;&#x6709;&#x738B;&#x8005;&#x3002;&#x552F;&#x4E00;&#x4E3A;&#x6211;&#x5927;&#x5B66;&#x751F;&#x6D3B;&#x589E;&#x6DFB;&#x4E86;&#x4E00;&#x4E9B;&#x5149;&#x4EAE;&#x7684;&#x662F;&#x516C;&#x76CA;&#xFF0C;&#x56E0;&#x4E3A;&#x505A;&#x4E86;&#x4E00;&#x4E9B;&#x516C;&#x76CA;&#x4E5F;&#x8BA9;&#x6211;&#x73B0;&#x5728;&#x9010;&#x6E10;&#x5F00;&#x59CB;&#x601D;&#x8003;&#x81EA;&#x5DF1;&#x7684;&#x4EBA;&#x751F;&#x5E94;&#x8BE5;&#x662F;&#x4EC0;&#x4E48;&#x6837;&#x5B50;&#x7684;</span><br><span class="line">&#x666E;&#x901A;&#x6765;&#x81EA;&#x4E8E;&#x6BD4;&#x8F83;&#xFF0C;&#x56E0;&#x4E3A;&#x4E0D;&#x8BBA;&#x5728;&#x4EC0;&#x4E48;&#x65B9;&#x9762;&#x90FD;&#x6709;&#x8BB8;&#x8BB8;&#x591A;&#x591A;&#x7684;&#x4EBA;&#x6BD4;&#x81EA;&#x5DF1;&#x4F18;&#x79C0;&#x3002;&#x627E;&#x4E0D;&#x5230;&#x81EA;&#x5DF1;&#x7684;&#x4F18;&#x70B9;&#xFF0C;&#x627E;&#x4E0D;&#x5230;&#x81EA;&#x5DF1;&#x7684;&#x5174;&#x8DA3;&#xFF0C;&#x4EE5;&#x81F3;&#x4E8E;&#x201C;&#x627E;&#x5230;&#x81EA;&#x5DF1;&#x7684;&#x4F18;&#x70B9;&#xFF0C;&#x53D1;&#x6325;&#x81EA;&#x5DF1;&#x7684;&#x4F18;&#x70B9;&#xFF0C;&#x5BFB;&#x627E;&#x81EA;&#x5DF1;&#x7684;&#x5174;&#x8DA3;&#xFF0C;&#x5FEB;&#x4E50;&#x7684;&#x8FC7;&#x5B8C;&#x4E00;&#x751F;&#x201D;&#x7684;&#x9E21;&#x6C64;&#x90FD;&#x7565;&#x6709;&#x4E9B;&#x9694;&#x9774;&#x6414;&#x75D2;</span><br><span class="line">&#x6709;&#x65F6;&#x5019;&#x4F1A;&#x60F3;&#xFF0C;&#x5982;&#x679C;&#x81EA;&#x5DF1;&#x5929;&#x8D4B;&#x5F02;&#x7980;&#xFF0C;&#x5C31;&#x80FD;&#x65E9;&#x65E9;&#x88AB;&#x661F;&#x63A2;&#x7403;&#x63A2;&#x76F8;&#x4E2D;&#xFF0C;&#x4E5F;&#x8BB8;&#x5C31;&#x4E0D;&#x90A3;&#x4E48;&#x8FF7;&#x832B;</span><br><span class="line">&#x5982;&#x679C;&#x81EA;&#x5DF1;&#x80FD;&#x6709;&#x4E00;&#x4EFD;&#x70ED;&#x7231;&#x7684;&#x4E8B;&#x4E1A;&#xFF0C;&#x6216;&#x8BB8;&#x5C31;&#x53EF;&#x4EE5;&#x65E0;&#x6761;&#x4EF6;&#x5730;&#x5728;&#x5176;&#x4E2D;&#x4ED8;&#x51FA;&#x800C;&#x4E0D;&#x4F1A;&#x5728;&#x610F;&#x4E16;&#x4FD7;&#x8BC4;&#x4EF7;&#x6807;&#x51C6;&#x4E0B;&#x7684;&#x9AD8;&#x4F4E;&#x3002;&#x5C31;&#x50CF;&#x5927;&#x5316;&#x8001;&#x5E08;&#x51AF;&#x7433;&#x8BF4;&#x8FC7;&#x4E00;&#x53E5;&#x4EE4;&#x6211;&#x5370;&#x8C61;&#x6DF1;&#x523B;&#x7684;&#x8BDD;&#xFF0C;&#x6211;&#x6BCF;&#x5E74;10&#x6708;&#x90FD;&#x5728;&#x7B49;&#x7740;&#x4E00;&#x5C01;&#x4ECE;&#x745E;&#x5178;&#x6765;&#x7684;&#x4FE1;&#x3002;&#x6BCF;&#x6BCF;&#x60F3;&#x8D77;&#xFF0C;&#x90FD;&#x80FD;&#x4F1A;&#x5FC3;&#x4E00;&#x7B11;</span><br><span class="line">&#x4F46;&#x662F;&#x4E8B;&#x5B9E;&#x662F;&#x4EC0;&#x4E48;&#x5462;&#xFF0C;&#x6211;&#x6CA1;&#x6709;&#x90A3;&#x4E48;&#x70ED;&#x7231;&#x5B66;&#x4E60;&#xFF0C;&#x5374;&#x4E0D;&#x5F97;&#x4E0D;&#x5C3D;&#x529B;&#x5730;&#x53BB;&#x5B8C;&#x6210;&#x6BCF;&#x4E00;&#x4EFD;&#x8BFE;&#x4E1A;&#xFF0C;&#x6562;&#x5728;ddl&#x7684;&#x524D;&#x51E0;&#x5206;&#x949F;&#x4EA4;&#x4E0A;&#x4F5C;&#x4E1A;&#x3002;&#x4F46;&#x8FD9;&#x4E2A;&#x5C3D;&#x529B;&#x8BF4;&#x8D77;&#x6765;&#x4F3C;&#x4E4E;&#x4E5F;&#x4E0D;&#x90A3;&#x4E48;&#x7406;&#x76F4;&#x6C14;&#x58EE;&#xFF0C;&#x5C31;&#x50CF;&#x6211;&#x4F1A;&#x9009;&#x62E9;&#x5468;&#x65E5;&#x51FA;&#x53BB;&#x53C2;&#x52A0;&#x4E00;&#x5929;&#x7684;&#x793E;&#x56E2;&#x6D3B;&#x52A8;&#x7136;&#x540E;&#x665A;&#x4E0A;&#x56DE;&#x6765;&#x6F66;&#x8349;&#x5E94;&#x4ED8;&#x4F5C;&#x4E1A;&#x800C;&#x4E0D;&#x662F;&#x6293;&#x4F4F;&#x6700;&#x540E;&#x7684;&#x4E00;&#x5929;&#x673A;&#x4F1A;&#x597D;&#x597D;&#x5B8C;&#x6210;&#x3002;</span><br><span class="line">&#x867D;&#x7136;&#x5BF9;&#x5B66;&#x4E60;&#x4E0D;&#x90A3;&#x4E48;&#x597D;&#x4E5F;&#x4E0D;&#x90A3;&#x4E48;&#x4E0A;&#x5FC3;&#xFF0C;&#x4F46;&#x4ECD;&#x7136;&#x4E0D;&#x514D;&#x6709;&#x65F6;&#x5019;&#x62B1;&#x7740;&#x4E00;&#x4E1D;&#x7684;&#x5E7B;&#x60F3;&#xFF0C;&#x5982;&#x679C;&#x81EA;&#x5DF1;&#x575A;&#x6301;&#x575A;&#x6301;&#x662F;&#x4E0D;&#x662F;&#x6700;&#x540E;&#x4E5F;&#x80FD;&#x5728;&#x8BFB;&#x7814;&#x7684;&#x65F6;&#x5019;&#x627E;&#x5230;&#x81EA;&#x5DF1;&#x7684;&#x65B9;&#x5411;&#xFF1F;&#x8FD9;&#x79CD;&#x81EA;&#x6211;&#x9EBB;&#x9189;&#x548C;&#x81EA;&#x6211;&#x5B89;&#x6170;&#x6216;&#x8BB8;&#x4E0D;&#x514D;&#x6709;&#x4E9B;&#x53EF;&#x60B2;</span><br><span class="line">&#x4F3C;&#x4E4E;&#x6709;&#x4E9B;&#x504F;&#x9898;&#x4E86;&#xFF0C;&#x6211;&#x7684;&#x666E;&#x901A;&#x5728;&#x4E8E;&#x6211;&#x5BFB;&#x627E;&#x4E0D;&#x5230;&#x81EA;&#x5DF1;&#x4EBA;&#x751F;&#x7684;&#x610F;&#x4E49;&#x3002;&#x6E05;&#x534E;&#x4F3C;&#x4E4E;&#x7ED9;&#x6211;&#x4EEC;&#x94FA;&#x597D;&#x4E86;&#x8DEF;&#xFF0C;&#x4F46;&#x662F;&#x6211;&#x53D1;&#x73B0;&#x81EA;&#x5DF1;&#x5728;&#x8FD9;&#x6761;&#x8DEF;&#x4E0A;&#x8D70;&#x4E0D;&#x901A;&#x4E86;&#x3002;&#x6311;&#x6218;&#x676F;&#xFF0C;&#x661F;&#x706B;&#x8BA1;&#x5212;&#xFF0C;&#x85AA;&#x706B;&#x8BA1;&#x5212;&#xFF0C;&#x91D1;&#x5956;&#x4E2A;&#x4EBA;&#x2026;&#x2026;&#x6BCF;&#x5F53;&#x6211;&#x770B;&#x7740;&#x522B;&#x4EBA;&#x7684;&#x8363;&#x8A89;&#x548C;&#x4EBA;&#x751F;&#x8F68;&#x8FF9;&#xFF0C;&#x6211;&#x90FD;&#x4F1A;&#x611F;&#x5230;&#x5341;&#x5206;&#x7FA1;&#x6155;&#xFF0C;&#x6211;&#x7FA1;&#x6155;&#x90A3;&#x4E9B;&#x80FD;&#x627E;&#x5230;&#x81EA;&#x5DF1;&#x613F;&#x610F;&#x4E3A;&#x4E4B;&#x52AA;&#x529B;&#x4ED8;&#x51FA;&#x7684;&#x65B9;&#x5411;&#x7684;&#x4EBA;&#x3002;&#x7FA1;&#x6155;&#x4E4B;&#x4F59;&#x8FD8;&#x6709;&#x4E00;&#x4E9B;&#x81EA;&#x8D23;&#x3002;</span><br><span class="line">&#x60F3;&#x5199;&#x4E00;&#x4E9B;&#x4EC0;&#x4E48;&#x90FD;&#x663E;&#x5F97;&#x8FD9;&#x4E48;&#x601D;&#x8DEF;&#x51CC;&#x4E71;&#x6742;&#x4E71;&#x65E0;&#x7AE0;&#xFF0C;&#x6B65;&#x5165;&#x5927;&#x4E09;&#xFF0C;&#x751F;&#x6D3B;&#x4F3C;&#x4E4E;&#x6709;&#x4E86;&#x4E9B;&#x8BB8;&#x7684;&#x8F6C;&#x6298;&#x3002;&#x4F46;&#x5BF9;&#x4E8E;&#x81EA;&#x5DF1;&#x5DF2;&#x7ECF;&#x8FC7;&#x53BB;&#x7684;&#x4E24;&#x5E74;&#xFF0C;&#x603B;&#x662F;&#x611F;&#x5230;&#x65E0;&#x5948;&#x800C;&#x53C8;&#x4E0D;&#x6EE1;&#x7684;&#x3002;&#x770B;&#x5230;&#x8FD9;&#x4E2A;&#x5956;&#x611F;&#x89C9;&#x8FD8;&#x86EE;&#x6709;&#x610F;&#x601D;&#xFF0C;&#x56E0;&#x4E3A;&#x548C;&#x81EA;&#x5DF1;&#x4E4B;&#x524D;&#x53CD;&#x601D;&#x81EA;&#x5DF1;&#x65F6;&#x5019;&#x7684;&#x60F3;&#x6CD5;&#x4E0D;&#x8C0B;&#x800C;&#x5408;&#x3002;&#x4F5C;&#x4E3A;&#x4E00;&#x540D;&#x666E;&#x901A;&#x4EBA;&#xFF0C;&#x6211;&#x4E5F;&#x5F00;&#x59CB;&#x5C1D;&#x8BD5;&#x505A;&#x4E00;&#x4E9B;&#x666E;&#x901A;&#x7684;&#x4E8B;&#x60C5;&#xFF0C;&#x60F3;&#x5728;&#x516C;&#x76CA;&#x8FD9;&#x6761;&#x8DEF;&#x4E0A;&#x8D70;&#x5F97;&#x66F4;&#x8FDC;&#x4E00;&#x4E9B;&#xFF0C;&#x6211;&#x4E5F;&#x8BB8;&#x6210;&#x4E3A;&#x4E0D;&#x4E86;&#x4E00;&#x540D;&#x4F18;&#x79C0;&#x7684;&#x4EBA;&#xFF0C;&#x4F46;&#x6211;&#x5E0C;&#x671B;&#x81EA;&#x5DF1;&#x6210;&#x4E3A;&#x4E00;&#x540D;&#x5FEB;&#x4E50;&#x800C;&#x901A;&#x900F;&#x7684;&#x4EBA;&#x3002;</span><br><span class="line">&#x4ECA;&#x5E74;&#x5F00;&#x4E86;&#x4E2A;&#x5FAE;&#x535A;&#x5C0F;&#x53F7;&#xFF0C;&#x5F00;&#x59CB;&#x6709;&#x4E86;&#x4E9B;&#x8BB0;&#x5F55;&#x7684;&#x6B32;&#x671B;&#xFF0C;&#x4E5F;&#x62B1;&#x7740;&#x628A;&#x8FD9;&#x91CC;&#x5F53;&#x4F5C;&#x4E00;&#x4E2A;&#x6811;&#x6D1E;&#x7684;&#x60F3;&#x6CD5;&#x5199;&#x4E0B;&#x4E86;&#x8FD9;&#x4E9B;&#x3002;</span><br></pre></td></tr></table></figure>
<p>13&#x5929;&#x4E4B;&#x524D; <a href="https://closed.social/ordinary/?page=2&amp;per_page=20&amp;sort_by=time##"> 31</a></p>
<p>No. 124</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#x4E3A;&#x4EC0;&#x4E48;&#xFF0C;&#x4E3A;&#x4EC0;&#x4E48;&#x4F1A;&#x53D8;&#x6210;&#x8FD9;&#x6837;&#x5462;&#x2026;</span><br><span class="line">&#x8003;&#x4E0A;&#x4E86;&#x81EA;&#x5DF1;&#x5411;&#x5F80;&#x7684;&#x5927;&#x5B66;&#xFF0C;&#x4E3A;&#x4E86;&#x81EA;&#x5DF1;&#x8FD8;&#x7B97;&#x559C;&#x6B22;&#x7684;&#x4E8B;&#x60C5;&#x800C;&#x52AA;&#x529B;&#x5B66;&#x4E60;&#xFF0C;&#x4E24;&#x4EF6;&#x5FEB;&#x4E50;&#x7684;&#x4E8B;&#x60C5;&#x53E0;&#x52A0;&#x8D77;&#x6765;&#x2026;&#x2026;</span><br><span class="line"></span><br><span class="line">&#x8FD8;&#x8BB0;&#x5F97;&#x521A;&#x5165;&#x5B66;&#x7684;&#x65F6;&#x5019;&#xFF0C;&#x519B;&#x8BAD;&#x6CA1;&#x80FD;&#x575A;&#x6301;&#x4E0B;&#x6765;&#xFF0C;&#x8FD8;&#x7279;&#x522B;&#x5FC3;&#x75BC;&#x5DEE;&#x7684;&#x90A3;&#x4E00;&#x70B9;&#x7EE9;&#x70B9;&#x3002;</span><br><span class="line">&#x8FD8;&#x8BB0;&#x5F97;&#x5927;&#x4E00;&#x4E0B;&#x5B66;&#x671F;&#xFF0C;&#x9876;&#x4E0D;&#x4F4F;&#x5B66;&#x4E1A;&#x538B;&#x529B;&#xFF0C;&#x4E0D;&#x5F97;&#x4E0D;&#x4E2D;&#x671F;&#x9000;&#x8BFE;&#x65F6;&#x7684;&#x4E0D;&#x7518;&#x3002;</span><br><span class="line">&#x73B0;&#x5728;&#x5462;&#xFF0C;&#x6211;&#x6210;&#x7EE9;&#x5355;&#x4E0A;&#x5168;&#x90FD;&#x662F;W&#xFF0C;&#x8FD8;&#x6DF7;&#x8FDB;&#x53BB;&#x4E86;&#x4E24;&#x4E2A;&#x9192;&#x76EE;&#x7684;F&#x2026;</span><br><span class="line">&#x68A6;&#x60F3;&#x4E5F;&#x4ECE;&#x62FF;&#x5230;&#x9AD8;&#x7EE9;&#x70B9;&#xFF0C;&#x53D8;&#x6210;&#x4E86;&#x6309;&#x65F6;&#x6BD5;&#x4E1A;&#x3002;</span><br><span class="line">&#x6BCF;&#x6B21;&#x56DE;&#x5FC6;&#x8D77;&#x6765;&#xFF0C;&#x90FD;&#x4E0D;&#x7981;&#x8BA9;&#x6211;&#x611F;&#x6168;&#x826F;&#x591A;&#x3002;</span><br><span class="line"></span><br><span class="line">&#x6211;&#x65E9;&#x65E9;&#x5730;&#x5C31;&#x63A5;&#x53D7;&#x4E86;&#x81EA;&#x5DF1;&#x7684;&#x666E;&#x901A;&#x3002;&#x4F46;&#x662F;&#xFF0C;&#x4EC0;&#x4E48;&#x65F6;&#x5019;&#xFF0C;&#x6211;&#x4EEC;&#x7684;&#x5B66;&#x6821;&#x4E0D;&#x63A5;&#x53D7;&#x8FD9;&#x79CD;&#x201C;&#x666E;&#x901A;&#x201D;&#x4E86;&#x5462;&#xFF1F;</span><br><span class="line">&#x505A;&#x5927;&#x4F5C;&#x4E1A;&#x7684;&#x65F6;&#x5019;&#xFF0C;&#x6709;bonus&#x7684;&#x4F5C;&#x4E1A;&#xFF0C;&#x5C31;&#x6068;&#x4E0D;&#x5F97;&#x628A;&#x81EA;&#x5DF1;&#x4F1A;&#x7684;&#x6240;&#x6709;&#x4E1C;&#x897F;&#x90FD;&#x5C55;&#x793A;&#x4E00;&#x904D;&#xFF0C;&#x754C;&#x9762;&#x8981;&#x7F8E;&#x89C2;&#xFF0C;&#x8FD0;&#x7B97;&#x8981;&#x6D41;&#x7545;&#xFF0C;&#x5C31;&#x7B97;&#x662F;&#x6570;&#x636E;&#x7ED3;&#x6784;&#x5927;&#x4F5C;&#x4E1A;&#x4E5F;&#x8981;&#x597D;&#x597D;&#x5730;&#x7528;&#x4E0A;GPU&#x52A0;&#x901F;&#xFF1B;&#x800C;&#x5982;&#x679C;&#x6CA1;&#x6709;bonus&#xFF0C;&#x5C31;&#x8349;&#x8349;&#x5199;&#x4E2A;&#x80FD;&#x7528;&#x7684;&#x63D0;&#x4EA4;&#x3002;</span><br><span class="line">&#x73ED;&#x4F1A;&#x4E0A;&#xFF0C;&#x8001;&#x5E08;&#x4F1A;&#x975E;&#x5E38;&#x7528;&#x5FC3;&#x4E5F;&#x975E;&#x5E38;&#x8D1F;&#x8D23;&#x5730;&#x4E3A;&#x6211;&#x4EEC;&#x8FD9;&#x4E9B;&#x201C;&#x5DEE;&#x751F;&#x201D;&#x5BFB;&#x627E;&#x770B;&#x8D77;&#x6765;&#x4E0D;&#x9519;&#x7684;&#x51FA;&#x8DEF;&#x2014;&#x2014;&#x54EA;&#x6015;&#x662F;&#x8DE8;&#x6587;&#x7406;&#x4FDD;&#x7814;&#x4E5F;&#x542C;&#x4E0A;&#x53BB;&#x90A3;&#x4E48;&#x201C;&#x8BF1;&#x4EBA;&#x201D;&#x3002;</span><br><span class="line">&#x4F3C;&#x4E4E;&#x7AED;&#x5C3D;&#x6240;&#x80FD;&#x4E0A;&#x4E00;&#x6240;&#x201C;&#x597D;&#x201D;&#x5B66;&#x6821;&#xFF0C;&#x6216;&#x8005;&#x8FDB;&#x4E00;&#x5BB6;&#x201C;&#x597D;&#x201D;&#x4F01;&#x4E1A;&#xFF0C;&#x624D;&#x662F;&#x6211;&#x4EEC;&#x552F;&#x4E00;&#x7684;&#x51FA;&#x8DEF;&#x2026;</span><br><span class="line"></span><br><span class="line">&#x6211;&#x4E0D;&#x77E5;&#x9053;&#x6211;&#x8FD9;&#x4E48;&#x5E9F;&#x7269;&#x7684;&#x6210;&#x7EE9;&#x80FD;&#x4E0D;&#x80FD;&#x8BA9;&#x5927;&#x591A;&#x6570;&#x4EBA;&#x8BA4;&#x540C;&#x3002;</span><br><span class="line">&#x6211;&#x4E5F;&#x4E0D;&#x60F3;&#x8BF4;&#x6211;&#x7684;&#x52AA;&#x529B;&#x6CA1;&#x6709;&#x56DE;&#x62A5;&#x4EC0;&#x4E48;&#x7684;&#x3002;&#x548C;&#x90A3;&#x4E9B;&#x771F;&#x7684;&#x62FF;&#x5230;&#x4E86;&#x6BD4;&#x8F83;&#x9AD8;&#x7684;&#x6210;&#x7EE9;&#x7684;&#x4EBA;&#x76F8;&#x6BD4;&#xFF0C;&#x6211;&#x5728;&#x5B66;&#x4E1A;&#x4E0A;&#x4E5F;&#x786E;&#x5B9E;&#x5C31;&#x662F;&#x6CA1;&#x600E;&#x4E48;&#x52AA;&#x529B;&#x4E86;&#x5566;&#x3002;</span><br><span class="line">&#x53EA;&#x4E0D;&#x8FC7;&#x662F;&#x505A;&#x7740;&#x81EA;&#x5DF1;&#x7684;&#x4E8B;&#xFF0C;&#x5BFB;&#x627E;&#x7740;&#x81EA;&#x5DF1;&#x7684;&#x68A6;&#x60F3;&#x2014;&#x2014;&#x65F6;&#x4E0D;&#x65F6;&#x89C9;&#x5F97;&#x65E0;&#x804A;&#x4E86;&#xFF0C;&#x5C31;&#x6362;&#x4E2A;&#x65B9;&#x5411;&#x518D;&#x8D70;&#x3002;</span><br><span class="line"></span><br><span class="line">&#x6211;&#x4E0D;&#x5E0C;&#x671B;&#xFF0C;&#x5F53;&#x6211;&#x8BF4;&#x51FA;&#x201C;&#x666E;&#x901A;&#x201D;&#x8FD9;&#x4E2A;&#x8BCD;&#x7684;&#x65F6;&#x5019;&#xFF0C;&#x5B83;&#x4F1A;&#x53D8;&#x6210;&#x5BF9;&#x81EA;&#x5DF1;&#x7684;&#x4E00;&#x79CD;&#x4FDD;&#x62A4;&#xFF0C;&#x6216;&#x8005;&#x83B7;&#x53D6;&#x522B;&#x4EBA;&#x540C;&#x60C5;&#x7684;&#x4EC0;&#x4E48;&#x9B54;&#x5492;&#x3002;</span><br><span class="line">&#x5F53;&#x6211;&#x6DF1;&#x591C;&#x81EA;&#x4E60;&#x56DE;&#x6765;&#xFF0C;&#x559D;&#x7740;&#x4ECE;711&#x4E70;&#x6765;&#x7684;&#x53EF;&#x4E50;&#xFF0C;&#x8FCE;&#x7740;&#x6E05;&#x6668;&#x7684;&#x7B2C;&#x4E00;&#x7F15;&#x9633;&#x5149;&#xFF0C;&#x5728;&#x65E0;&#x4EBA;&#x7684;&#x4E3B;&#x697C;&#x524D;&#x5531;&#x7740;&#x8DD1;&#x8C03;&#x7684;&#x6B4C;&#x3002;</span><br><span class="line">&#x5373;&#x4F7F;&#x662F;&#x8FD9;&#x6837;&#x666E;&#x666E;&#x901A;&#x901A;&#x7684;&#x6211;&#xFF0C;&#x4E5F;&#x6709;&#x7740;&#x81EA;&#x5DF1;&#x666E;&#x666E;&#x901A;&#x901A;&#x7684;&#x5FEB;&#x4E50;&#xFF0C;&#x666E;&#x666E;&#x901A;&#x901A;&#x7684;&#x6210;&#x5C31;&#x611F;&#xFF0C;&#x6216;&#x8005;&#x662F;&#x666E;&#x666E;&#x901A;&#x901A;&#x7684;&#x4F24;&#x5FC3;&#xFF0C;&#x666E;&#x666E;&#x901A;&#x901A;&#x7684;&#x632B;&#x6298;&#x3002;&#x4E5F;&#x4F1A;&#x5728;&#x8FD9;&#x6240;&#x4E0D;&#x600E;&#x4E48;&#x6B22;&#x8FCE;&#x666E;&#x901A;&#x7684;&#x6821;&#x56ED;&#x91CC;&#xFF0C;&#x50CF;&#x6BCF;&#x4E2A;&#x4EBA;&#x4E00;&#x6837;&#xFF0C;&#x666E;&#x666E;&#x901A;&#x901A;&#x5730;&#x52AA;&#x529B;&#x7740;&#xFF0C;&#x8FFD;&#x9010;&#x7740;&#x81EA;&#x5DF1;&#x666E;&#x666E;&#x901A;&#x901A;&#x7684;&#x68A6;&#x60F3;&#x3002;</span><br><span class="line"></span><br><span class="line">&#x6211;&#x4EEC;&#x8D5E;&#x7F8E;&#x90A3;&#x4E9B;&#x4E0D;&#x666E;&#x901A;&#xFF0C;&#x6211;&#x4EEC;&#x656C;&#x4F69;&#x90A3;&#x4E9B;&#x4E0D;&#x666E;&#x901A;&#x2014;&#x2014;&#x4F46;&#x662F;&#xFF0C;&#x8BF7;&#x522B;&#x5FD8;&#x4E86;&#xFF0C;&#x5584;&#x5F85;&#x666E;&#x901A;&#x7684;&#x81EA;&#x5DF1;&#x3002;</span><br><span class="line">&#x6BCF;&#x4E00;&#x4EFD;&#x666E;&#x666E;&#x901A;&#x901A;&#xFF0C;&#x90FD;&#x503C;&#x5F97;&#x88AB;&#x80AF;&#x5B9A;&#x3002;</span><br><span class="line"></span><br><span class="line">&#x5F53;&#x7136;&#xFF0C;&#x5982;&#x679C;&#x53EF;&#x80FD;&#x7684;&#x8BDD;&#xFF0C;&#x8BF7;&#x4E0D;&#x8981;&#x8BA9;&#x8FD9;&#x4EFD;&#x201C;&#x666E;&#x901A;&#x201D;&#x6210;&#x4E3A;&#x4EC5;&#x9650;&#x5341;&#x4EBA;&#x7684;&#x201C;&#x4E0D;&#x666E;&#x901A;&#x201D;&#x3002;</span><br><span class="line">&#x6211;&#x76F8;&#x4FE1;&#xFF0C;&#x6BCF;&#x4E00;&#x4E2A;&#x4EBA;&#xFF0C;&#x4E0D;&#x7BA1;&#x662F;&#x5B66;&#x751F;&#x3001;&#x6559;&#x804C;&#x5DE5;&#x3001;&#x8FD8;&#x662F;&#x6821;&#x5916;&#x4EBA;&#x5458;&#xFF0C;&#x90FD;&#x503C;&#x5F97;&#x80AF;&#x5B9A;&#x3002;</span><br><span class="line">&#x5982;&#x679C;&#x53EF;&#x80FD;&#x7684;&#x8BDD;&#xFF0C;&#x7ED9;&#x6BCF;&#x4E2A;&#x613F;&#x610F;&#x7684;&#x4EBA;&#x4E00;&#x4EFD;&#x5BF9;&#x201C;&#x666E;&#x901A;&#x201D;&#x7684;&#x80AF;&#x5B9A;&#xFF0C;&#x6216;&#x8BB8;&#x8FD9;&#x624D;&#x662F;&#x6700;&#x201C;&#x666E;&#x901A;&#x201D;&#x7684;&#x5956;&#x4E86;&#x5427;</span><br></pre></td></tr></table></figure>
<p>14&#x5929;&#x4E4B;&#x524D; <a href="https://closed.social/ordinary/?page=2&amp;per_page=20&amp;sort_by=time##"> 42</a></p>
<p>No. 123</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">3000&#x7C73;&#x8981;&#x6302;&#x4E86;&#x5374;&#x8FD8;&#x5728;&#x5237;B&#x7AD9;&#x6478;&#x9C7C;&#x7684;&#x5C51;&#xFF08;&#xFF09;</span><br></pre></td></tr></table></figure>
<p>14&#x5929;&#x4E4B;&#x524D; <a href="https://closed.social/ordinary/?page=2&amp;per_page=20&amp;sort_by=time##"> 15</a></p>
<p>No. 122</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#x4F1A;&#x5728;22:30&#x7684;&#x51B7;&#x98CE;&#x4E0E;&#x8857;&#x706F;&#x4E2D;&#x56E0;&#x4E3A;&#x627E;&#x4E0D;&#x5230;&#x81EA;&#x884C;&#x8F66;&#x800C;&#x54ED;</span><br><span class="line">&#x4F1A;&#x5728;6:00&#x7684;&#x7761;&#x773C;&#x6726;&#x80E7;&#x4E2D;&#x56E0;&#x4E3A;&#x62FF;&#x6D17;&#x9762;&#x5976;&#x5237;&#x4E86;&#x534A;&#x5929;&#x7259;&#x800C;&#x7B11;</span><br><span class="line">&#x4F1A;&#x5728;&#x591A;&#x7C73;&#x8BFA;&#x7684;&#x81EA;&#x884C;&#x8F66;&#x65C1;&#x65E0;&#x52A9;&#x5730;&#x5F20;&#x671B;</span><br><span class="line">&#x4E5F;&#x4F1A;&#x5728;&#x94F6;&#x674F;&#x53F6;&#x94BB;&#x8FDB;&#x9886;&#x53E3;&#x4E00;&#x9635;&#x54C6;&#x55E6;&#x65F6;&#x75F4;&#x75F4;&#x5730;&#x7AD9;&#x5728;&#x8DEF;&#x4E2D;&#x592E;</span><br></pre></td></tr></table></figure>
<p>14&#x5929;&#x4E4B;&#x524D; <a href="https://closed.social/ordinary/?page=2&amp;per_page=20&amp;sort_by=time##"> 25</a></p>
<p>No. 121</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#x666E;&#x666E;&#x901A;&#x901A;&#x7684;&#x9AD8;&#x4E2D;&#xFF0C;&#x666E;&#x666E;&#x901A;&#x901A;&#x7684;&#x7ADE;&#x8D5B;&#x9009;&#x624B;&#xFF0C;&#x4E0D;&#x4E0A;&#x4E0D;&#x4E0B;&#x7684;&#x540D;&#x6B21;&#x8FDB;&#x6765;&#xFF0C;&#x4E0D;&#x4E0A;&#x4E0D;&#x4E0B;&#x7684;&#x7EE9;&#x70B9;&#x6DF7;&#x5230;&#x73B0;&#x5728;&#x3002;&#x53C2;&#x52A0;&#x793E;&#x56E2;&#x4E5F;&#x53C2;&#x52A0;&#x793E;&#x5DE5;&#xFF0C;&#x6253;&#x7403;&#x4E5F;&#x6254;&#x98DE;&#x76D8;&#xFF0C;&#x4EC0;&#x4E48;&#x90FD;&#x53C2;&#x4E0E;&#x4E00;&#x4E0B;&#xFF0C;&#x53EF;&#x662F;&#x8FD8;&#x662F;&#x907F;&#x514D;&#x4E0D;&#x4E86;&#x6DF9;&#x6CA1;&#x4E8E;&#x4EBA;&#x7FA4;&#x4E2D;&#x3002;&#x62B1;&#x7740;&#x4E3A;&#x5929;&#x4E0B;&#x4EBA;&#x8C0B;&#x6C38;&#x798F;&#x7684;&#x60F3;&#x6CD5;&#xFF0C;&#x53EF;&#x662F;&#x8FDE;&#x81EA;&#x5DF1;&#x90FD;&#x7167;&#x987E;&#x4E0D;&#x8FC7;&#x6765;&#xFF0C;&#x6700;&#x540E;&#x53EA;&#x80FD;&#x5148;&#x628A;&#x81EA;&#x5DF1;&#x8FC7;&#x597D;&#x3002;</span><br><span class="line">&#x65E0;&#x610F;&#x4E8E;&#x6B64;&#x62B1;&#x6028;&#xFF0C;&#x751A;&#x81F3;&#x5728;&#x60F3;&#xFF0C;&#x666E;&#x666E;&#x901A;&#x901A;&#x7684;&#x6709;&#x4EC0;&#x4E48;&#x4E0D;&#x597D;&#xFF0C;&#x800C;&#x4E14;&#x5176;&#x5B9E;&#x6BCF;&#x4E2A;&#x4EBA;&#x90FD;&#x6709;&#x81EA;&#x5DF1;&#x7684;&#x95EA;&#x5149;&#x70B9;&#xFF0C;&#x4E5F;&#x8BB8;&#x6BCF;&#x4E2A;&#x4EBA;&#x90FD;&#x4E0D;&#x666E;&#x901A;&#xFF0C;&#x53EA;&#x662F;&#x5728;&#x4E3B;&#x6D41;&#x7684;&#x8BC4;&#x4EF7;&#x4F53;&#x7CFB;&#x4E2D;&#x4F53;&#x73B0;&#x4E0D;&#x51FA;&#x6765;&#x7F62;&#x4E86;&#x3002;</span><br><span class="line">&#x8FD9;&#x4E2A;&#x7279;&#x666E;&#x901A;&#x5956;&#x4E0D;&#x5E94;&#x8BE5;&#x9881;&#x7ED9;10&#x4E2A;&#x4EBA;&#xFF0C;&#x8981;&#x4E48;&#x9881;&#x7ED9;&#x6240;&#x6709;&#x4EBA;&#xFF0C;&#x8981;&#x4E48;&#x4E00;&#x4E2A;&#x90FD;&#x4E0D;&#x9881;&#x3002;</span><br></pre></td></tr></table></figure>
<p>14&#x5929;&#x4E4B;&#x524D; <a href="https://closed.social/ordinary/?page=2&amp;per_page=20&amp;sort_by=time##"> 59</a></p>
<p>No. 120</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#x9ED8;&#x9ED8;&#x770B;&#x5B8C;&#x5927;&#x5BB6;&#x7684;&#x6587;&#x5B57;&#x540E;&#xFF0C;&#x672C;&#x6765;&#x7EA0;&#x7ED3;&#x8981;&#x4E0D;&#x8981;&#x62A5;&#x540D;&#x7684;&#x6211;&#x66F4;&#x52A0;&#x6B62;&#x6B65;&#x4E0D;&#x524D;&#x4E86;&#x3002;&#x6211;&#x4E0D;&#x77E5;&#x9053;&#x81EA;&#x5DF1;&#x6709;&#x6CA1;&#x6709;&#x62A5;&#x540D;&#x7684;&#x8D44;&#x683C;&#xFF0C;&#x6BD5;&#x7ADF;&#x6211;&#x53EA;&#x662F;&#x6E05;&#x534E;&#x7684;&#x201C;&#x7814;&#x7A76;&#x751F;&#x201D;&#x3002;&#x6211;&#x8BFB;&#x4E86;&#x4E00;&#x4E2A;&#x53EF;&#x80FD;&#x4E0D;&#x5728;&#x6E05;&#x534E;&#x5B66;&#x5B50;&#x8003;&#x8651;&#x8303;&#x56F4;&#x7684;&#x751F;&#x7269;&#x672C;&#x79D1;&#xFF0C;&#x4E00;&#x70B9;&#x70B9;&#x52AA;&#x529B;&#x52A0;&#x5F88;&#x591A;&#x5F88;&#x591A;&#x7684;&#x8FD0;&#x6C14;&#x6765;&#x4E86;&#x6E05;&#x534E;&#xFF0C;&#x5728;&#x8FD9;&#x4E2A;&#x4E0D;&#x666E;&#x901A;&#x7684;&#x6821;&#x56ED;&#x91CC;&#x624B;&#x8DB3;&#x65E0;&#x63AA;&#x3002;</span><br><span class="line"></span><br><span class="line">&#x6211;&#x4E0D;&#x64C5;&#x957F;&#x4F53;&#x80B2;&#xFF0C;&#x4E0D;&#x64C5;&#x957F;&#x793E;&#x4EA4;&#xFF0C;&#x559C;&#x6B22;&#x5B85;&#x5728;&#x5B9E;&#x9A8C;&#x5BA4;&#x505A;&#x5B9E;&#x9A8C;&#xFF0C;&#x559C;&#x6B22;&#x770B;&#x6F2B;&#x753B;&#xFF0C;&#x559C;&#x6B22;&#x6284;&#x83DC;&#x8C31;&#xFF0C;&#x4F1A;&#x4E3A;&#x4E86;&#x70B9;&#x5916;&#x5356;&#x51D1;&#x5355;&#x6210;&#x529F;&#x7701;&#x4E09;&#x5757;&#x94B1;&#x800C;&#x5F00;&#x5FC3;&#x3002;&#x6211;&#x5728;&#x540C;&#x5B66;&#x8001;&#x5E08;&#x9762;&#x524D;&#x5F88;&#x4E50;&#x89C2;&#x79EF;&#x6781;&#xFF0C;&#x5B9E;&#x9A8C;&#x5931;&#x8D25;&#x4E86;&#x4E5F;&#x9F13;&#x52B1;&#x81EA;&#x5DF1;&#x4E0B;&#x6B21;&#x4E00;&#x5B9A;&#x53EF;&#x4EE5;&#xFF0C;&#x4F46;&#x665A;&#x4E0A;&#x56DE;&#x5BBF;&#x820D;&#x4F1A;&#x5077;&#x5077;&#x8EB2;&#x8D77;&#x6765;&#x54ED;&#x3002;&#x6211;&#x89C9;&#x5F97;&#x81EA;&#x5DF1;&#x6709;&#x70B9;&#x201C;&#x5E9F;&#x201D;&#x7684;&#x914D;&#x4E0D;&#x4E0A;&#x6E05;&#x534E;&#x7684;&#x201C;&#x666E;&#x901A;&#x201D;&#x3002;</span><br><span class="line"></span><br><span class="line">&#x5373;&#x4FBF;&#x77E5;&#x9053;&#x81EA;&#x5DF1;&#x548C;&#x8EAB;&#x8FB9;&#x7684;&#x4EBA;&#x5DEE;&#x5F88;&#x591A;&#xFF0C;&#x6211;&#x5374;&#x8FD8;&#x662F;&#x6CA1;&#x6709;&#x90A3;&#x4E48;&#x52AA;&#x529B;&#x3002;&#x6211;&#x8FD8;&#x4F1A;&#x5077;&#x95F2;&#x5728;&#x6821;&#x56ED;&#x91CC;&#x54FC;&#x7740;&#x8D70;&#x8C03;&#x7684;&#x5C0F;&#x66F2;&#x6E9C;&#x8FBE;&#xFF0C;&#x6211;&#x8FD8;&#x662F;&#x5237;&#x624B;&#x673A;&#x665A;&#x7761;&#x7684;&#x4E0D;&#x826F;&#x4F5C;&#x606F;&#x3002;&#x6211;&#x4F1A;&#x8BA8;&#x538C;&#x81EA;&#x5DF1;&#xFF0C;&#x8BA8;&#x538C;&#x4E0D;&#x80FD;&#x4E00;&#x5929;&#x8BFB;&#x4E00;&#x7BC7;&#x6587;&#x7AE0;&#x7684;&#x81EA;&#x5DF1;&#xFF0C;&#x8BA8;&#x538C;&#x82F1;&#x8BED;&#x5199;&#x4F5C;&#x75AF;&#x72C2;&#x6389;&#x5934;&#x53D1;&#x7684;&#x81EA;&#x5DF1;&#xFF0C;&#x8BA8;&#x538C;&#x660E;&#x660E;&#x80D6;&#x80D6;&#x8FD8;&#x5403;&#x591C;&#x5BB5;&#x7684;&#x81EA;&#x5DF1;&#x3002;&#x4F46;&#x6211;&#x201C;&#x5E9F;&#x201D;&#x7684;&#x53EA;&#x6709;&#x8BA8;&#x538C;&#x5374;&#x6CA1;&#x6709;&#x6539;&#x53D8;&#x7684;&#x52C7;&#x6C14;&#xFF0C;&#x8FD8;&#x662F;&#x7B49;&#x5B9E;&#x9A8C;&#x7ED3;&#x675F;&#x6109;&#x5FEB;&#x5F97;&#x7EA6;&#x597D;&#x53CB;&#x53BB;&#x5403;&#x201C;&#x6C34;&#x5E73;&#x6709;&#x9650;&#x201D;&#x3002;&#x6211;&#x666E;&#x666E;&#x901A;&#x901A;&#x7684;&#x602F;&#x61E6;&#x81EA;&#x79C1;&#xFF0C;&#x666E;&#x666E;&#x901A;&#x901A;&#x7684;&#x597D;&#x5403;&#x61D2;&#x505A;&#xFF0C;&#x666E;&#x666E;&#x901A;&#x901A;&#x7684;&#x5076;&#x5C14;&#x89C9;&#x5F97;&#x81EA;&#x5DF1;&#x8FD8;&#x4E0D;&#x9519;&#x3002;</span><br><span class="line"></span><br><span class="line">&#x6B63;&#x5982;&#x4E0A;&#x9762;&#x6240;&#x8BF4;&#xFF0C;&#x6211;&#x662F;&#x4E00;&#x4E2A;&#x591A;&#x9762;&#x5272;&#x88C2;&#x666E;&#x901A;&#x4EBA;&#xFF0C;&#x6000;&#x7740;&#x62EF;&#x6551;&#x764C;&#x75C7;&#x60A3;&#x8005;&#xFF0C;&#x4E3A;&#x56FD;&#x5BB6;&#x4EBA;&#x6C11;&#x505A;&#x8D21;&#x732E;&#x7684;&#x5C0F;&#x5FC3;&#x601D;&#xFF1B;&#x5E72;&#x7740;&#x751F;&#x7269;&#x6C11;&#x5DE5;&#x642C;&#x7816;&#x7684;&#x6D3B;&#x3002;&#x6CA1;&#x4EC0;&#x4E48;&#x6BC5;&#x529B;&#xFF0C;&#x6CA1;&#x4EC0;&#x4E48;&#x52C7;&#x6C14;&#xFF0C;&#x6CA1;&#x4EC0;&#x4E48;&#x4F18;&#x79C0;&#x503C;&#x5F97;&#x79F0;&#x8D5E;&#x7684;&#xFF0C;&#x201C;&#x8FD9;&#x5B69;&#x5B50;&#x6E05;&#x534E;&#x7684;&#x201D;&#x53EF;&#x80FD;&#x662F;&#x6211;&#x73B0;&#x5728;&#x5F97;&#x5230;&#x7684;&#x6700;&#x9AD8;&#x79F0;&#x8D5E;&#x3002;&#x6211;&#x4E0D;&#x77E5;&#x9053;&#x6211;&#x8FD9;&#x4E48;&#x201C;&#x5E9F;&#x201D;&#x8FD8;&#x80FD;&#x7B97;&#x5F97;&#x4E0A;&#x666E;&#x901A;&#x4E48;&#xFF1F;&#x6211;&#x53EA;&#x60F3;&#x5728;&#x8FD9;&#x591C;&#x7A7A;&#x4E0B;&#x7684;&#x5BD2;&#x98CE;&#x91CC;&#x5199;&#x5199;&#x81EA;&#x5DF1;&#xFF0C;&#x6BD5;&#x7ADF;&#x6562;&#x5199;&#x51FA;&#x6765;&#x7684;&#x6211;&#x662F;&#x4E0D;&#x662F;&#x52C7;&#x6562;&#x4E86;&#x4E00;&#x70B9;&#x70B9;&#xFF0C;&#x66F4;&#x201C;&#x666E;&#x901A;&#x201D;&#x4E86;&#x4E00;&#x70B9;&#x70B9;&#x3002;</span><br></pre></td></tr></table></figure>
<p>15&#x5929;&#x4E4B;&#x524D; <a href="https://closed.social/ordinary/?page=2&amp;per_page=20&amp;sort_by=time##"> 30</a></p>
<p>No. 119</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#x6E05;&#x534E; &#x96F6;&#x5B57;&#x73ED; &#x5B66;&#x6587;&#x79D1; </span><br><span class="line">&#x5F88;&#x591A;&#x4EBA;&#x4ECE;&#x6CA1;&#x542C;&#x8BF4;&#x6E05;&#x534E;&#x6709;&#x8FD9;&#x4E2A;&#x7CFB;</span><br><span class="line">&#x8F6C;&#x773C;&#x5F00;&#x5B66;&#x516B;&#x5468;&#x4E86; &#x65F6;&#x95F4;&#x8FC7;&#x5F97;&#x592A;&#x5FEB;</span><br><span class="line">&#x5728;&#x90BA;&#x67B6;&#x8F69;&#x76EE;&#x7779;&#x5929;&#x4EAE;&#x6570;&#x6B21;</span><br><span class="line">&#x4E5F;&#x5728;&#x534A;&#x591C;&#x7684;&#x7D2B;&#x64CD;&#x770B;&#x8FC7;&#x661F;&#x661F;</span><br><span class="line">&#x8FFD;&#x8D76;&#x6BCF;&#x4E00;&#x4E2A;ddl  &#x5F88;&#x72FC;&#x72C8; &#x751A;&#x81F3;&#x6FD2;&#x6B7B;</span><br><span class="line">&#x4E0D;&#x4F53;&#x9762; &#x81F3;&#x5C11;&#x6211;&#x770B;&#x6211;&#x81EA;&#x5DF1;</span><br><span class="line">&#x6211;&#x7A81;&#x7136;&#x51B3;&#x5B9A;&#x9000;&#x8BFE; &#x9000;&#x6389;&#x4E00;&#x95E8;&#x52AA;&#x529B;&#x4E86;&#x534A;&#x5B66;&#x671F;&#x7684;&#x8BFE; </span><br><span class="line">&#x6211;&#x4E0D;&#x7231;&#x968F;&#x5927;&#x6D41;  &#x6700;&#x7EC8;&#x968F;&#x4E86;&#x5927;&#x6D41;</span><br><span class="line">&#x4EBA;&#x6587;&#xFF01;&#x7ECF;&#x7BA1;&#xFF01;&#x53C9;&#x9662;&#xFF01;&#x5317;&#x5927;&#xFF01;</span><br><span class="line">&#x6211;&#x60F3;&#x627E;&#x5230;&#x81EA;&#x5DF1;&#x771F;&#x5FC3;&#x6240;&#x7231; &#x8FFD;&#x5BFB;&#x7CBE;&#x795E;&#x7684;&#x81EA;&#x7531;   &#x6211;&#x8FD8;&#x60F3;&#x8C08;&#x604B;&#x7231;</span><br><span class="line">&#x4E00;&#x5927;&#x65E9;&#x95F9;&#x94C3;&#x5173;&#x4E86;&#x7EE7;&#x7EED;&#x7761; &#x4E00;&#x7741;&#x773C;&#x79BB;&#x4E0A;&#x8BFE;&#x53EA;&#x6709;10&#x5206;&#x949F;&#x4E8E;&#x662F;&#x731B;&#x7136;&#x5750;&#x8D77;</span><br><span class="line">&#x56DE;&#x5BDD;&#x4E86;&#x5403;&#x96F6;&#x98DF;&#x770B;&#x624B;&#x673A;  &#x4F5C;&#x4E1A;&#x53EF;&#x4EE5;&#x660E;&#x5929;&#x65E9;&#x8D77;&#x5199;</span><br><span class="line">&#x6211;&#x53EF;&#x4EE5;&#x3002;  &#x6211;&#x53EF;&#x4EE5;&#x5417;&#xFF1F;</span><br><span class="line">&#x6210;&#x7EE9;&#x5355;&#x4E0A;&#x6709;&#x4E86;&#x7B2C;&#x4E00;&#x4E2A;W </span><br><span class="line">&#x6211;&#x89C9;&#x5F97;&#x81EA;&#x5DF1;&#x662F;&#x4E2A;&#x5E9F;&#x7269;</span><br><span class="line">&#x53EF;&#x662F;&#x5E9F;&#x7269;&#x4E5F;&#x8BE5;&#x751F;&#x6D3B;&#x4E0B;&#x53BB;&#x5427;</span><br><span class="line">&#x81F3;&#x5C11;&#x6D3B;&#x4E0B;&#x53BB;&#x5148; &#x6709;&#x673A;&#x4F1A;&#x5411;&#x5F80;&#x751F;&#x6D3B;</span><br></pre></td></tr></table></figure>
<p>15&#x5929;&#x4E4B;&#x524D; <a href="https://closed.social/ordinary/?page=2&amp;per_page=20&amp;sort_by=time##"> 13</a></p>
<p>No. 118</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#x534E;&#x6E05;&#x5927;&#x5B66;&#x666E;&#x901A;&#x5B66;&#x751F;</span><br><span class="line">&#x53C2;&#x8BC4;&#x6BD4;&#x8D5B;&#x4E5F;&#x4EC5;&#x662F;&#x4E3A;&#x4E86;&#x666E;&#x901A;&#x6587;&#x5316;&#x886B;</span><br></pre></td></tr></table></figure>
<p>15&#x5929;&#x4E4B;&#x524D; <a href="https://closed.social/ordinary/?page=2&amp;per_page=20&amp;sort_by=time##"> 16</a></p>
<p>No. 117</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#x5F88;&#x60F3;&#x6328;&#x4E2A;&#x62B1;&#x4E00;&#x62B1;&#x63D0;&#x540D;&#x91CC;&#x7684;&#x6BCF;&#x4E2A;&#x4EBA;&#x8036;&#x3002;</span><br><span class="line"></span><br><span class="line">&#x8FD9;&#x662F;&#x6211;&#x6765;&#x5230;&#x534E;&#x6E05;&#x5927;&#x5B66;&#x7684;&#x7B2C;&#x4E00;&#x4E2A;&#x5B66;&#x671F;&#xFF0C;&#x5728;&#x8FD9;&#x91CC;&#x9047;&#x5230;&#x4E86;&#x5F88;&#x591A;&#x65E0;&#x6BD4;&#x4F18;&#x79C0;&#x7684;&#x4EBA;&#xFF0C;&#x4E5F;&#x9047;&#x5230;&#x4E86;&#x5F88;&#x591A;&#x660E;&#x660E;&#x53D1;&#x7740;&#x5149;&#x5374;&#x4E0D;&#x81EA;&#x77E5;&#x7684;&#x4EBA;&#x3002;&#x6216;&#x8BB8;&#x51E0;&#x5E74;&#x524D;&#x7684;&#x6211;&#x4F1A;&#x56E0;&#x4E3A;&#x522B;&#x4EBA;&#x7684;&#x8000;&#x773C;&#x800C;&#x611F;&#x5230;&#x81EA;&#x5351;&#xFF0C;&#x53EF;&#x73B0;&#x5728;&#xFF0C;&#x6211;&#x5DF2;&#x7ECF;&#x5B66;&#x4F1A;&#x4E86;&#x62B1;&#x7740;&#x201C;&#x575A;&#x5B88;&#x534E;&#x6E05;&#x5927;&#x5B66;&#x667A;&#x5546;&#x5E95;&#x7EBF;&#x201D;&#x7684;&#x8EBA;&#x5E73;&#x5FC3;&#x6001;&#xFF0C;&#x5E26;&#x7740;&#x7B11;&#x53BB;&#x5BBD;&#x6170;&#x81EA;&#x5DF1;&#x90A3;&#x4E9B;&#x201C;&#x4E0D;&#x5B8C;&#x7F8E;&#x201D;&#x7684;&#x65F6;&#x523B;&#xFF0C;&#x4E5F;&#x60F3;&#x52AA;&#x529B;&#x7ED9;&#x8EAB;&#x8FB9;&#x7684;&#x4EBA;&#x5E26;&#x53BB;&#x4E00;&#x70B9;&#x70B9;&#x5143;&#x6C14;&#x548C;&#x6E29;&#x6696;&#x3002;</span><br><span class="line"></span><br><span class="line">&#x5728;&#x4EBA;&#x4EBA;&#x6469;&#x62F3;&#x64E6;&#x638C;&#x5927;&#x5C55;&#x5B8F;&#x56FE;&#x7684;&#x7ECF;&#x7BA1;&#x5B66;&#x9662;&#x91CC;&#xFF0C;&#x6211;&#x5B9E;&#x5728;&#x662F;&#x592A;&#x666E;&#x901A;&#x5566;&#xFF01;&#x5B66;&#x4E1A;&#x5E73;&#x5E73;&#xFF0C;&#x667A;&#x5546;&#x582A;&#x5FE7;&#xFF0C;&#x6587;&#x5316;&#x6C99;&#x6F20;&#xFF0C;&#x7855;&#x58EB;&#x9636;&#x6BB5;&#x4E86;&#x8FD8;&#x5728;&#x81EA;&#x5DF1;&#x7684;&#x804C;&#x4E1A;&#x65B9;&#x5411;&#x4E0A;&#x627E;&#x4E0D;&#x7740;&#x5317;&#xFF0C;&#x6BCF;&#x5929;&#x601D;&#x8003;&#x5F97;&#x6700;&#x8BA4;&#x771F;&#x7684;&#x95EE;&#x9898;&#x6C38;&#x8FDC;&#x662F;&#x5348;&#x996D;&#x5403;&#x4EC0;&#x4E48;&#xFF0C;&#x6574;&#x5929;&#x6C89;&#x8FF7;&#x4E8E;&#x5FAE;&#x535A;&#x77E5;&#x4E4E;b&#x7AD9;&#x7B49;&#x5404;&#x79CD;&#x5976;&#x5934;&#x4E50;&#x91CC;&#x65E0;&#x6CD5;&#x81EA;&#x62D4;&#x3002;&#x56E0;&#x4E3A;&#x81EA;&#x5DF1;&#x592A;&#x7B28;&#xFF0C;&#x8FD8;&#x4E13;&#x95E8;&#x5F00;&#x4E86;&#x4E2A;&#x516C;&#x4F17;&#x53F7;&#x3010;&#x6BCF;&#x65E5;&#x4E00;&#x732A;&#x3011;&#x5410;&#x69FD;&#x81EA;&#x5DF1;&#x7684;&#x732A;&#x732A;&#x884C;&#x4E3A;&#xFF0C;&#x7ED3;&#x679C;&#x72AF;&#x50BB;&#x7684;&#x5F62;&#x8C61;&#x5728;&#x6574;&#x4E2A;&#x73ED;&#x91CC;&#x53D8;&#x5F97;&#x66F4;&#x52A0;&#x6DF1;&#x5165;&#x4EBA;&#x5FC3;&#x4E86;&#x3002;</span><br><span class="line"></span><br><span class="line">&#x4F46;&#x6211;&#x89C9;&#x5F97;&#x73B0;&#x5728;&#x7684;&#x6211;&#xFF0C;&#x6BD4;&#x4EE5;&#x524D;&#x90A3;&#x4E2A;&#x8FFD;&#x6C42;&#x5B8C;&#x7F8E;&#x3001;&#x4E8B;&#x4E8B;&#x4E89;&#x7B2C;&#x4E00;&#x3001;&#x5076;&#x50CF;&#x5305;&#x88B1;&#x91CD;&#x5F97;&#x4E0D;&#x884C;&#x7684;&#x6211;&#x8981;&#x5F00;&#x5FC3;&#x5F97;&#x591A;&#x8036;&#x3002;</span><br><span class="line"></span><br><span class="line">&#x867D;&#x7136;&#x522B;&#x4EBA;&#x90FD;&#x662F;&#x201C;&#x54BB;&#x201D;&#x7684;&#x4E00;&#x4E0B;&#x98DE;&#x5F97;&#x6700;&#x9AD8;&#x3001;&#x70B8;&#x5F97;&#x6700;&#x4EAE;&#x3001;&#x989C;&#x8272;&#x6700;&#x6591;&#x6593;&#x7684;&#x90A3;&#x7FA4;&#x70DF;&#x82B1;&#xFF0C;&#x53EF;&#x6211;&#x5982;&#x679C;&#x80FD;&#x98DE;&#x5230;&#x4E00;&#x4E2A;&#x9AD8;&#x5EA6;&#x6070;&#x597D;&#x3001;&#x7A7A;&#x6C14;&#x53C8;&#x6CA1;&#x6709;&#x90A3;&#x4E48;&#x7A00;&#x8584;&#x7684;&#x6C14;&#x5C42;&#xFF0C;&#x7136;&#x540E;&#x6296;&#x6296;&#x8EAB;&#x5B50;&#x6296;&#x51FA;&#x81EA;&#x5DF1;&#x7684;&#x989C;&#x8272;&#xFF0C;&#x751A;&#x81F3;&#x88AB;&#x522B;&#x4EBA;&#x5938;&#x4E00;&#x53E5;&#x201C;&#x54C7;&#x90A3;&#x6735;&#x70DF;&#x82B1;&#x53EF;&#x771F;&#x7279;&#x522B;&#x201D;&#x3001;&#x201C;&#x54C7;&#x90A3;&#x6735;&#x70DF;&#x82B1;&#x53EF;&#x771F;&#x9177;&#x201D;&#xFF0C;&#x90A3;&#x4E0D;&#x4E5F;&#x633A;&#x597D;&#x7684;&#x561B;&#x3002;</span><br><span class="line"></span><br><span class="line">&#x6211;&#x666E;&#x901A;&#xFF0C;&#x53EF;&#x662F;&#x6211;&#x5C45;&#x7136;&#x8FD8;&#x633A;&#x559C;&#x6B22;&#x81EA;&#x5DF1;&#x7684;&#x3002;&#x9488;&#x4E0D;&#x6233;&#xFF01;</span><br><span class="line"></span><br><span class="line">&#x672A;&#x6765;&#x8981;&#x52AA;&#x529B;&#x505A;&#x4E00;&#x4E2A;&#x88AB;&#x522B;&#x4EBA;&#x559C;&#x6B22;&#x3001;&#x89C9;&#x5F97;&#x6709;&#x610F;&#x601D;&#x7684;&#x4EBA;&#xFF0C;&#x4E5F;&#x5E0C;&#x671B;&#x5927;&#x5BB6;&#x90FD;&#x80FD;&#x6210;&#x4E3A;&#x4E0E;&#x81EA;&#x5DF1;&#x548C;&#x5E73;&#x5171;&#x5904;&#xFF0C;&#x63A5;&#x7EB3;&#x81EA;&#x5DF1;&#xFF0C;&#x559C;&#x6B22;&#x81EA;&#x5DF1;&#x7684;&#x4EBA;&#x3002;</span><br><span class="line"></span><br><span class="line">&#x6211;&#x4EEC;&#x4E00;&#x8D77;&#x6E29;&#x67D4;&#x5730;&#x53D1;&#x5149;&#x5427;&#xFF01;</span><br><span class="line"></span><br><span class="line">(&#x25CF;&apos;&#x25E1;&apos;&#x25CF;)</span><br></pre></td></tr></table></figure>
<p><a href="https://cloud.tsinghua.edu.cn/f/1647f587d0064e33b7af/">&#x8865;&#x5145;&#x6750;&#x6599;</a></p>
<p>15&#x5929;&#x4E4B;&#x524D; <a href="https://closed.social/ordinary/?page=2&amp;per_page=20&amp;sort_by=time##"> 11</a></p>
<p>No. 116</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#x96F6;&#x5B57;&#x73ED;&#x65B0;&#x751F;&#x3002;</span><br><span class="line">&#x8FD8;&#x6CA1;&#x8003;&#x8FC7;&#x51E0;&#x573A;&#x8BD5;&#xFF0C;</span><br><span class="line">&#x6CA1;&#x600E;&#x4E48;&#x53C2;&#x52A0;&#x8FC7;&#x4EC0;&#x4E48;&#x793E;&#x5DE5;&#xFF0C;</span><br><span class="line">&#x8FD8;&#x6CA1;&#x5728;&#x534E;&#x6E05;&#x8C08;&#x8FC7;&#x604B;&#x7231;&#xFF0C;</span><br><span class="line">&#x8FD8;&#x6CA1;&#x548C;&#x540C;&#x5B66;&#x7D2B;&#x64CD;&#x591C;&#x804A;&#x8FC7;&#xFF0C;</span><br><span class="line">&#x8FD8;&#x6CA1;&#x548C;&#x540C;&#x5B66;&#x7EC4;&#x56E2;&#x51FA;&#x6E38;&#x8FC7;&#xFF0C;</span><br><span class="line">&#x8FD8;&#x6CA1;&#x548C;&#x8001;&#x5E08;&#x6709;&#x8FC7;&#x4EC0;&#x4E48;&#x6069;&#x6028;&#xFF0C;</span><br><span class="line">&#x8FD8;&#x6CA1;&#x6B63;&#x5F0F;&#x8003;&#x8FC7;&#x4E09;&#x5343;&#x7C73;&#xFF0C;</span><br><span class="line">&#x8FD8;&#x6CA1;&#x6709;&#x8FC7;&#x9AD8;&#x5206;&#x6216;&#x6302;&#x79D1;&#xFF0C;</span><br><span class="line">&#x8FD8;&#x6CA1;&#x6709;&#x4E3A;&#x672A;&#x6765;&#x611F;&#x5230;&#x7126;&#x8651;&#x8FC7;&#xFF0C;</span><br><span class="line">&#x8FD8;&#x6CA1;&#x6709;&#x4E3A;&#x8FC7;&#x53BB;&#x611F;&#x5230;&#x6000;&#x5FF5;&#x8FC7;&#xFF0C;</span><br><span class="line">&#x8FD8;&#x6CA1;&#x611F;&#x53D7;&#x5230;&#x81EA;&#x5DF1;&#x6709;&#x591A;&#x4E48;&#x666E;&#x901A;&#xFF0C;</span><br><span class="line">&#x4E5F;&#x8FD8;&#x6CA1;&#x611F;&#x53D7;&#x5230;&#x81EA;&#x5DF1;&#x6709;&#x591A;&#x4E48;&#x4E0D;&#x666E;&#x901A;&#x3002;</span><br><span class="line"> </span><br><span class="line">&#x534E;&#x6E05;&#x7684;&#x7279;&#x5956;&#x4E0E;&#x7279;&#x666E;&#x901A;&#x5956;&#x9009;&#x624B;&#x90FD;&#x66FE;&#x7ECF;&#x662F;&#x6211;&#x3002;</span><br></pre></td></tr></table></figure>
<p>15&#x5929;&#x4E4B;&#x524D; <a href="https://closed.social/ordinary/?page=2&amp;per_page=20&amp;sort_by=time##"> 15</a></p>
<p>No. 115</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#x5C0F;&#x9547;&#x505A;&#x9898;&#x5BB6;</span><br><span class="line">&#x9760;&#x7740;&#x9AD8;&#x8003;&#x8D85;&#x5E38;&#x53D1;&#x6325;&#x6765;&#x5230;&#x534E;&#x6E05;</span><br><span class="line">&#x6211;&#x672C;&#x4E0D;&#x5C5E;&#x4E8E;&#x8FD9;&#x91CC;</span><br><span class="line">&#x6CA1;&#x6709;&#x4EC0;&#x4E48;&#x7279;&#x957F;</span><br><span class="line">&#x54E6;&#xFF0C;&#x5BF9;&#x4E86;&#xFF0C;&#x6211;&#x7231;&#x7BEE;&#x7403;&#xFF0C;&#x4F46;&#x662F;&#x6211;&#x53EA;&#x6709;168cm&#xFF0C;&#x7403;&#x6280;&#x4E00;&#x822C;&#xFF0C;&#x5728;&#x573A;&#x4E0A;&#x5145;&#x5F53;&#x5DE5;&#x5177;&#x4EBA;</span><br><span class="line">&#x6210;&#x7EE9;&#x4E0D;&#x597D;&#xFF0C;GPA&#x4E2D;&#x4E0B;&#x7B49;</span><br><span class="line">&#x6709;&#x65F6;&#x559C;&#x6B22;&#x5B64;&#x72EC;&#xFF0C;&#x6709;&#x65F6;&#x559C;&#x6B22;&#x7ED3;&#x4F34;</span><br><span class="line">&#x6709;&#x51E0;&#x4E2A;&#x670B;&#x53CB;</span><br><span class="line">&#x6CA1;&#x6709;&#x5973;&#x670B;&#x53CB;</span><br><span class="line">&#x6E34;&#x671B;&#x5728;&#x5F00;&#x5FC3;&#x65F6;&#x6216;&#x8005;&#x70E6;&#x607C;&#x65F6;&#x80FD;&#x627E;&#x4E2A;&#x4EBA;&#x5206;&#x4EAB;</span><br><span class="line">&#x8FD9;&#x4E2A;&#x4EBA;&#x662F;&#x666E;&#x901A;&#x670B;&#x53CB;&#x4E5F;&#x884C;&#xFF0C;&#x5973;&#x670B;&#x53CB;&#x6700;&#x597D;</span><br><span class="line">&#x5BF9;&#x4E86;&#xFF0C;&#x6211;&#x8FD8;&#x505A;&#x7740;&#x793E;&#x5DE5;</span><br><span class="line">&#x4F46;&#x662F;&#x5728;&#x793E;&#x5DE5;&#x4E0A;&#x4E5F;&#x6CA1;&#x6709;&#x4EC0;&#x4E48;&#x6210;&#x7EE9;</span><br><span class="line">&#x7236;&#x6BCD;&#x6CA1;&#x6709;&#x7ED9;&#x6211;&#x7279;&#x522B;&#x5927;&#x7684;&#x538B;&#x529B;</span><br><span class="line">&#x56E0;&#x4E3A;&#x8003;&#x4E0A;&#x534E;&#x6E05;&#x5C31;&#x5DF2;&#x7ECF;&#x8BA9;&#x4ED6;&#x4EEC;&#x8DB3;&#x591F;&#x60CA;&#x559C;</span><br><span class="line">&#x4F46;&#x662F;</span><br><span class="line">&#x6211;&#x4E0D;&#x60F3;&#x5728;&#x56ED;&#x5B50;&#x91CC;</span><br><span class="line">&#x788C;&#x788C;&#x65E0;&#x4E3A;&#xFF0C;&#x5E73;&#x6DE1;&#x56DB;&#x5E74;</span><br></pre></td></tr></table></figure>
<p>15&#x5929;&#x4E4B;&#x524D; <a href="https://closed.social/ordinary/?page=2&amp;per_page=20&amp;sort_by=time##"> 20</a></p>
<p>No. 114</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#x6210;&#x7EE9;&#x4E2D;&#x7B49;&#xFF0C;&#x505A;&#x8FC7;&#x7684;&#x4E8B;&#x4E5F;&#x633A;&#x591A;&#xFF0C;&#x6CA1;&#x5565;&#x5927;&#x6210;&#x5C31;&#xFF0C;&#x4E5F;&#x6CA1;&#x6709;&#x7279;&#x522B;&#x5931;&#x8D25;&#x7684;&#x7ECF;&#x5386;&#x3002;</span><br><span class="line">&#x60F3;&#x878D;&#x5165;&#x6821;&#x5185;&#x7684;&#x5708;&#x5B50;&#xFF0C;&#x52A0;&#x4E86;&#x5F88;&#x591A;&#x6C34;&#x7FA4;&#xFF0C;&#x53D1;&#x73B0;&#x91CC;&#x9762;&#x6D3B;&#x8DC3;&#x7684;&#x6C38;&#x8FDC;&#x662F;&#x540C;&#x4E00;&#x6CE2;&#x4EBA;&#xFF0C;&#x60F3;&#x8BA4;&#x8BC6;&#x4ED6;&#x4EEC;&#xFF0C;&#x4F46;&#x662F;&#x5374;&#x611F;&#x89C9;&#x5F88;&#x96BE;&#x8BA9;&#x4ED6;&#x4EEC;&#x8BA4;&#x8BC6;&#x81EA;&#x5DF1;&#x3002;</span><br><span class="line">&#x6821;&#x5185;&#x7684;&#x670B;&#x53CB;&#x4E0D;&#x591A;&#xFF0C;&#x4E0D;&#x8FC7;&#x548C;&#x820D;&#x53CB;&#x5173;&#x7CFB;&#x5F88;&#x597D;&#xFF0C;&#x8FD9;&#x5927;&#x6982;&#x662F;&#x6211;&#x5728;&#x6B23;&#x6170;&#x7684;&#x4E00;&#x70B9;&#x3002;</span><br><span class="line">&#x65F6;&#x5E38;&#x5728;&#x4E27;&#x548C;&#x611F;&#x52A8;&#x4E4B;&#x95F4;&#x5207;&#x6362;&#x3002;&#x5C31;&#x662F;&#x4E00;&#x79CD;&#x6BD4;&#x4E0A;&#x4E0D;&#x8DB3;&#x6BD4;&#x4E0B;&#x6709;&#x4F59;&#x7684;&#x72B6;&#x6001;&#x3002;</span><br></pre></td></tr></table></figure>
<p>15&#x5929;&#x4E4B;&#x524D; <a href="https://closed.social/ordinary/?page=2&amp;per_page=20&amp;sort_by=time##"> 11</a></p>
<p>No. 113</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">T&#x5927;&#x666E;&#x901A;&#x5B66;&#x5B50;&#x3002;</span><br><span class="line">&#x66FE;&#x662F;&#x5C0F;&#x9547;&#x505A;&#x9898;&#x5BB6;&#xFF0C;&#x4F46;&#x5982;&#x4ECA;&#x5DF2;&#x7ECF;&#x6CA1;&#x6709;&#x4EC0;&#x4E48;&#x4F18;&#x8D8A;&#x611F;&#x3002;</span><br><span class="line">&#x6050;&#x60E7;&#x793E;&#x4EA4;&#xFF0C;&#x5728;&#x5176;&#x4ED6;&#x4EBA;&#x9762;&#x524D;&#x4F3C;&#x4E4E;&#x6C38;&#x8FDC;&#x53EA;&#x662F;&#x5C34;&#x5C2C;&#x7684;&#x914D;&#x89D2;&#xFF0C;&#x9762;&#x5BF9;&#x7740;&#x8C08;&#x7B11;&#x98CE;&#x751F;&#x7684;&#x4EBA;&#x604D;&#x5982;&#x9694;&#x4E16;&#x3002;</span><br><span class="line">&#x559C;&#x6B22;&#x80E1;&#x601D;&#x4E71;&#x60F3;&#xFF0C;&#x559C;&#x6B22;&#x5728;&#x6DF1;&#x591C;&#x7EC6;&#x6570;&#x4E0D;&#x582A;&#x56DE;&#x9996;&#x7684;&#x81EA;&#x6211;&#xFF0C;&#x559C;&#x6B22;&#x628A;&#x8033;&#x673A;&#x7684;&#x58F0;&#x97F3;&#x5F00;&#x5230;&#x6700;&#x5927;&#x5728;&#x5B66;&#x5802;&#x8DEF;&#x4E0A;&#x9A91;&#x884C;&#x3002;</span><br><span class="line">&#x6CA1;&#x6709;&#x7279;&#x522B;&#x7684;&#x7231;&#x597D;&#x3002;</span><br><span class="line">&#x60F3;&#x8981;&#x4F18;&#x79C0;&#xFF0C;&#x4F46;&#x4E0D;&#x5E0C;&#x671B;&#x4E0E;&#x4E16;&#x4FD7;&#x540C;&#x6D41;&#x3002;</span><br><span class="line">&#x5C31;&#x8FD9;&#x7684;&#x5427;&#xFF0C;&#x751F;&#x6D3B;&#x3002;</span><br></pre></td></tr></table></figure>
<p>15&#x5929;&#x4E4B;&#x524D; <a href="https://closed.social/ordinary/?page=2&amp;per_page=20&amp;sort_by=time##"> 13</a></p>
<p>No. 112</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#x6CA1;&#x6709;&#x72B6;&#x5143;&#x7684;&#x5149;&#x73AF;&#x3002;&#x6CA1;&#x6709;&#x91D1;&#x724C;&#x7684;&#x6B8A;&#x8363;&#x3002;&#x6CA1;&#x6709;&#x5929;&#x624D;&#x7684;&#x7737;&#x987E;&#x3002;&#x53EA;&#x6709;&#x6311;&#x706F;&#x591C;&#x6218;&#x6362;&#x6765;&#x7684;&#x9752;&#x6625;&#x65E0;&#x6094;&#xFF0C;&#x53EA;&#x6709;&#x5BD2;&#x7A97;&#x82E6;&#x8BFB;&#x6362;&#x6765;&#x7684;&#x5C3D;&#x529B;&#x800C;&#x4E3A;&#x3002;&#x5982;&#x4ECA;&#xFF0C;&#x4ECD;&#x53EA;&#x662F;&#x4E00;&#x540D;&#x666E;&#x901A;&#x7684;&#x5927;&#x5B66;&#x751F;&#xFF0C;&#x7518;&#x4E8E;&#x5E73;&#x51E1;&#xFF0C;&#x4E0D;&#x7518;&#x5815;&#x843D;&#x3002;</span><br></pre></td></tr></table></figure>
<p>16&#x5929;&#x4E4B;&#x524D; <a href="https://closed.social/ordinary/?page=2&amp;per_page=20&amp;sort_by=time##"> 10</a></p>
<p>No. 111</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#x963F;&#x5B85;&#xFF0C;</span><br><span class="line">&#x7537;&#xFF0C;20&#x5C81;&#x3002;</span><br><span class="line">2018&#x5E74;&#x4EE5;&#x4E0D;&#x9AD8;&#x4E0D;&#x4F4E;&#x7684;&#x5206;&#x6570;&#x8003;&#x5165;&#x534E;&#x6E05;&#x5927;&#x5B66;&#x4E00;&#x4E2A;&#x5F55;&#x53D6;&#x5206;&#x4E0D;&#x9AD8;&#x4E0D;&#x4F4E;&#x7684;&#x4E13;&#x4E1A;&#x3002;</span><br><span class="line">&#x6709;&#x4E2A;&#x4E0D;&#x9AD8;&#x4E0D;&#x4F4E;&#x7684;GPA&#xFF0C;&#x6CA1;&#x6709;&#x6302;&#x79D1;&#x3002;</span><br><span class="line">&#x4E0D;&#x559C;&#x6B22;&#x8FD0;&#x52A8;&#xFF0C;&#x4F46;&#x53EF;&#x4EE5;&#x8FD0;&#x52A8;&#x3002;</span><br><span class="line">&#x963F;&#x7518;&#x603B;&#x662F;&#x5728;&#x6700;&#x540E;&#x51E0;&#x5929;&#x8DD1;&#x5B8C;&#x3002;</span><br><span class="line">&#x6709;&#x51E0;&#x4E2A;&#x597D;&#x670B;&#x53CB;&#xFF0C;&#x4F46;&#x6CA1;&#x6709;&#x5973;&#x670B;&#x53CB;&#x3002;</span><br><span class="line">&#x6709;&#x4E2A;&#x522B;&#x7231;&#x597D;&#xFF0C;&#x4F46;&#x6CA1;&#x6709;&#x52A0;&#x5165;&#x793E;&#x56E2;&#x3002;</span><br><span class="line">&#x6709;&#x65F6;&#x60F3;&#x53C2;&#x52A0;&#x6D3B;&#x52A8;&#xFF0C;&#x4F46;&#x6CA1;&#x6709;&#x52A0;&#x5165;&#x793E;&#x5DE5;&#x3002;</span><br><span class="line">&#x5B9E;&#x9A8C;&#x505A;&#x7684;&#x4E0D;&#x597D;&#x4E0D;&#x574F;&#xFF0C;&#x4F5C;&#x4E1A;&#x4EA4;&#x7684;&#x4E0D;&#x65E9;&#x4E0D;&#x665A;&#x3002;</span><br><span class="line">&#x65E9;&#x4E0A;&#x8D77;&#x5F97;&#x665A;&#xFF0C;&#x665A;&#x4E0A;&#x7761;&#x5F97;&#x4E5F;&#x665A;&#xFF0C;&#x4E0A;&#x8BFE;&#x7761;&#x5F97;&#x5F88;&#x9999;&#x3002;</span><br><span class="line">&#x5982;&#x679C;&#x8BF4;&#x5728;&#x534E;&#x6E05;&#x5927;&#x5B66;&#x8BFB;&#x4E66;&#x6700;&#x6DF1;&#x523B;&#x7684;&#x611F;&#x53D7;&#xFF0C;</span><br><span class="line">&#x201C;&#x6211;&#x6C38;&#x8FDC;&#x559C;&#x6B22;&#x75AB;&#x60C5;&#x524D;&#x82AC;&#x9752;&#x98DF;&#x5802;&#x7684;&#x7C73;&#x7EBF;&#x201D;</span><br></pre></td></tr></table></figure>
<p>16&#x5929;&#x4E4B;&#x524D; <a href="https://closed.social/ordinary/?page=2&amp;per_page=20&amp;sort_by=time##"> 17</a></p>
<p>No. 110</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#x60F3;&#x8981;&#x660E;&#x4FE1;&#x7247;&#x548C;&#x6587;&#x5316;&#x886B;</span><br><span class="line">&#x6211;&#x4E0D;&#x89C9;&#x5F97;&#x6211;&#x662F;&#x534E;&#x6E05;&#x666E;&#x901A;&#x5B66;&#x751F;&#xFF0C;&#x6211;&#x662F;&#x534E;&#x6E05;&#x666E;&#x901A;&#x5931;&#x8D25;&#x5B66;&#x751F;&#x3002;&#x6211;&#x5728;&#x534E;&#x6E05;&#x5F88;&#x591A;&#x666E;&#x901A;&#x4EBA;&#x8EAB;&#x4E0A;&#x770B;&#x5230;&#x4E86;&#x8BB8;&#x591A;&#x5149;&#x4EAE;&#x548C;&#x6E29;&#x6696;&#xFF0C;&#x800C;&#x6211;&#x6BC1;&#x5728;&#x4E86;&#x8FD9;&#x91CC;&#x3002;</span><br><span class="line">&#x56E0;&#x4E3A;&#x79CD;&#x79CD;&#x539F;&#x56E0;&#x6700;&#x540E;&#x6765;&#x4E86;&#x6765;&#x4E4B;&#x524D;&#x5C31;&#x5F88;&#x4E0D;&#x559C;&#x6B22;&#x7684;&#x534E;&#x6E05;&#xFF0C;&#x53D1;&#x73B0;&#x679C;&#x7136;&#x975E;&#x5E38;&#x4E0D;&#x9002;&#x5408;&#x5462;&#x3002;</span><br><span class="line">&#x666E;&#x901A;&#x7684;&#x5931;&#x8D25;&#x5B66;&#x751F;&#xFF1A;&#x666E;&#x901A;&#x7684;&#x5728;&#x534E;&#x6E05;&#x6CA1;&#x6709;&#x4EFB;&#x4F55;&#x5F52;&#x5C5E;&#x611F;&#xFF0C;&#x666E;&#x901A;&#x7684;&#x770B;&#x4E0D;&#x5230;&#x524D;&#x8DEF;&#xFF0C;&#x666E;&#x901A;&#x7684;&#x6CA1;&#x6709;&#x670B;&#x53CB;&#xFF0C;&#x666E;&#x901A;&#x7684;&#x4F4E;gpa&#xFF0C;&#x666E;&#x901A;&#x7684;&#x5317;&#x533B;&#x516D;&#x9662;&#x987E;&#x5BA2;&#xFF08;which means &#x4E0D;&#x662F;&#x91CD;&#x5EA6;&#xFF09;&#x3002;</span><br><span class="line">&#x4ECE;&#x6765;&#x6CA1;&#x6709;&#x60F3;&#x8FC7;&#x7528;&#x534E;&#x6E05;&#x7684;&#x6210;&#x529F;&#x5957;&#x8DEF;&#x6765;&#x89C4;&#x8BAD;&#x81EA;&#x5DF1;&#xFF0C;&#x4E5F;&#x8FD8;&#x662F;&#x53D8;&#x6210;&#x4E86;&#x8FD9;&#x4E2A;&#x6837;&#x5B50;&#x3002;</span><br><span class="line">&#x54E6;&#x90A3;&#x5BF9;&#x8C08;&#x51E0;&#x53E5;&#x6291;&#x90C1;&#x75C7;&#x597D;&#x4E86;&#x3002;&#x6211;&#x5012;&#x4E0D;&#x9700;&#x8981;&#x522B;&#x4EBA;&#x66F4;&#x591A;&#x7167;&#x987E;&#x6216;&#x662F;&#x4EC0;&#x4E48;&#xFF0C;&#x5728;&#x6211;&#x5FC3;&#x91CC;&#x53EA;&#x8981;&#x4E0D;&#x662F;&#x91CD;&#x5EA6;&#xFF0C;&#x5B83;&#x5C31;&#x8DDF;&#x8170;&#x690E;&#x95F4;&#x76D8;&#x7A81;&#x51FA;&#x4E00;&#x6837;&#xFF0C;&#x6162;&#x6027;&#x75C5;&#xFF0C;&#x4E0D;&#x6740;&#x4EBA;&#xFF0C;&#x7ECF;&#x5E38;&#x88AB;&#x641E;&#x5F97;&#x7CBE;&#x795E;&#x604D;&#x60DA;&#x548C;&#x8EAB;&#x4F53;&#x75BC;&#x75DB;&#x7F62;&#x4E86;&#x3002;</span><br><span class="line">&#x6211;&#x75DB;&#x6068;&#x7684;&#x662F;&#x6700;&#x597D;&#x7684;&#x5E74;&#x7EAA;&#x5374;&#x8981;&#x7528;&#x6765;&#x5BF9;&#x6297;&#x6291;&#x90C1;&#x75C7;&#xFF0C;&#x6211;&#x75DB;&#x6068;&#x7684;&#x662F;&#x6CA1;&#x6709;&#x4E00;&#x7FA4;&#x4EBA;&#x7684;&#x538B;&#x5236;&#x6211;&#x6839;&#x672C;&#x4E0D;&#x53EF;&#x80FD;&#x6765;&#x8FD9;&#x91CC;&#x4E5F;&#x4E0D;&#x4F1A;&#x53D1;&#x751F;&#x8FD9;&#x4E9B;&#x4E8B;&#x60C5;&#xFF0C;&#x6211;&#x75DB;&#x6068;&#x7684;&#x662F;&#x6211;&#x4E8C;&#x5341;&#x6765;&#x5C81;&#x7684;&#x751F;&#x547D;&#xFF0C;&#x4EC5;&#x6B64;&#x800C;&#x5DF2;&#x3002;</span><br></pre></td></tr></table></figure>
<p>16&#x5929;&#x4E4B;&#x524D; <a href="https://closed.social/ordinary/?page=2&amp;per_page=20&amp;sort_by=time##"> 19</a></p>
<p>No. 109</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#x53EA;&#x5E0C;&#x671B;&#x6BCF;&#x5929;&#x80FD;&#x5403;&#x9971;3&#x987F;&#x996D;&#xFF0C;&#x5403;&#x70B9;&#x597D;&#x5403;&#x7684;&#x3002;</span><br><span class="line">&#x53EA;&#x5E0C;&#x671B;&#x6BCF;&#x5929;&#x80FD;&#x65E9;&#x7761;&#x65E9;&#x8D77;&#xFF0C;&#x8EAB;&#x4F53;&#x5065;&#x5EB7;&#x3002;</span><br><span class="line">&#x53EA;&#x5E0C;&#x671B;&#x6BCF;&#x5929;&#x80FD;&#x6709;&#x65F6;&#x95F4;&#x8BFB;&#x81EA;&#x5DF1;&#x559C;&#x6B22;&#x7684;&#x4E66;&#xFF0C;&#x770B;&#x559C;&#x6B22;&#x7684;&#x7535;&#x5F71;&#x3002;</span><br></pre></td></tr></table></figure>
<p>16&#x5929;&#x4E4B;&#x524D; <a href="https://closed.social/ordinary/?page=2&amp;per_page=20&amp;sort_by=time##"> 14</a></p>
<p>No. 108</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#x201C;&#x6211;&#x5728;&#x4E0D;&#x540C;&#x7684;&#x751F;&#x6D3B;&#x91CC;&#x5BA2;&#x4E32;&#xFF0C;&#x4E3B;&#x89D2;&#x5374;&#x4ECE;&#x672A;&#x5165;&#x9009;&#x201D;</span><br><span class="line">&#x5927;&#x4E00;&#x4E00;&#x5E74;&#x6210;&#x7EE9;&#x4E0D;&#x6E29;&#x4E0D;&#x706B;&#xFF0C;&#x6CA1;&#x6709;&#x5956;&#x5B66;&#x91D1;&#xFF0C;&#x6709;&#x4E00;&#x70B9;&#x70B9;&#x5FD7;&#x613F;&#x6D3B;&#x52A8;&#xFF0C;&#x6CA1;&#x6709;&#x672A;&#x6765;&#x7684;&#x89C4;&#x5212;&#xFF0C;&#x751A;&#x81F3;&#x4ECE;&#x9AD8;&#x8003;&#x586B;&#x62A5;&#x5FD7;&#x613F;&#x5230;&#x4ECA;&#x5929;&#x90FD;&#x6CA1;&#x6709;&#x627E;&#x5230;&#x81EA;&#x5DF1;&#x7684;&#x5174;&#x8DA3;&#x662F;&#x4EC0;&#x4E48;&#x3002;&#x65E0;&#x6570;&#x8BA1;&#x5212;&#x60F3;&#x4E86;&#x6CA1;&#x505A;&#xFF0C;&#x505A;&#x4E86;&#x534A;&#x9014;&#x800C;&#x5E9F;&#x3002;&#x5076;&#x5C14;&#x4F1A;&#x56E0;&#x4E3A;&#x4E00;&#x4E9B;&#x5C0F;&#x5C0F;&#x7684;&#x6210;&#x5C31;&#x5F00;&#x5FC3;&#x4E00;&#x4F1A;&#x513F;&#xFF0C;&#x66F4;&#x591A;&#x7684;&#x65F6;&#x5019;&#x50CF;&#x662F;&#x88AB;&#x65F6;&#x95F4;&#x63A8;&#x7740;&#x5411;&#x524D;&#x3002;</span><br><span class="line">&#x4EBA;&#x90FD;&#x662F;&#x5411;&#x524D;&#x770B;&#x7684;&#xFF0C;&#x8FD9;&#x4E5F;&#x6CA1;&#x9519;&#x3002;&#x8FDB;&#x5165;&#x521D;&#x4E2D;&#xFF0C;&#x611F;&#x89C9;&#x6574;&#x4E2A;&#x5E74;&#x7EA7;&#x7684;&#x6C1B;&#x56F4;&#x90FD;&#x662F;&#x4E3A;&#x4E86;&#x5347;&#x5165;&#x9AD8;&#x4E2D;&#x505A;&#x51C6;&#x5907;&#xFF1B;&#x8FDB;&#x5165;&#x9AD8;&#x4E2D;&#xFF0C;&#x5927;&#x5BB6;&#x7684;&#x6240;&#x6709;&#x4E8B;&#x90FD;&#x56F4;&#x7ED5;&#x7740;&#x8FDB;&#x5165;&#x66F4;&#x597D;&#x7684;&#x5927;&#x5B66;&#xFF1B;&#x8FDB;&#x5165;&#x5927;&#x5B66;&#xFF0C;&#x54EA;&#x6015;&#x53EA;&#x662F;&#x5927;&#x4E00;&#x5927;&#x4E8C;&#xFF0C;&#x5927;&#x5BB6;&#x90FD;&#x5728;&#x8BBE;&#x7ACB;&#x8BA1;&#x5212;&#xFF0C;&#x4E3A;&#x81EA;&#x5DF1;&#x56DB;&#x5E74;&#x4EE5;&#x540E;&#x7684;&#x751F;&#x6D3B;&#x505A;&#x6253;&#x7B97;&#x3002;&#x8FDB;&#x7EC4;&#x79D1;&#x7814;&#x3001;&#x7B7E;&#x7EA6;&#x51FA;&#x56FD;&#x3001;&#x8054;&#x7CFB;&#x5BFC;&#x5E08;....&#x5927;&#x5BB6;&#x90FD;&#x5728;&#x5411;&#x524D;&#x8D70;&#xFF0C;&#x8FD9;&#x4E5F;&#x633A;&#x597D;&#x3002;</span><br><span class="line">&#x6709;&#x65F6;&#x5019;&#x5C31;&#x662F;&#x5F88;&#x6015;&#x770B;&#x5230;&#x4E00;&#x4E9B;&#x63A8;&#x9001;&#x6216;&#x8005;&#x5BA3;&#x4F20;&#xFF0C;&#x7279;&#x522B;&#x662F;&#x4E3B;&#x4EBA;&#x516C;&#x90FD;&#x662F;&#x8EAB;&#x8FB9;&#x7684;&#x540C;&#x5B66;&#x3002;&#x6211;&#x7EDD;&#x5BF9;&#x4E0D;&#x662F;&#x541D;&#x556C;&#x4E8E;&#x81EA;&#x5DF1;&#x5BF9;&#x4ED6;&#x4EBA;&#x7684;&#x8D5E;&#x8D4F;&#xFF0C;&#x66F4;&#x591A;&#x7684;&#x662F;&#x5BB3;&#x6015;&#x9762;&#x5BF9;&#x81EA;&#x5DF1;&#x7684;&#x865A;&#x5F31;&#x4E0E;&#x65E0;&#x529B;&#x3002;</span><br><span class="line">&#x8FD9;&#x79CD;&#x65E0;&#x529B;&#x611F;&#x86EE;&#x50CF;&#x6211;&#x5B66;&#x81EA;&#x7531;&#x6CF3;&#x7684;&#x65F6;&#x5019;&#xFF0C;&#x51FA;&#x53D1;&#x65F6;&#x5212;&#x6C34;&#x6709;&#x529B;&#x8EAB;&#x59FF;&#x8F7B;&#x76C8;&#xFF0C;&#x6E38;&#x5230;&#x4E00;&#x534A;&#x53EA;&#x89C9;&#x5F97;&#x81EA;&#x5DF1;&#x7684;&#x901F;&#x5EA6;&#x8D8A;&#x6765;&#x8D8A;&#x6162;&#xFF0C;&#x52A8;&#x4F5C;&#x8D70;&#x5F62;&#x6362;&#x6C14;&#x4E0D;&#x7545;&#xFF0C;&#x5B9B;&#x5982;&#x5C06;&#x6C89;&#x7684;&#x8239;&#x3002;&#x6216;&#x8BB8;&#x81EA;&#x5DF1;&#x7684;&#x52A8;&#x4F5C;&#x4E00;&#x5F00;&#x59CB;&#x5C31;&#x662F;&#x9519;&#x7684;&#xFF0C;&#x5230;&#x4E86;&#x8BE5;&#x5403;&#x62A5;&#x5E94;&#x7684;&#x65F6;&#x5019;&#x4E86;&#x3002;</span><br><span class="line">&#x8FDB;&#x5165;&#x5927;&#x4E8C;&#x4E0A;&#x6765;&#x4E86;&#x4E00;&#x6CE2;&#x75AF;&#x72C2;&#x7684;&#x9009;&#x8BFE;&#xFF0C;&#x4F30;&#x8BA1;&#x5F53;&#x65F6;&#x662F;&#x60F3;&#x7528;&#x70B9;&#x5916;&#x754C;&#x7684;&#x538B;&#x529B;&#x523A;&#x6FC0;&#x81EA;&#x5DF1;&#x6446;&#x8131;&#x4E0D;&#x6E29;&#x4E0D;&#x706B;&#x6D51;&#x6D51;&#x5669;&#x5669;&#x7684;&#x72B6;&#x6001;&#x3002;&#x5F00;&#x59CB;&#x4E86;&#x4E00;&#x4E2A;&#x81EA;&#x5DF1;&#x6BD4;&#x8F83;&#x611F;&#x5174;&#x8DA3;&#x7684;&#x8F85;&#x4FEE;&#xFF0C;&#x4F46;&#x4E00;&#x5806;&#x4E8B;&#x60C5;&#x53C8;&#x628A;&#x6211;&#x62D6;&#x5EF6;&#x78E8;&#x8E6D;&#x7684;&#x7F3A;&#x70B9;&#x65E0;&#x9650;&#x7684;&#x653E;&#x5927;&#xFF0C;&#x73B0;&#x5728;&#x9677;&#x5165;&#x4E86;&#x4E00;&#x4E2A;&#x975E;&#x5E38;&#x5C34;&#x5C2C;&#x7684;&#x60C5;&#x666F;&#xFF0C;&#x53EF;&#x80FD;&#x7B49;&#x5F85;&#x6211;&#x7684;&#x53EA;&#x6709;&#x59A5;&#x534F;&#x6216;&#x8005;&#x653E;&#x5F03;&#x3002;</span><br><span class="line">&#x59A5;&#x534F;&#x4E5F;&#x6CA1;&#x4E8B;&#xFF0C;&#x653E;&#x5F03;&#x4E5F;&#x633A;&#x597D;&#x3002;&#x4E5F;&#x8BB8;&#x4E0D;&#x4E45;&#x7684;&#x5C06;&#x6765;&#xFF0C;&#x6211;&#x6700;&#x7EC8;&#x4F1A;&#x8BA4;&#x6E05;&#x81EA;&#x5DF1;&#x53EA;&#x662F;&#x4E00;&#x4E2A;&#x666E;&#x901A;&#x4EBA;&#x7684;&#x4E8B;&#x5B9E;&#xFF0C;&#x4ECE;&#x90A3;&#x70B9;&#x9AD8;&#x4E2D;&#x65F6;&#x5EFA;&#x7ACB;&#x7684;&#x65E0;&#x77E5;&#x7684;&#x9A84;&#x50B2;&#x4E2D;&#x8D70;&#x51FA;&#xFF0C;&#x8E0F;&#x8E0F;&#x5B9E;&#x5B9E;&#x5730;&#x505A;&#x597D;&#x4E00;&#x4E2A;&#x666E;&#x901A;&#x4EBA;&#x3002;&#x6216;&#x8005;&#x5982;&#x679C;&#x53EF;&#x80FD;&#x7684;&#x8BDD;&#xFF0C;&#x79F0;&#x81EA;&#x5DF1;&#x662F;&#x4E00;&#x4E2A;&#x666E;&#x901A;&#x7684;&#x6E05;&#x534E;&#x4EBA;&#x3002;</span><br></pre></td></tr></table></figure>
<p>&#x200B;	No. 107</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#x60F3;&#x8981;&#x660E;&#x4FE1;&#x7247;&#x548C;&#x6587;&#x5316;&#x886B;&#xFF01;</span><br></pre></td></tr></table></figure>
<p>16&#x5929;&#x4E4B;&#x524D; <a href="https://closed.social/ordinary/?page=3&amp;per_page=20&amp;sort_by=time##"> 42</a></p>
<p>No. 106</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#x6709;&#x591A;&#x666E;&#x901A;&#x5462;&#xFF1F;&#x5927;&#x6982;&#x8003;&#x4E0A;&#x534E;&#x6E05;&#x5C31;&#x662F;&#x6211;&#x4EBA;&#x751F;&#x4E2D;&#x7684;&#x9876;&#x5CF0;&#x4E86;&#x5427;&#x3002;</span><br><span class="line">&#x4F46;&#x8FD8;&#x662F;&#x4F1A;&#x7528;&#x529B;&#x505A;&#x597D;&#x81EA;&#x5DF1;&#x3002;</span><br></pre></td></tr></table></figure>
<p>16&#x5929;&#x4E4B;&#x524D; <a href="https://closed.social/ordinary/?page=3&amp;per_page=20&amp;sort_by=time##"> 10</a></p>
<p>No. 105</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#x6211;&#x662F;&#x2026;&#x2026;emm&#xFF0C;&#x592A;&#x8FC7;&#x666E;&#x901A;&#x4E86;&#x6240;&#x4EE5;&#x5F88;&#x96BE;&#x63CF;&#x8FF0;&#xFF0C;&#x5927;&#x6982;&#x662F;&#x4E00;&#x7FA4;&#x95EA;&#x95EA;&#x53D1;&#x5149;&#x7684;&#x4EBA;&#x91CC;&#x9762;&#x4E0D;&#x53D1;&#x5149;&#x7684;&#x4E00;&#x4E2A;&#x3002;</span><br><span class="line">&#x4ED4;&#x7EC6;&#x60F3;&#x60F3;&#xFF0C;&#x5927;&#x5BB6;&#x90FD;&#x5728;&#x53D1;&#x5149;&#x7684;&#x65F6;&#x5019;&#x53EA;&#x6709;&#x6211;&#x4E00;&#x4E2A;&#x4E0D;&#x53D1;&#x5149;&#xFF0C;&#x90A3;&#x6211;&#x5927;&#x6982;&#x4E5F;&#x7B97;&#x4E0D;&#x4E0A;&#x591A;&#x666E;&#x901A;&#x3002;</span><br><span class="line">&#x51FA;&#x8EAB;&#x5728;&#x4E00;&#x7EBF;&#x57CE;&#x5E02;&#xFF0C;&#x4F46;&#x8EAB;&#x4E0A;&#x5B8C;&#x5168;&#x6CA1;&#x6709;&#x4E00;&#x7EBF;&#x57CE;&#x5E02;&#x5973;&#x5B69;&#x5B50;&#x7684;&#x90A3;&#x79CD;&#x5149;&#x8292;&#x3002;&#x4E0D;&#x4F1A;&#x5316;&#x5986;&#x3001;&#x4E0D;&#x4F1A;&#x6253;&#x626E;&#x3001;&#x989C;&#x503C;&#x4E0D;&#x9AD8;&#x3001;&#x8EAB;&#x6750;&#x4E0D;&#x597D;&#xFF0C;&#x4E22;&#x5230;&#x4EBA;&#x5806;&#x91CC;&#x6CA1;&#x6709;&#x4EBA;&#x4F1A;&#x770B;&#x7B2C;&#x4E8C;&#x773C;&#x3002;&#x6CA1;&#x6709;&#x7279;&#x957F;&#xFF0C;&#x6CA1;&#x6709;&#x7231;&#x597D;&#xFF0C;&#x5199;&#x7B80;&#x5386;&#x7684;&#x65F6;&#x5019;&#x7231;&#x597D;&#x4E00;&#x680F;&#x53EA;&#x80FD;&#x5199;&#x8BFB;&#x4E66;&#xFF0C;&#x4F46;&#x662F;&#x8FC7;&#x53BB;&#x4E00;&#x5E74;&#x8BFB;&#x5B8C;&#x7684;&#x4E66;&#xFF08;&#x4E0D;&#x5305;&#x62EC;&#x6559;&#x6750;&#xFF09;&#x52A0;&#x8D77;&#x6765;&#x5927;&#x6982;&#x4E0D;&#x5230;5&#x672C;&#x3002;&#x4F1A;&#x4E00;&#x70B9;&#x94A2;&#x7434;&#xFF0C;&#x4F46;&#x662F;&#x534E;&#x6E05;&#x904D;&#x5730;&#x90FD;&#x662F;&#x94A2;&#x7434;&#x5341;&#x7EA7;&#x7684;&#x5927;&#x4F6C;&#x3002;&#x4F1A;&#x4E00;&#x70B9;&#x7D20;&#x63CF;&#xFF0C;&#x4F46;&#x4E5F;&#x6BD4;&#x4E0D;&#x4E0A;&#x7968;&#x5708;&#x91CC;&#x53D1;&#x56FE;&#x7684;&#x592A;&#x592A;&#x4EEC;&#x3002;</span><br><span class="line">&#x9AD8;&#x8003;&#x8FDB;&#x534E;&#x6E05;&#xFF0C;&#x5F53;&#x7136;&#x4E5F;&#x662F;&#x6CBE;&#x4E86;&#x6237;&#x53E3;&#x672C;&#x7684;&#x5149;&#x3002;&#x5927;&#x4E00;&#x56E0;&#x4E3A;&#x9AD8;&#x8003;&#x5206;&#x6570;&#x4E0D;&#x591F;&#x9AD8;&#xFF0C;&#x8FDB;&#x4E86;&#x6700;&#x8BA8;&#x538C;&#x7684;&#x5B66;&#x79D1;&#xFF0C;&#x8EAB;&#x8FB9;&#x5168;&#x662F;&#x7ADE;&#x8D5B;&#x5927;&#x4F6C;&#x3002;&#x666E;&#x901A;&#x5730;&#x8FDB;&#x4E86;&#x5927;&#x5B66;&#x60F3;&#x52AA;&#x529B;&#xFF0C;&#x666E;&#x901A;&#x5730;&#x7ADE;&#x9009;&#x4E86;&#x73ED;&#x59D4;&#x3002;&#x7ADE;&#x9009;&#x4E0A;&#x4E86;&#xFF0C;&#x56E0;&#x4E3A;&#x53EA;&#x6709;&#x6211;&#x4E00;&#x4E2A;&#x4EBA;&#x53C2;&#x9009;&#x3002;</span><br><span class="line">&#x7136;&#x540E;&#x56E0;&#x4E3A;&#x4E0D;&#x60F3;&#x8BFB;&#x56DB;&#x5E74;&#x6700;&#x8BA8;&#x538C;&#x7684;&#x5B66;&#x79D1;&#xFF0C;&#x5927;&#x4E00;&#x51B2;&#x4E86;&#x4E00;&#x6CE2;gpa&#x6210;&#x529F;&#x8F6C;&#x7CFB;&#x3002;&#x6CA1;&#x8F6C;&#x5230;&#x7B2C;&#x4E00;&#x5FD7;&#x613F;&#xFF0C;&#x4F46;&#x8FD8;&#x662F;&#x8F6C;&#x8D70;&#x4E86;&#x3002;&#x5EA6;&#x8FC7;&#x4E86;&#x7126;&#x8651;&#x7684;&#x5927;&#x4E8C;&#x4E0A;&#x548C;&#x60A0;&#x54C9;&#x7684;&#x5927;&#x4E8C;&#x4E0B;&#xFF0C;&#x5F00;&#x5B66;&#x4E86;&#x53D1;&#x73B0;&#x81EA;&#x5DF1;&#x4E00;&#x65E0;&#x6240;&#x6709;&#x3002;</span><br><span class="line">&#x6CA1;&#x6709;&#x79D1;&#x7814;&#x3002;&#x867D;&#x7136;&#x6709;&#x505A;&#x52A9;&#x7814;&#x4F46;&#x6CA1;&#x4EC0;&#x4E48;&#x542B;&#x91D1;&#x91CF;&#x3002;&#x6CA1;&#x6709;SRT&#xFF0C;&#x6CA1;&#x8FDB;&#x7EC4;&#xFF0C;&#x4E0D;&#x559C;&#x6B22;&#xFF0C;&#x4E0D;&#x662F;&#x90A3;&#x5757;&#x6599;&#x3002;</span><br><span class="line">&#x6CA1;&#x6709;&#x793E;&#x5DE5;&#x3002;&#x6709;&#x505A;&#x8FC7;&#x793E;&#x5DE5;&#x4F46;&#x81EA;&#x5DF1;&#x89C9;&#x5F97;&#x4E0D;&#x559C;&#x6B22;&#x3002;</span><br><span class="line">&#x6CA1;&#x6709;&#x604B;&#x7231;&#x3002;&#x8C08;&#x8FC7;&#x4F46;&#x5F88;&#x5FEB;&#x5206;&#x4E86;&#xFF0C;&#x53D1;&#x89C9;&#x81EA;&#x5DF1;&#x4E0D;&#x9002;&#x5408;&#x8C08;&#x604B;&#x7231;&#x3002;</span><br><span class="line">&#x6CA1;&#x6709;&#x4F53;&#x80B2;&#x3002;&#x5927;&#x5B66;&#x4E09;&#x5E74;&#x957F;&#x8DD1;&#x6CA1;&#x53CA;&#x683C;&#x8FC7;&#xFF0C;&#x867D;&#x7136;&#x4F53;&#x80B2;&#x4E5F;&#x6CA1;&#x6302;&#x8FC7;&#x3002;&#x6CA1;&#x6709;&#x559C;&#x6B22;&#x7684;&#x8FD0;&#x52A8;&#x3002;</span><br><span class="line">&#x6CA1;&#x6709;&#x5B9E;&#x4E60;&#x3002;&#x7B80;&#x5386;&#x88AB;&#x5C0F;&#x4E00;&#x5C4A;&#x7684;&#x5B66;&#x5F1F;&#x5B66;&#x59B9;&#x540A;&#x6253;&#x3002;</span><br><span class="line">&#x5B66;&#x4E60;&#x8FD8;&#x53EF;&#x4EE5;&#xFF0C;&#x4F46;&#x4E0D;&#x4F18;&#x79C0;&#x3002;&#x4FDD;&#x7814;&#x7126;&#x8651;&#x4E2D;&#xFF0C;&#x4E0D;&#x559C;&#x6B22;&#x8BFB;&#x535A;&#xFF0C;&#x4E0D;&#x60F3;&#x76F4;&#x63A5;&#x5DE5;&#x4F5C;&#x3002;</span><br><span class="line">&#x5927;&#x5B66;&#x751F;&#x6D3B;&#x5F88;&#x597D;&#xFF0C;&#x552F;&#x4E00;&#x7684;&#x4E0D;&#x597D;&#x5C31;&#x662F;&#x8FDF;&#x65E9;&#x8981;&#x79BB;&#x5F00;&#x5927;&#x5B66;&#x3002;</span><br><span class="line">&#x54E6;&#xFF0C;&#x8FD8;&#x6709;&#xFF0C;&#x5317;&#x4EAC;&#x7684;&#x6C14;&#x5019;&#x597D;&#x5E72;&#x3002;&#x996D;&#x4E0D;&#x597D;&#x5403;&#x3002;</span><br><span class="line">&#x5230;&#x73B0;&#x5728;&#x6CA1;&#x6709;&#x4EC0;&#x4E48;&#x503C;&#x5F97;&#x81EA;&#x50B2;&#x7684;&#x4E8B;&#x60C5;&#x3002;&#x6700;&#x503C;&#x5F97;&#x9A84;&#x50B2;&#x7684;&#x662F;&#x8003;&#x8FDB;&#x4E86;&#x534E;&#x6E05;&#xFF0C;&#x4F46;&#x4E5F;&#x5C31;&#x662F;&#x4E00;&#x65F6;&#x8FD0;&#x6C14;&#x7206;&#x68DA;&#x800C;&#x5DF2;&#x3002;&#x8FDB;&#x4E86;&#x4EE5;&#x540E;&#x5C31;&#x4E00;&#x76F4;&#x5904;&#x5728;&#x54B8;&#x9C7C;&#x548C;self-pushing&#x7684;&#x4E2D;&#x95F4;&#x6001;&#xFF0C;&#x6BD4;&#x8F83;&#x9760;&#x8FD1;&#x54B8;&#x9C7C;&#x4E00;&#x4E9B;&#x3002;&#x522B;&#x4EBA;&#x770B;&#x8D77;&#x6765;&#x597D;&#x50CF;&#x5F88;&#x5927;&#x4F6C;&#xFF0C;&#x4F46;&#x5B9E;&#x9645;&#x4E0A;&#x6BD4;&#x8C01;&#x90FD;&#x83DC;&#x3002;</span><br><span class="line">&#x6211;&#x60F3;&#xFF0C;&#x5982;&#x679C;&#x666E;&#x901A;&#x7684;&#x5B9A;&#x4E49;&#x662F;&#xFF0C;&#x4F3C;&#x4E4E;&#x4E00;&#x76F4;&#x5728;&#x52AA;&#x529B;&#xFF0C;&#x4F3C;&#x4E4E;&#x6709;&#x6240;&#x8FDB;&#x6B65;&#xFF0C;&#x4F46;&#x8FD8;&#x662F;&#x79BB;&#x81EA;&#x5DF1;&#x7684;&#x671F;&#x671B;&#x9065;&#x4E0D;&#x53EF;&#x53CA;&#xFF0C;&#x90A3;&#x6211;&#x662F;&#x4E2A;&#x5F88;&#x666E;&#x901A;&#x7684;&#x4EBA;&#x3002;&#x65F6;&#x5E38;&#x4F1A;&#x60F3;&#x5982;&#x679C;&#x81EA;&#x5DF1;&#x80FD;&#x518D;&#x62FC;&#x4E00;&#x70B9;&#x4F1A;&#x4E0D;&#x4F1A;&#x6709;&#x4EC0;&#x4E48;&#x4E0D;&#x540C;&#x3002;&#x7ED3;&#x679C;&#x4E0A;&#x770B;&#x4F3C;&#x4E4E;&#x4E0D;&#x4F1A;&#x6709;&#xFF0C;&#x4F46;&#x4E5F;&#x6CA1;&#x6709;&#x7ED3;&#x679C;&#xFF0C;&#x56E0;&#x4E3A;&#x6211;&#x771F;&#x7684;&#x5F88;&#x61D2;&#x3002;&#x61D2;&#x5F97;&#x4E5F;&#x975E;&#x5E38;&#x666E;&#x901A;&#x3002;</span><br><span class="line">&#x6211;&#x60F3;&#xFF0C;&#x4F1A;&#x4E0D;&#x4F1A;&#x662F;&#x5468;&#x56F4;&#x7684;&#x4EBA;&#x592A;&#x8FC7;&#x8000;&#x773C;&#x4E86;&#xFF0C;&#x6240;&#x4EE5;&#x6211;&#x663E;&#x5F97;&#x5F88;&#x666E;&#x901A;&#x3002;&#x4F46;&#x5176;&#x5B9E;&#x4E0D;&#x662F;&#xFF0C;&#x5982;&#x679C;&#x628A;&#x6211;&#x653E;&#x5728;&#x66F4;&#x52A0;&#x666E;&#x901A;&#x7684;&#x73AF;&#x5883;&#x91CC;&#xFF0C;&#x6211;&#x4E5F;&#x4F1A;&#x66F4;&#x52A0;&#x666E;&#x901A;&#xFF0C;&#x6216;&#x8BB8;&#x6BD4;&#x73B0;&#x5728;&#x7684;&#x81EA;&#x5DF1;&#x66F4;&#x4E0D;&#x4EE4;&#x4EBA;&#x6EE1;&#x610F;&#xFF0C;&#x6216;&#x8BB8;&#x5FC3;&#x5FC3;&#x5FF5;&#x5FF5;&#x60F3;&#x7740;&#x66F4;&#x597D;&#x7684;&#x51FA;&#x8DEF;&#x3002;&#x81F3;&#x5C11;&#x534E;&#x6E05;&#x8BA9;&#x6211;&#x63A5;&#x53D7;&#x4E86;&#x81EA;&#x5DF1;&#x7684;&#x666E;&#x901A;&#xFF0C;&#x8BA9;&#x6211;&#x77E5;&#x9053;&#x201C;&#x4EBA;&#x7C7B;&#x662F;&#x6709;&#x6781;&#x9650;&#x7684;&#x201D;&#xFF0C;&#x518D;&#x600E;&#x4E48;&#x52AA;&#x529B;&#x8FD8;&#x662F;&#x6709;&#x65E0;&#x6CD5;&#x6539;&#x53D8;&#x7684;&#x4E8B;&#x60C5;&#x3002;</span><br><span class="line">&#x867D;&#x7136;&#x6211;&#x4E5F;&#x4E0D;&#x52AA;&#x529B;&#x5C31;&#x662F;&#x4E86;orz</span><br><span class="line">&#x8EBA;&#x5E73;&#x4E4B;&#x540E;&#xFF0C;&#x8FD9;&#x4E00;&#x5207;&#x4E5F;&#x6CA1;&#x90A3;&#x4E48;&#x7CDF;&#x7CD5;&#x3002;</span><br><span class="line">&#x5373;&#x4F7F;&#x672A;&#x6765;&#x6DF7;&#x5F97;&#x518D;&#x5DEE;&#xFF0C;&#x81F3;&#x5C11;&#x6211;&#x6BD5;&#x4E1A;&#x4E8E;top2&#xFF0C;&#x5C06;&#x6765;&#x5728;&#x9152;&#x684C;&#x4E0A;&#x8FD8;&#x53EF;&#x4EE5;&#x5439;&#x4E00;&#x6CE2;&#x3002;&#x867D;&#x7136;&#x6211;&#x4E0D;&#x559C;&#x6B22;&#x5B83;&#xFF0C;&#x867D;&#x7136;&#x6211;&#x5728;&#x91CC;&#x9762;&#x5C31;&#x662F;&#x9E21;&#x7ACB;&#x9E64;&#x7FA4;&#xFF0C;&#x4F46;&#x6211;&#x53CD;&#x6B63;&#x5C31;&#x662F;&#x4E00;&#x53EA;&#x83DC;&#x9E21;&#xFF0C;&#x90FD;&#x6DF7;&#x5230;&#x8FD9;&#x5730;&#x6B65;&#x4E86;&#x8FD8;&#x80FD;&#x5962;&#x6C42;&#x4EC0;&#x4E48;&#x5462;&#x3002;</span><br><span class="line">&#x7136;&#x540E;&#xFF0C;&#x6211;&#x53D1;&#x73B0;&#x6211;&#x6709;&#x4E86;&#x5F88;&#x4E0D;&#x666E;&#x901A;&#x7684;&#x5730;&#x65B9;&#xFF1A;&#x6211;&#x4E00;&#x5929;&#x53EF;&#x4EE5;&#x7761;9-10&#x4E2A;&#x5C0F;&#x65F6;&#x3002;&#x5982;&#x679C;&#x4E0D;&#x662F;&#x65E9;&#x8BFE;&#x548C;&#x665A;&#x8BFE;&#x548C;&#x5348;&#x8BFE;&#xFF0C;&#x8BF4;&#x4E0D;&#x5B9A;&#x80FD;&#x7761;&#x5230;12&#x5C0F;&#x65F6;&#x3002;</span><br><span class="line">&#x5728;&#x4EBA;&#x5747;&#x7206;&#x809D;&#x904D;&#x5730;&#x5237;&#x591C;&#x7684;&#x534E;&#x6E05;&#xFF0C;&#x6211;&#x8BA4;&#x4E3A;&#x7761;&#x8FD9;&#x4E48;&#x4E45;&#x662F;&#x4E00;&#x4EF6;&#x6211;&#x505A;&#x5230;&#x7684;&#x552F;&#x4E00;&#x4E0D;&#x666E;&#x901A;&#x7684;&#x4E8B;&#x60C5;&#x3002;</span><br><span class="line">&#x6240;&#x4EE5;&#x6211;&#x5927;&#x6982;&#x662F;&#x4E0D;&#x914D;&#x62FF;&#x7279;&#x666E;&#x901A;&#x5956;&#x7684;&#x3002;&#x54EA;&#x5929;&#x8BC4;&#x59D4;&#x7EC4;&#x60F3;&#x4E0D;&#x5F00;&#x4E86;&#x529E;&#x4E00;&#x4E2A;&#x7279;&#x80FD;&#x7761;&#x5956;&#xFF0C;&#x6211;&#x4E00;&#x5B9A;&#x79EF;&#x6781;&#x53C2;&#x4E0E;&#x3002;</span><br></pre></td></tr></table></figure>
<p>17&#x5929;&#x4E4B;&#x524D; <a href="https://closed.social/ordinary/?page=3&amp;per_page=20&amp;sort_by=time##"> 50</a></p>
<p>No. 104</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#x5F88;&#x666E;&#x901A;&#x7684;&#x81EA;&#x52A8;&#x5316;&#x4EBA;&#xFF0C;&#x9AD8;&#x8003;&#x5F55;&#x53D6;&#x5206;&#x6570;&#x662F;&#x672C;&#x7CFB;&#x6700;&#x4F4E;&#x5206;&#xFF0C;&#x6765;&#x4E86;&#x4E4B;&#x540E;&#x88AB;&#x538B;&#x7684;&#x82DF;&#x5EF6;&#x6B8B;&#x5598;&#xFF0C;&#x4E5F;&#x4E0D;&#x77E5;&#x9053;&#x4E3A;&#x4EC0;&#x4E48;&#x51CC;&#x6668;&#x653E;&#x7740;&#x5FAE;&#x79EF;&#x5206;&#x548C;&#x7A0B;&#x8BBE;&#x4F5C;&#x4E1A;&#x6765;&#x586B;&#x8FD9;&#x4E2A;&#xFF0C;&#x6216;&#x8BB8;&#x592A;&#x666E;&#x901A;&#x4E86;&#x5427;&#x3002;&#x3002;&#x3002;</span><br></pre></td></tr></table></figure>
<p>17&#x5929;&#x4E4B;&#x524D; <a href="https://closed.social/ordinary/?page=3&amp;per_page=20&amp;sort_by=time##"> 15</a></p>
<p>No. 103</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#x5982;&#x679C;&#x7279;&#x666E;&#x901A;&#x5956;&#x90FD;&#x9700;&#x8981;&#x7EC4;&#x7EC7;&#x8BED;&#x8A00;&#x9760;&#x53CD;&#x5411;&#x5377;&#x83DC;&#x6765;&#x5C55;&#x793A;&#x81EA;&#x5DF1;&#x7684;&#x8BDD;&#xFF0C;&#x90A3;&#x8FD9;&#x7279;&#x666E;&#x901A;&#x5956;&#x6211;&#x4E0D;&#x8981;&#x4E5F;&#x7F62;&#x3002;</span><br><span class="line">&#x3002;&#x3002;&#x6211;&#x666E;&#x901A;&#x5230;&#x8865;&#x5145;&#x6750;&#x6599;&#x90FD;&#x4E0D;&#x77E5;&#x9053;&#x548B;&#x586B;TT</span><br></pre></td></tr></table></figure>
<p>17&#x5929;&#x4E4B;&#x524D; <a href="https://closed.social/ordinary/?page=3&amp;per_page=20&amp;sort_by=time##"> 32</a></p>
<p>No. 102</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#x5341;&#x4E00;&#x70B9;&#x534A;&#x8FD8;&#x4E0D;&#x7761;&#x89C9;&#x5C31;&#x603B;&#x4F1A;&#x997F;&#x8BF6;&#x3002;</span><br><span class="line">&#x662F;&#x771F;&#x7684;&#x997F;&#x3002;</span><br><span class="line">&#x8FD8;&#x6CA1;&#x5403;&#x7684;&#x3002;</span><br><span class="line">&#x5408;&#x4E0A;&#x773C;&#x5C31;&#x53EA;&#x6709;&#x997F;&#x4E86;&#x3002;</span><br></pre></td></tr></table></figure>
<p>17&#x5929;&#x4E4B;&#x524D; <a href="https://closed.social/ordinary/?page=3&amp;per_page=20&amp;sort_by=time##"> 18</a></p>
<p>No. 101</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#x6CA1;&#x6709;&#x7EE9;&#x70B9;&#xFF0C;&#x6CA1;&#x6709;&#x79D1;&#x7814;&#xFF0C;&#x6CA1;&#x6709;&#x989C;&#x503C;&#xFF0C;&#x6CA1;&#x6709;npy&#xFF0C;&#x53E3;&#x9F7F;&#x4E0D;&#x6E05;+&#x91CD;&#x5EA6;&#x793E;&#x6050;&#xFF0C;&#x5FAE;&#x4FE1;&#x597D;&#x53CB;&#x57FA;&#x672C;&#x90FD;&#x662F;&#x73ED;&#x7EA7;&#x540C;&#x5B66;&#xFF0C;&#x5728;&#x8457;&#x540D;&#x4F53;&#x6821;&#x534E;&#x6E05;&#x5927;&#x5B66;&#x91CC;&#x66FE;&#x559C;&#x63D0;&#x4F53;&#x80B2;&#x6302;&#x79D1;&#xFF0C;&#x8FC7;&#x4E8E;&#x666E;&#x901A;&#x4EE5;&#x81F3;&#x4E8E;&#x4E0D;&#x77E5;&#x9053;&#x8FD8;&#x80FD;&#x5728;&#x8FD9;&#x5199;&#x4E9B;&#x4EC0;&#x4E48;&#xFF0C;&#x53EF;&#x80FD;&#x552F;&#x4E00;&#x6709;&#x7684;&#xFF0C;&#x5927;&#x6982;&#x5C31;&#x662F;&#x5C1A;&#x672A;&#x78E8;&#x706D;&#x7684;&#x5BF9;&#x751F;&#x6D3B;&#x7684;&#x70ED;&#x7231;&#x5427;</span><br></pre></td></tr></table></figure>
<p>17&#x5929;&#x4E4B;&#x524D; <a href="https://closed.social/ordinary/?page=3&amp;per_page=20&amp;sort_by=time##"> 39</a></p>
<p>No. 100</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#x7279;&#x666E;&#x901A;&#x7684;&#x540C;&#x5B66;&#x96BE;&#x9053;&#x4E0D;&#x662F;&#x666E;&#x901A;&#x4E2D;&#x6700;&#x4E0D;&#x666E;&#x901A;&#x7684;&#x4E48;&#xFF1F;&#x4E0D;&#x77E5;&#x9053;&#x3002;&#x6211;&#x53EA;&#x662F;&#x5373;&#x5C06;&#x53C8;&#x4E00;&#x6B21;&#x4EE5;&#x843D;&#x9009;&#x7684;&#x65B9;&#x5F0F;&#x5C55;&#x73B0;&#x81EA;&#x5DF1;&#x7684;&#x666E;&#x901A;&#x7F62;&#x4E86;&#x3002;</span><br></pre></td></tr></table></figure>
<p>17&#x5929;&#x4E4B;&#x524D; <a href="https://closed.social/ordinary/?page=3&amp;per_page=20&amp;sort_by=time##"> 17</a></p>
<p>No. 99</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#x5927;&#x7EA6;&#xFF0C;&#x5982;&#x6211;&#x4E00;&#x6837;&#x666E;&#x901A;&#x7684;&#x540C;&#x5B66;&#x4E5F;&#x53D1;&#x8868;&#x4E0D;&#x51FA;&#x50CF;&#x697C;&#x4E0A;&#x7684;&#x4EBA;&#x8D62;&#x4EEC;&#x90A3;&#x6837;&#x7CBE;&#x5F69;&#x7EDD;&#x4F26;&#x7684;&#x957F;&#x7BC7;&#x5927;&#x8BBA;&#x5427;&#x3002;</span><br></pre></td></tr></table></figure>
<p>17&#x5929;&#x4E4B;&#x524D; <a href="https://closed.social/ordinary/?page=3&amp;per_page=20&amp;sort_by=time##"> 20</a></p>
<p>No. 98</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#x6211;&#x624D;&#x4E0D;&#x53C2;&#x52A0;&#x7279;&#x666E;&#x901A;&#x5956;&#x5462;&#xFF0C;&#x6211;&#x89C9;&#x5F97;&#x81EA;&#x5DF1;&#x4E0D;&#x666E;&#x901A;&#x554A;&#xFF0C;&#x54EA;&#x6015;&#x5012;&#x6570;&#xFF0C;&#x6211;&#x4E5F;&#x662F;&#x72EC;&#x4E00;&#x65E0;&#x4E8C;&#x7684;&#x3002;&#x5927;&#x5BB6;&#x90FD;&#x662F;&#x72EC;&#x7279;&#x7684;&#x5B58;&#x5728;&#x5566;&#xFF01;</span><br></pre></td></tr></table></figure>
<p>17&#x5929;&#x4E4B;&#x524D; <a href="https://closed.social/ordinary/?page=3&amp;per_page=20&amp;sort_by=time##"> 28</a></p>
<p>No. 97</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#x5728;&#x6BCF;&#x95E8;&#x8BFE;&#x4E0A;&#x8BD5;&#x56FE;&#x8BA4;&#x771F;&#x542C;&#x8BB2;&#xFF0C;&#x7136;&#x540E;&#x88AB;&#x56F0;&#x5026;&#x51FB;&#x5012;&#xFF0C;&#x52AA;&#x529B;&#x9192;&#x6765;&#x5374;&#x8DDF;&#x4E0D;&#x4E0A;&#x8FDB;&#x5EA6;&#xFF0C;&#x8BFE;&#x4E0B;&#x5C0F;&#x5FC3;&#x7FFC;&#x7FFC;&#x5730;&#x627E;&#x540C;&#x5B66;&#x95EE;&#xFF0C;&#x53C8;&#x6015;&#x803D;&#x8BEF;&#x5BF9;&#x65B9;&#x65F6;&#x95F4;&#xFF0C;&#x6700;&#x540E;&#x62FF;&#x9A6C;&#x9A6C;&#x864E;&#x864E;&#x7684;&#x6210;&#x7EE9;&#x3002;&#x8FDB;&#x5BA3;&#x4F20;&#x90E8;&#xFF0C;&#x8D1F;&#x8D23;&#x6392;&#x7248;&#xFF1B;&#x53C2;&#x4E0E;&#x52A9;&#x7814;&#xFF0C;&#x505A;&#x7740;&#x627E;&#x6570;&#x636E;&#x7684;&#x67AF;&#x71E5;&#x5DE5;&#x4F5C;&#xFF1B;&#x53C2;&#x52A0;&#x6BD4;&#x8D5B;&#xFF0C;&#x52AA;&#x529B;&#x4E89;&#x53D6;&#x66FF;&#x8865;&#x4F4D;&#x7F6E;&#x3002;&#x5F88;&#x5FD9;&#x788C;&#xFF0C;&#x4E5F;&#x5F88;&#x8FF7;&#x832B;</span><br></pre></td></tr></table></figure>
<p>17&#x5929;&#x4E4B;&#x524D; <a href="https://closed.social/ordinary/?page=3&amp;per_page=20&amp;sort_by=time##"> 11</a></p>
<p>No. 96</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#x770B;&#x5230;&#x8FD9;&#x4E2A;&#x6709;&#x8DA3;&#x7684;&#x7279;&#x522B;&#x7684;&#x53EF;&#x7231;&#x7684;&#x7279;&#x666E;&#x901A;&#x5956;&#x5B66;&#x91D1;&#xFF0C;&#x4E0D;&#x77E5;&#x9053;&#x4E3A;&#x4EC0;&#x4E48;&#x7A81;&#x7136;&#x89C9;&#x5F97;&#x597D;&#x611F;&#x52A8;&#xFF0C;&#x7EC8;&#x4E8E;&#x6709;&#x4E00;&#x7247;&#x5929;&#x5730;&#x4E0D;&#x9700;&#x8981;&#x7528;&#x6210;&#x7EE9;&#x548C;&#x6210;&#x679C;&#x4E3A;&#x81EA;&#x5DF1;&#x8BC1;&#x660E;&#xFF0C;&#x6709;&#x4E00;&#x7FA4;&#x4EBA;&#x613F;&#x610F;&#x770B;&#x5230;&#x548C;&#x8046;&#x542C;&#x4E00;&#x4E9B;&#x6216;&#x8BB8;&#x8868;&#x9762;&#x4E0A;&#x666E;&#x666E;&#x901A;&#x901A;&#xFF0C;&#x7B80;&#x7B80;&#x5355;&#x5355;&#x7684;&#x4EBA;&#x3002;&#x8FD9;&#x91CC;&#x5C31;&#x50CF;&#x4E00;&#x4E2A;&#x7559;&#x8A00;&#x533A;&#xFF0C;&#x53EF;&#x4EE5;&#x5766;&#x7136;&#x7684;&#x5206;&#x4EAB;&#x81EA;&#x5DF1;&#x3002;&#x9605;&#x8BFB;&#x4E86;&#x4E00;&#x4E9B;&#x5927;&#x5BB6;&#x7684;&#x7559;&#x8A00;&#xFF0C;&#x53D1;&#x73B0;&#x5176;&#x5B9E;&#x6BCF;&#x4E2A;&#x613F;&#x610F;&#x5728;&#x8FD9;&#x91CC;&#x8BB2;&#x8FF0;&#x81EA;&#x5DF1;&#x6545;&#x4E8B;&#x7684;&#x4EBA;&#x90FD;&#x662F;&#x6709;&#x8DA3;&#x7684;&#x7075;&#x9B42;&#xFF0C;&#x6216;&#x8BB8;&#x7B49;&#x5F85;&#x88AB;&#x53D1;&#x73B0;&#xFF0C;&#x6216;&#x8BB8;&#x7EE7;&#x7EED;&#x505A;&#x5E73;&#x51E1;&#x7684;&#x81EA;&#x5DF1;&#x4E5F;&#x633A;&#x597D;&#x3002;</span><br><span class="line">&#x4ECE;&#x4E0A;&#x9AD8;&#x4E2D;&#x5F00;&#x59CB;&#x5C31;&#x662F;&#x73ED;&#x91CC;&#x7684;&#x666E;&#x901A;&#x4EBA;&#xFF0C;&#x6210;&#x4E3A;&#x9AD8;&#x8003;&#x4E2D;&#x7684;&#x5E78;&#x8FD0;&#x513F;&#x6765;&#x5230;&#x8FD9;&#x91CC;&#xFF0C;&#x56E0;&#x6B64;&#x662F;&#x518D;&#x666E;&#x901A;&#x4E0D;&#x8FC7;&#x7684;&#x666E;&#x901A;&#x4EBA;&#x4E86;&#x3002;&#x66FE;&#x7ECF;&#x4E5F;&#x6709;&#x4E0D;&#x7518;&#xFF0C;&#x4E0D;&#x7518;&#x5E73;&#x5EB8;&#xFF0C;&#x4E0D;&#x7518;&#x5BC2;&#x5BDE;&#xFF0C;&#x80E1;&#x4E71;&#x7684;&#x63A2;&#x7D22;&#xFF0C;&#x83BD;&#x649E;&#x7684;&#x5954;&#x8D70;&#xFF0C;&#x649E;&#x8FC7;&#x5357;&#x5899;&#xFF0C;&#x8FF7;&#x5931;&#x65B9;&#x5411;&#x3002;</span><br><span class="line">&#x73B0;&#x5728;&#x662F;&#x5728;&#x534E;&#x6E05;&#x7684;&#x7B2C;&#x4E8C;&#x5E74;&#xFF0C;&#x4E00;&#x5E74;&#x7684;&#x7ECF;&#x5386;&#x6539;&#x53D8;&#x4E86;&#x6211;&#x5F88;&#x591A;&#xFF0C;&#x6709;&#x4E86;&#x66F4;&#x5E73;&#x5E38;&#x7684;&#x5FC3;&#x6001;&#xFF0C;&#x66F4;&#x5766;&#x7136;&#x7684;&#x751F;&#x6D3B;&#x3002;&#x6211;&#x66FE;&#x7ECF;&#x95EE;&#x81EA;&#x5DF1;&#x8FD9;&#x662F;&#x4E0D;&#x662F;&#x7834;&#x7F50;&#x5B50;&#x7834;&#x6454;&#xFF0C;&#x6211;&#x60F3;&#xFF0C;&#x4E0D;&#x662F;&#xFF0C;&#x6211;&#x4F9D;&#x7136;&#x5728;&#x8FFD;&#x9010;&#x6211;&#x7684;&#x68A6;&#x60F3;&#xFF0C;&#x4F9D;&#x7136;&#x6709;&#x6211;&#x4EBA;&#x751F;&#x7684;&#x6E34;&#x671B;&#xFF0C;&#x4F9D;&#x7136;&#x5728;&#x8DCC;&#x5012;&#x548C;&#x722C;&#x8D77;&#x4E2D;&#x5BFB;&#x627E;&#x5C5E;&#x4E8E;&#x81EA;&#x5DF1;&#x4EBA;&#x751F;&#x7684;&#x610F;&#x4E49;&#x3002;&#x53EA;&#x662F;&#x5FC3;&#x6001;&#x4E0D;&#x4E00;&#x6837;&#x4E86;&#xFF0C;&#x5BF9;&#x81EA;&#x5DF1;&#x7684;&#x8BC4;&#x4EF7;&#x65B9;&#x5F0F;&#x4E0D;&#x4E00;&#x6837;&#x4E86;&#x3002;&#x6211;&#x66F4;&#x5728;&#x4E4E;&#x7684;&#x662F;&#x81EA;&#x5DF1;&#x62E5;&#x6709;&#x4E86;&#x4EC0;&#x4E48;&#xFF0C;&#x5B66;&#x5230;&#x4E86;&#x4EC0;&#x4E48;&#xFF0C;&#x6539;&#x53D8;&#x4E86;&#x4EC0;&#x4E48;&#xFF0C;&#x800C;&#x4E0D;&#x53EA;&#x662F;&#x65A4;&#x65A4;&#x8BA1;&#x8F83;&#x81EA;&#x5DF1;&#x5931;&#x53BB;&#x4E86;&#x4EC0;&#x4E48;&#x3002;</span><br><span class="line">&#x73B0;&#x5728;&#x7684;&#x6211;&#x4ECD;&#x7136;&#x662F;&#x534E;&#x6E05;&#x91CC;&#x666E;&#x901A;&#x5F97;&#x4E0D;&#x80FD;&#x518D;&#x666E;&#x901A;&#x7684;&#x5927;&#x591A;&#x6570;&#xFF0C;&#x4F46;&#x6211;&#x4F9D;&#x7136;&#x73CD;&#x60DC;&#x7740;&#x6BCF;&#x4E00;&#x523B;&#x8BA4;&#x8BA4;&#x771F;&#x771F;&#x5EA6;&#x8FC7;&#x7684;&#x5F53;&#x4E0B;&#xFF0C;&#x671F;&#x5F85;&#x7740;&#x6BCF;&#x4E00;&#x4E2A;&#x95EA;&#x95EA;&#x53D1;&#x5149;&#x7684;&#x660E;&#x5929;&#x3002;</span><br><span class="line">&#x8C22;&#x8C22;&#x8FD9;&#x4E2A;&#x53EF;&#x7231;&#x7684;&#x5E73;&#x53F0;&#x3002;</span><br><span class="line">&#x795D;&#x597D;&#x3002;</span><br></pre></td></tr></table></figure>
<p>17&#x5929;&#x4E4B;&#x524D; <a href="https://closed.social/ordinary/?page=3&amp;per_page=20&amp;sort_by=time##"> 21</a></p>
<p>No. 95</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#x5728;&#x6211;&#x770B;&#x6765;&#x666E;&#x901A;&#x662F;&#x4E00;&#x79CD;&#x751F;&#x6D3B;&#x6001;&#x5EA6;&#xFF0C;&#x662F;&#x548C;&#x5377;&#x5BF9;&#x5E94;&#x7684;&#x4E0E;&#x4E16;&#x65E0;&#x4E89;&#xFF0C;&#x800C;&#x4E0D;&#x662F;&#x4EFB;&#x4F55;&#x91CF;&#x5316;&#x7684;&#x6307;&#x6807;&#x3002;&#x6309;&#x6210;&#x7EE9;&#x4E2D;&#x4F4D;&#x6570;&#x5224;&#x65AD;&#x4E3A;&#x666E;&#x901A;&#x90A3;&#x548C;&#x6309;&#x6210;&#x7EE9;&#x6392;&#x7684;&#x7279;&#x5956;&#x4E5F;&#x6CA1;&#x6709;&#x4EC0;&#x4E48;&#x533A;&#x522B;&#x561B;&#x3002;No.86&#x8BF4;&#x7684;&#x6211;&#x5F88;&#x8BA4;&#x540C;&#xFF0C;&#x4E3A;&#x4EC0;&#x4E48;&#x8981;&#x7ED9;&#x666E;&#x901A;&#x4E00;&#x4E2A;&#x8303;&#x5F0F;&#xFF0C;&#x6BD5;&#x7ADF;&#x6C38;&#x8FDC;&#x6709;&#x6BD4;&#x81EA;&#x5DF1;&#x66F4;&#x4F18;&#x79C0;&#x7684;&#x4EBA;&#x3002;&#x751F;&#x6D3B;&#x7684;&#x672C;&#x8D28;&#x4E0D;&#x5728;&#x4E8E;&#x6709;&#x591A;&#x5C11;&#x5149;&#x73AF;&#x52A0;&#x8EAB;&#xFF0C;&#x53EF;&#x80FD;&#x5728;&#x81EA;&#x5DF1;&#x90FD;&#x53D1;&#x73B0;&#x4E0D;&#x4E86;&#x7684;&#x89D2;&#x843D;&#x91CC;&#x771F;&#x5B9E;&#x7684;&#x5C18;&#x571F;&#x91CC;&#x7684;&#x81EA;&#x5DF1;&#x3002;&#x6765;&#x8FD9;&#x91CC;&#x662F;&#x60F3;&#x5F97;&#x5230;&#x4E00;&#x70B9;&#x6E29;&#x6696;&#x548C;&#x652F;&#x6301;&#x5427;&#x3002;&#x5E0C;&#x671B;&#x66F4;&#x591A;&#x4EBA;&#x4E0D;&#x518D;&#x53BB;&#x5173;&#x6CE8;&#x62FF;&#x4E86;&#x591A;&#x5C11;&#x5956;&#x53D1;&#x4E86;&#x591A;&#x5C11;&#x6587;&#x7AE0;&#xFF0C;&#x53BB;&#x770B;&#x5230;&#x5E73;&#x65F6;&#x770B;&#x4E0D;&#x5230;&#x7684;&#x5730;&#x65B9;&#x7684;&#x5FAE;&#x5F31;&#x7684;&#x5149;&#xFF0C;&#x6BD5;&#x7ADF;&#xFF0C;&#x8FD9;&#x624D;&#x662F;&#x66F4;&#x9700;&#x8981;&#x8BA4;&#x540C;&#x548C;&#x7406;&#x89E3;&#x7684;&#x5730;&#x65B9;&#x3002;</span><br><span class="line"></span><br><span class="line">&#x8BF4;&#x8BF4;&#x6211;&#x81EA;&#x5DF1;&#xFF0C;&#x6BCF;&#x6B21;&#x89C9;&#x5F97;&#x81EA;&#x5DF1;&#x4E0D;&#x666E;&#x901A;&#x7684;&#x65F6;&#x5019;&#x90FD;&#x88AB;&#x73B0;&#x5B9E;&#x4E0A;&#x4E86;&#x4E00;&#x8BFE;&#x3002;&#x6211;&#x66FE;&#x7ECF;&#x89C9;&#x5F97;&#x6211;&#x6700;&#x4E0D;&#x666E;&#x901A;&#x7684;&#x4E00;&#x70B9;&#x5C31;&#x662F;&#x957F;&#x5F97;&#x5F88;&#x597D;&#x770B;&#x3002;&#x76F4;&#x5230;&#x9AD8;&#x4E2D;&#x6BD5;&#x4E1A;&#x540E;&#x6211;&#x8FFD;&#x7684;&#x4EBA;&#x8DDF;&#x6211;&#x8BF4;&#x201C;&#x6211;&#x89C9;&#x5F97;&#x4F60;&#x54EA;&#x91CC;&#x90FD;&#x597D;&#xFF0C;&#x5C31;&#x662F;&#x4E11;&#x7684;&#x6211;&#x63A5;&#x53D7;&#x4E0D;&#x4E86;&#x201D;&#x3002;&#x4E8E;&#x662F;&#x6211;&#x5C31;&#x5728;&#x7F8E;&#x548C;&#x4E11;&#x4E4B;&#x95F4;&#x6298;&#x4E86;&#x4E2A;&#x4E2D;&#xFF0C;&#x63A5;&#x53D7;&#x4E86;&#x6211;&#x957F;&#x5F97;&#x5F88;&#x666E;&#x901A;&#x3002;&#x5F97;&#x4E86;&#xFF0C;&#x5C31;&#x7B97;&#x62FF;&#x4E0D;&#x5230;&#x7279;&#x666E;&#x901A;&#x5956;&#xFF0C;&#x62FF;&#x4E2A;&#x957F;&#x5F97;&#x7279;&#x522B;&#x666E;&#x901A;&#x5956;&#x4E5F;&#x662F;&#x4E0D;&#x9519;&#x7684;&#x3002;</span><br><span class="line"></span><br><span class="line">&#x5176;&#x5B9E;&#x6211;&#x8FD8;&#x6709;&#x4E0D;&#x666E;&#x901A;&#x7684;&#x4E00;&#x70B9;&#x6CA1;&#x8DDF;&#x4EBA;&#x8BF4;&#x8FC7;&#xFF0C;&#x5C31;&#x662F;&#x53EF;&#x4EE5;&#x68A6;&#x91CC;&#x4E0A;&#x8BFE;&#x3002;&#x597D;&#x591A;&#x6B21;&#x65E9;&#x4E0A;&#x6EE1;&#x8BFE;&#xFF0C;&#x505A;&#x68A6;&#x89C9;&#x5F97;&#x81EA;&#x5DF1;&#x98CE;&#x98CE;&#x706B;&#x706B;&#x8D76;&#x5230;&#x6559;&#x5BA4;&#x4E0A;&#x8FC7;&#x8BFE;&#x4E86;&#x8FD8;&#x56DE;&#x7B54;&#x4E86;&#x8001;&#x5E08;&#x7684;&#x95EE;&#x9898;&#x5F00;&#x5F00;&#x5FC3;&#x5FC3;&#x7761;&#x5230;&#x4E2D;&#x5348;&#x3002;&#x540E;&#x6765;&#x53D1;&#x73B0;&#x6211;&#x68A6;&#x91CC;&#x6EE1;&#x5206;&#x7684;&#x8BFE;&#x73B0;&#x5B9E;&#x5DEE;&#x70B9;&#x6302;&#x4E86;&#x624D;&#x63A5;&#x53D7;&#x4E86;&#x81EA;&#x5DF1;&#x8FD9;&#x4E2A;&#x80FD;&#x529B;&#x597D;&#x50CF;&#x6CA1;&#x4EC0;&#x4E48;&#x7528;&#x3002;</span><br><span class="line"></span><br><span class="line">&#x5B66;&#x4E60;&#x4E0A;&#x4E0D;&#x8C08;&#x6210;&#x7EE9;&#xFF0C;&#x8C08;&#x8C08;&#x81EA;&#x5DF1;&#x4E0D;&#x77E5;&#x9053;&#x7B97;&#x4E0D;&#x7B97;&#x666E;&#x901A;&#x7684;&#x5C0F;&#x5C0F;&#x7684;&#x575A;&#x6301;&#x5427;&#xFF0C;&#x6211;&#x4E00;&#x76F4;&#x4E3A;&#x6211;&#x6BCF;&#x6B21;&#x4EA4;&#x4F5C;&#x4E1A;&#x4E4B;&#x524D;&#x54EA;&#x6015;&#x6709;&#x4E0D;&#x4F1A;&#x7684;&#x6211;&#x4E5F;&#x4ECE;&#x4E0D;&#x5BF9;&#x7B54;&#x6848;&#x8FD9;&#x4E00;&#x5C0F;&#x5C0F;&#x7684;&#x8FC2;&#x8150;&#x800C;&#x9A84;&#x50B2;&#x3002;&#x6211;&#x4E0D;&#x559C;&#x6B22;&#x7684;&#x8BFE;&#x51E0;&#x4E4E;&#x4E0D;&#x53BB;&#xFF0C;&#x5C31;&#x62FF;&#x4E00;&#x4E2A;&#x666E;&#x901A;&#x7684;&#x6210;&#x7EE9;&#x5C31;&#x591F;&#x4E86;&#xFF0C;&#x6709;&#x95E8;&#x8BFE;&#x51FA;&#x52E4;&#x5360;&#x5341;&#x5206;&#x53EA;&#x62FF;&#x4E86;&#x4E94;&#x5206;&#x3002;&#x81F3;&#x4E8E;&#x559C;&#x6B22;&#x7684;&#x8BFE;&#x4E0A;&#x53EF;&#x80FD;&#x5F88;&#x5377;&#x5427;&#x4F46;&#x662F;&#x81F3;&#x5C11;&#x81EA;&#x5DF1;&#x662F;&#x5FEB;&#x4E50;&#x7684;&#x3002;</span><br><span class="line"></span><br><span class="line">&#x7ECF;&#x5E38;&#x5728;23:55&#x4E4B;&#x540E;&#x4EA4;&#x4F5C;&#x4E1A;&#x3002;&#x7184;&#x706F;&#x7684;&#x65F6;&#x5019;&#x8FD8;&#x56E0;&#x4E3A;&#x81EA;&#x5DF1;&#x7684;&#x7535;&#x8111;&#x7EED;&#x822A;&#x4E0D;&#x591F;&#xFF0C;&#x4E3A;&#x4E86;&#x4EA4;&#x4F5C;&#x4E1A;&#x8DDF;&#x697C;&#x9053;&#x6D17;&#x8863;&#x673A;&#x8E6D;&#x7535;&#x8FC7;&#x3002;&#x6BCF;&#x6B21;&#x8FD9;&#x6837;&#x8D76;&#x4E0A;DDL&#x90FD;&#x5F88;&#x5F00;&#x5FC3;&#x7684;&#x8DDF;&#x670B;&#x53CB;&#x5439;&#x4E00;&#x5929;&#x3002;&#x542C;&#x8D77;&#x6765;&#x597D;&#x50CF;&#x633A;&#x65E0;&#x804A;&#x7684;&#x4F46;&#x5230;&#x540E;&#x6765;&#x4F3C;&#x4E4E;&#x6210;&#x4E86;&#x6211;&#x7684;&#x5FEB;&#x4E50;&#x6E90;&#x6CC9;&#x3002;&#x8FD9;&#x6837;&#x7684;&#x540E;&#x679C;&#x5F53;&#x7136;&#x662F;&#x9519;&#x8FC7;&#x4E0D;&#x5C11;&#xFF0C;&#x9519;&#x8FC7;&#x4E86;&#x6211;&#x4E5F;&#x6CA1;&#x90A3;&#x4E2A;&#x5FC3;&#x6C14;&#x53BB;&#x6C42;&#x52A9;&#x6559;&#x653E;&#x8FC7;&#xFF0C;&#x6263;&#x5206;&#x5C31;&#x6263;&#x5427;&#x3002;&#x7531;&#x4E8E;&#x9519;&#x8FC7;&#x7684;&#x592A;&#x591A;&#x4EE5;&#x81F3;&#x4E8E;&#x540E;&#x6765;&#x540C;&#x5B66;&#x7ED9;&#x6211;&#x7684;&#x795D;&#x798F;&#x91CC;&#x90FD;&#x6709;&#x51E0;&#x4E2A;&#x201C;&#x5E0C;&#x671B;&#x4F60;&#x522B;&#x518D;&#x9519;&#x8FC7;ddl&#x5566;&#x201D;</span><br><span class="line"></span><br><span class="line">&#x6709;&#x4E9B;&#x5730;&#x65B9;&#x4E5F;&#x633A;&#x83DC;&#x7684;&#xFF0C;&#x83DC;&#x4E5F;&#x80FD;&#x83DC;&#x51FA;&#x4E50;&#x5475;&#xFF0C;&#x4ECE;&#x8DDF;&#x4EBA;&#x6253;&#x7403;&#x4ECE;&#x88AB;&#x96F6;&#x5C01;&#x5230;&#x80FD;&#x8D62;&#x4E00;&#x4E24;&#x4E2A;&#xFF0C;&#x4E5F;&#x7B97;&#x662F;&#x83DC;&#x9E21;&#x7684;&#x6210;&#x529F;&#x4E86;&#x3002;&#x63A5;&#x53D7;&#x81EA;&#x5DF1;&#x6CA1;&#x90A3;&#x4E48;&#x5389;&#x5BB3;&#x4E0D;&#x662F;&#x4EC0;&#x4E48;&#x90FD;&#x80FD;&#x505A;&#x597D;&#x4E4B;&#x540E;&#xFF0C;&#x5176;&#x5B9E;&#x4E5F;&#x6CA1;&#x4EC0;&#x4E48;&#x597D;&#x96BE;&#x8FC7;&#x7684;&#xFF0C;&#x8D62;&#x8FC7;&#x4E86;&#x81EA;&#x5DF1;&#xFF0C;&#x8F93;&#x4E5F;&#x53EF;&#x4EE5;&#x8F93;&#x7684;&#x5FEB;&#x4E50;&#x561B;&#x3002;&#x79D1;&#x7814;&#x4EC0;&#x4E48;&#x7684;&#xFF0C;&#x5DF2;&#x7ECF;&#x4ECE;&#x53D1;&#x6587;&#x7AE0;&#x53D8;&#x6210;&#x6536;&#x96C6;&#x5404;&#x5927;&#x671F;&#x520A;&#x4F1A;&#x8BAE;&#x7684;reject&#x4E86;&#x3002;</span><br><span class="line"></span><br><span class="line">&#x6E38;&#x620F;&#x5012;&#x662F;&#x6253;&#x7684;&#x8FD8;&#x53EF;&#x4EE5;&#x3002;&#x67D0;&#x6E38;&#x620F;&#x6162;&#x6162;&#x6253;&#x7740;&#x5C31;&#x5168;&#x56FD;&#x51E0;&#x767E;&#x540D;&#x4E86;&#x3002;&#x867D;&#x7136;&#x6570;&#x636E;&#x4E0D;&#x592A;&#x666E;&#x901A;&#xFF0C;&#x4F46;&#x662F;&#x53CD;&#x6B63;&#x6E38;&#x620F;&#x6253;&#x591A;&#x597D;&#x4E5F;&#x6CA1;&#x4EBA;&#x770B;&#xFF0C;&#x8DDF;&#x4EBA;&#x8BB2;&#x4E86;&#x4E5F;&#x53EA;&#x4F1A;&#x5E26;&#x6765;&#x574F;&#x5370;&#x8C61;&#xFF0C;&#x6240;&#x4EE5;&#x5E73;&#x65F6;&#x4E5F;&#x4E0D;&#x8BF4;&#xFF0C;&#x5C31;&#x5728;&#x8FD9;&#x91CC;&#x533F;&#x540D;&#x5439;&#x4E00;&#x6CE2;&#x5427;&#x3002;</span><br><span class="line"></span><br><span class="line">&#x4E8C;&#x5341;&#x591A;&#x5C81;&#x7684;&#x5E74;&#x7EAA;&#x5DF2;&#x7ECF;&#x8FC7;&#x7684;&#x50CF;&#x4E2A;&#x8001;&#x5E74;&#x4EBA;&#xFF0C;&#x5934;&#x9876;&#x5FEB;&#x79C3;&#x4E86;&#xFF0C;&#x8BB0;&#x6027;&#x4E5F;&#x4E0D;&#x884C;&#x4E86;&#xFF0C;&#x627E;&#x81EA;&#x884C;&#x8F66;&#x7ECF;&#x5E38;&#x8981;&#x5341;&#x51E0;&#x5206;&#x949F;&#xFF0C;&#x5750;&#x706B;&#x8F66;&#x5730;&#x94C1;&#x7ECF;&#x5E38;&#x5750;&#x9519;&#x7AD9;&#xFF0C;&#x624B;&#x673A;&#x4E22;&#x4E86;&#x4E09;&#x56DB;&#x6B21;&#xFF0C;&#x5B66;&#x751F;&#x5361;&#x7528;&#x5230;&#x4E86;&#x7B2C;&#x4E03;&#x5F20;&#x3002;&#x524D;&#x51E0;&#x5929;&#x51E0;&#x4E2A;&#x540C;&#x5B66;&#x4E00;&#x8D77;&#x53BB;&#x5916;&#x5730;&#xFF0C;&#x4ED6;&#x4EEC;&#x5728;&#x6253;&#x724C;&#xFF0C;&#x6211;&#x5728;&#x5582;&#x9C7C;&#x3002;&#x8BF4;&#x8D77;&#x6765;&#x9C7C;&#x80AF;&#x5B9A;&#x4E0D;&#x6B62;&#x4E03;&#x79D2;&#x8BB0;&#x5FC6;&#xFF0C;&#x4E0D;&#x7136;&#x600E;&#x4E48;&#x4F1A;&#x5582;&#x5230;&#x540E;&#x9762;&#x5C31;&#x4E0D;&#x6015;&#x6211;&#x4E86;&#x3002;&#x55EF;&#xFF0C;&#x53EF;&#x80FD;&#x6211;&#x7684;&#x8BB0;&#x5FC6;&#x529B;&#x8FD8;&#x4E0D;&#x5982;&#x9C7C;&#x3002;</span><br><span class="line"></span><br><span class="line">&#x6211;&#x8FD9;&#x79CD;&#x4EBA;&#x554A;&#xFF0C;&#x6CA1;&#x6709;&#x4EC0;&#x4E48;&#x7406;&#x60F3;&#x548C;&#x6D6A;&#x6F2B;&#xFF0C;&#x4E5F;&#x5F88;&#x5C11;&#x53BB;&#x60F3;&#x81EA;&#x5DF1;&#x662F;&#x4E2A;&#x4EC0;&#x4E48;&#x6837;&#x7684;&#x4EBA;&#x3002;&#x575A;&#x5B9A;&#x524D;&#x884C;&#x7684;&#x7406;&#x7531;&#x666E;&#x666E;&#x901A;&#x901A;&#xFF0C;&#x8FDC;&#x79BB;&#x7CDF;&#x7CD5;&#x7684;&#x751F;&#x6D3B;&#xFF0C;&#x62E5;&#x62B1;&#x559C;&#x6B22;&#x7684;&#x4E8B;&#x7269;&#x7F62;&#x4E86;&#x3002;</span><br><span class="line"></span><br><span class="line">&#x867D;&#x7136;&#x5F88;&#x6E3A;&#x5C0F;&#xFF0C;&#x4F46;&#x8FD8;&#x662F;&#x53EF;&#x4EE5;&#x8C08;&#x8C08;&#x68A6;&#x60F3;&#x554A;&#xFF0C;&#x533F;&#x540D;&#x7684;&#x4E5F;&#x4E0D;&#x6015;&#x4E0D;&#x597D;&#x610F;&#x601D;&#x3002;&#x4ECE;&#x5C0F;&#x6709;&#x4E00;&#x4E2A;&#x666E;&#x901A;&#x7684;&#x68A6;&#x60F3;&#x5C31;&#x662F;&#x4E16;&#x754C;&#x5904;&#x5904;&#x5145;&#x6EE1;&#x6E29;&#x6696;&#x548C;&#x5E0C;&#x671B;&#x3002;&#x6765;&#x6E90;&#x5176;&#x5B9E;&#x975E;&#x5E38;&#x7B80;&#x5355;&#x800C;&#x666E;&#x901A;&#xFF0C;&#x4E0D;&#x60F3;&#x8BA9;&#x522B;&#x4EBA;&#x548C;&#x81EA;&#x5DF1;&#x4E00;&#x6837;&#x60E8;&#x7F62;&#x4E86;&#x3002;</span><br><span class="line"></span><br><span class="line">&#x6240;&#x4EE5;&#x6211;&#x505A;&#x5FD7;&#x613F;&#x4E5F;&#x633A;&#x591A;&#x7684;&#xFF0C;&#x4E0D;&#x77E5;&#x4E0D;&#x89C9;&#x5DE5;&#x65F6;&#x5C31;&#x6709;&#x51E0;&#x767E;&#x4E86;&#xFF0C;&#x53C2;&#x52A0;&#x8FC7;&#x7684;&#x6D3B;&#x52A8;&#x4E5F;&#x4E0D;&#x5C11;&#xFF0C;&#x4E5F;&#x5F53;&#x8FC7;&#x4E00;&#x4E2A;&#x77E5;&#x540D;&#x56E2;&#x961F;&#x7684;&#x961F;&#x957F;&#xFF0C;&#x53EF;&#x80FD;&#x53EF;&#x4EE5;&#x62FF;&#x5230;&#x4E9B;&#x4E0D;&#x9519;&#x7684;&#x5FD7;&#x613F;&#x5956;&#x5427;&#xFF0C;&#x53EF;&#x662F;&#x6211;&#x73B0;&#x5728;&#x53EA;&#x6709;&#x4E00;&#x4E2A;&#x5927;&#x4E8C;&#x5F00;&#x5934;&#x4E0D;&#x77E5;&#x9053;&#x8C01;&#x9001;&#x6765;&#x6211;&#x5BDD;&#x5BA4;&#x7684;&#x4E09;&#x661F;&#x5FD7;&#x613F;&#x8005;&#x8BC1;&#x4E66;&#x8FD8;&#x4E0D;&#x77E5;&#x9053;&#x5565;&#x65F6;&#x5019;&#x4E0D;&#x89C1;&#x4E86;&#x3002;&#x7B49;&#x6211;&#x53D1;&#x73B0;&#x81EA;&#x5DF1;&#x53EF;&#x4EE5;&#x8BC4;&#x4E94;&#x661F;&#x7684;&#x65F6;&#x5019;&#xFF0C;&#x5FFD;&#x7136;&#x89C9;&#x5F97;&#x4E5F;&#x6CA1;&#x90A3;&#x4E48;&#x60F3;&#x8981;&#xFF0C;&#x5C31;&#x6CA1;&#x53BB;&#x8BC4;&#xFF0C;&#x4E5F;&#x5F88;&#x5C11;&#x5F55;&#x5DE5;&#x65F6;&#x4E86;&#xFF0C;&#x7B80;&#x7B80;&#x5355;&#x5355;&#x5E2E;&#x5E2E;&#x522B;&#x4EBA;&#xFF0C;&#x4E5F;&#x633A;&#x5F00;&#x5FC3;&#x7684;&#x3002;</span><br><span class="line"></span><br><span class="line">&#x6211;&#x548C;&#x5728;&#x8FD9;&#x91CC;&#x7684;&#x5F88;&#x591A;&#x4EBA;&#x4E00;&#x6837;&#xFF0C;&#x5E73;&#x65F6;&#x81EA;&#x5DF1;&#x7684;&#x96BE;&#x8FC7;&#x90FD;&#x6DF1;&#x6DF1;&#x63A9;&#x76D6;&#x8D77;&#x6765;&#x4E86;&#xFF0C;&#x770B;&#x8D77;&#x6765;&#x6211;&#x662F;&#x90A3;&#x79CD;&#x5F88;&#x9633;&#x5149;&#x5F88;&#x6E29;&#x6696;&#x6216;&#x8005;&#x5F88;&#x4F18;&#x79C0;&#x7684;&#x4EBA;&#xFF0C;&#x4F46;&#x81EA;&#x5DF1;&#x4E5F;&#x7ECF;&#x5E38;&#x6027;&#x7684;&#x60B2;&#x89C2;&#x3002;&#x611F;&#x89C9;&#x5728;&#x5D29;&#x6E83;&#x7684;&#x8FB9;&#x7F18;&#x5F98;&#x5F8A;&#x8FC7;&#x51E0;&#x6B21;&#xFF0C;&#x6BCF;&#x4E00;&#x6B21;&#x8FD9;&#x79CD;&#x65F6;&#x5019;&#x90FD;&#x5F88;&#x96BE;&#x71AC;&#xFF0C;&#x4E5F;&#x7ECF;&#x5E38;&#x82E6;&#x4E8E;&#x65E0;&#x4EBA;&#x503E;&#x8BC9;&#x53EA;&#x80FD;&#x4E00;&#x4E2A;&#x4EBA;&#x54ED;&#x3002;&#x53EA;&#x6709;&#x5BE5;&#x5BE5;&#x51E0;&#x4EBA;&#x53EF;&#x4EE5;&#x4EA4;&#x5FC3;&#xFF0C;&#x611F;&#x89C9;&#x633A;&#x60E8;&#x7684;&#xFF0C;&#x4F46;&#x6211;&#x77E5;&#x9053;&#x5927;&#x591A;&#x6570;&#x4EBA;&#x90FD;&#x662F;&#x4E00;&#x6837;&#x7684;&#x60E8;&#xFF0C;&#x6240;&#x4EE5;&#x4E5F;&#x7B97;&#x666E;&#x901A;&#x5427;&#x3002;&#x540E;&#x6765;&#x770B;&#x5230;&#x548C;&#x6211;&#x4E00;&#x6837;&#x7684;&#x4EBA;&#x5C31;&#x60F3;&#x53BB;&#x5E2E;&#x4E00;&#x628A;&#xFF0C;&#x88AB;&#x6211;&#x6E29;&#x6696;&#x7684;&#x4EBA;&#x591A;&#x4E86;&#xFF0C;&#x4E5F;&#x6709;&#x4E86;&#x5F88;&#x591A;&#x6E29;&#x6696;&#x7684;&#x670B;&#x53CB;&#xFF0C;&#x4F1A;&#x6709;&#x4EBA;&#x613F;&#x610F;&#x5728;&#x6211;&#x96BE;&#x8FC7;&#x7684;&#x65F6;&#x5019;&#x6551;&#x4E00;&#x6551;&#x6211;&#x4E86;&#x3002;&#x4E16;&#x754C;&#x4E4B;&#x6240;&#x4EE5;&#x503C;&#x5F97;&#x70ED;&#x7231;&#x5C31;&#x662F;&#x8FD8;&#x6709;&#x5F88;&#x591A;&#x661F;&#x661F;&#x4E00;&#x6837;&#x7684;&#x4EBA;&#x554A;&#x3002;</span><br><span class="line"></span><br><span class="line">&#x770B;&#x5230;&#x5F88;&#x591A;&#x4EBA;&#x7684;&#x6545;&#x4E8B;&#x5C31;&#x50CF;&#x770B;&#x5230;&#x4E86;&#x81EA;&#x5DF1;&#x3002;&#x6211;&#x77E5;&#x9053;&#x6BCF;&#x4E2A;&#x4EBA;&#x90FD;&#x6709;&#x7740;&#x96BE;&#x8FC7;&#x7684;&#x65F6;&#x5019;&#xFF0C;&#x90FD;&#x6709;&#x5F88;&#x591A;&#x60F3;&#x505A;&#x597D;&#x5374;&#x505A;&#x4E0D;&#x597D;&#x7684;&#x4E8B;&#x3002;&#x4F46;&#x662F;&#x5E0C;&#x671B;&#x5927;&#x5BB6;&#x4E0D;&#x8981;&#x592A;&#x4E27;&#x554A;&#xFF0C;&#x603B;&#x5F52;&#x662F;&#x6709;&#x5F88;&#x591A;&#x7F8E;&#x597D;&#x7684;&#x4E8B;&#x60C5;&#x53BB;&#x53D1;&#x73B0;&#xFF0C;&#x603B;&#x6709;&#x4E00;&#x4E9B;&#x65F6;&#x5149;&#x503C;&#x5F97;&#x73CD;&#x60DC;&#xFF0C;&#x603B;&#x6709;&#x4E00;&#x4E9B;&#x4EBA;&#x613F;&#x610F;&#x53BB;&#x5EFA;&#x7ACB;&#x4E00;&#x4E2A;&#x6E29;&#x6696;&#x7684;&#x4E16;&#x754C;&#x3002;&#x5E0C;&#x671B;&#x4EBA;&#x4EBA;&#x90FD;&#x80FD;&#x627E;&#x5230;&#x81EA;&#x5DF1;&#x60F3;&#x505A;&#x7684;&#x4E8B;&#xFF0C;&#x4E0D;&#x4E3A;&#x6846;&#x67B6;&#x6307;&#x6807;&#x6240;&#x9650;&#xFF0C;&#x8BA4;&#x771F;&#x751F;&#x6D3B;&#xFF0C;&#x5145;&#x6EE1;&#x5E0C;&#x671B;&#xFF0C;&#x4EAB;&#x53D7;&#x666E;&#x901A;&#x7684;&#x6BCF;&#x4E00;&#x5929;&#x3002;</span><br><span class="line"></span><br><span class="line">&#x4E0D;&#x5FC5;&#x4E3A;&#x4E86;&#x5931;&#x8D25;&#x800C;&#x61CA;&#x607C;&#xFF0C;&#x89C9;&#x5F97;&#x81EA;&#x5DF1;&#x4E00;&#x4E8B;&#x65E0;&#x6210;&#x3002;&#x4E0D;&#x5FC5;&#x81EA;&#x5351;&#x6216;&#x8005;&#x81EA;&#x8D1F;&#xFF0C;&#x627E;&#x5230;&#x81EA;&#x5DF1;&#x5185;&#x5FC3;&#x771F;&#x5B9E;&#x7684;&#x6A21;&#x6837;&#x3002;&#x6211;&#x611F;&#x89C9;&#xFF0C;&#x5982;&#x679C;&#x5C06;&#x5BF9;&#x672A;&#x6765;&#x7684;&#x671F;&#x5F85;&#x5EFA;&#x7ACB;&#x5728;&#x5DF2;&#x7ECF;&#x62E5;&#x6709;&#x7684;&#x4E8B;&#x60C5;&#x4E0A;&#xFF0C;&#x5EFA;&#x7ACB;&#x5728;&#x666E;&#x901A;&#x7684;&#x81EA;&#x5DF1;&#x4E4B;&#x4E0A;&#xFF0C;&#x5C31;&#x80FD;&#x5BF9;&#x751F;&#x6D3B;&#x6709;&#x6240;&#x7B03;&#x5B9A;&#x3002;&#x8FFD;&#x5BFB;&#x4E0D;&#x5230;&#x7406;&#x60F3;&#x548C;&#x6D6A;&#x6F2B;&#x4E5F;&#x53EF;&#x4EE5;&#x8FFD;&#x6C42;&#x751F;&#x6D3B;&#x7684;&#x5C0F;&#x786E;&#x5E78;&#x3002;&#x8D70;&#x4E0D;&#x51FA;&#x81EA;&#x5DF1;&#x7684;&#x8FC7;&#x53BB;&#x6216;&#x8005;&#x9760;&#x60F3;&#x8C61;&#x7684;&#x4EBA;&#x8BBE;&#xFF08;&#x4E0D;&#x7BA1;&#x662F;&#x4F18;&#x79C0;&#x8FD8;&#x662F;&#x7CDF;&#x7CD5;&#xFF09;&#x6765;&#x9650;&#x5236;&#x81EA;&#x5DF1;&#x90FD;&#x4F1A;&#x8BA9;&#x81EA;&#x5DF1;&#x591A;&#x51FA;&#x4E9B;&#x4E0D;&#x73B0;&#x5B9E;&#x7684;&#x5E7B;&#x60F3;&#xFF0C;&#x7136;&#x540E;&#x65F6;&#x800C;&#x4E50;&#x89C2;&#x65F6;&#x800C;&#x60B2;&#x89C2;&#x3002; &#x653E;&#x4E0B;&#x70B9;&#x5305;&#x88B1;&#x8BE5;&#x54ED;&#x54ED;&#x8BE5;&#x7B11;&#x7B11;&#xFF0C;&#x628A;&#x60C5;&#x7EEA;&#x91CA;&#x653E;&#x8FC7;&#x540E;&#xFF0C;&#x751F;&#x6D3B;&#x8FD8;&#x662F;&#x80FD;&#x5411;&#x524D;&#x7684;&#x3002;&#x5C31;&#x7B97;&#x6709;&#x4E9B;&#x8FF7;&#x832B;&#xFF0C;&#x53EA;&#x8981;&#x7740;&#x773C;&#x4E8E;&#x73B0;&#x5728;&#xFF0C;&#x8D70;&#x5728;&#x5954;&#x5411;&#x672A;&#x6765;&#x7684;&#x8DEF;&#x4E0A;&#xFF0C;&#x5C31;&#x80FD;&#x5E73;&#x548C;&#x800C;&#x5145;&#x6EE1;&#x5E0C;&#x671B;&#x3002;</span><br><span class="line"></span><br><span class="line">&#x6CA1;&#x6709;&#x903B;&#x8F91;&#x7684;&#x6D41;&#x6C34;&#x8BDD;&#x5199;&#x4E86;&#x4E0D;&#x5C11;&#xFF0C;&#x5982;&#x679C;&#x666E;&#x901A;&#x7684;&#x5B9A;&#x4E49;&#x662F;&#x5927;&#x591A;&#x6570;&#x4EBA;&#xFF0C;&#x6211;&#x4E0D;&#x77E5;&#x9053;&#x6211;&#x7B97;&#x4E0D;&#x7B97;&#xFF0C;&#x4F46;&#x662F;&#x5E0C;&#x671B;&#x6709;&#x5171;&#x9E23;&#x7684;&#x4EBA;&#x8D8A;&#x591A;&#x8D8A;&#x597D;&#xFF0C;&#x5E0C;&#x671B;&#x81EA;&#x5DF1;&#x7684;&#x60F3;&#x6CD5;&#x90FD;&#x5F88;&#x666E;&#x901A;&#x5427;&#x3002;&#x77E5;&#x4E4E;&#x4E0A;&#x7684;&#x4E00;&#x6BB5;&#x8BDD;&#x9001;&#x7ED9;&#x5927;&#x5BB6;&#xFF1A;</span><br><span class="line"></span><br><span class="line">&#x613F;&#x537F;&#x4E0D;&#x4E3A;&#x751F;&#x8BA1;&#x8D70;</span><br><span class="line">&#x613F;&#x537F;&#x4E0D;&#x4E3A;&#x7A3B;&#x7CB1;&#x8C0B;</span><br><span class="line">&#x613F;&#x537F;&#x7EC8;&#x9042;&#x5E73;&#x751F;&#x613F;</span><br><span class="line">&#x613F;&#x537F;&#x5FD8;&#x5374;&#x4E16;&#x95F4;&#x6101;</span><br></pre></td></tr></table></figure>
<p>17&#x5929;&#x4E4B;&#x524D; <a href="https://closed.social/ordinary/?page=3&amp;per_page=20&amp;sort_by=time##"> 83</a></p>
<p>No. 94</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#x5C18;&#xFF0C;&#x4E00;&#x7C92;&#x6D6E;&#x5C18;&#x7684;&#x5C18;&#xFF0C;&#x7537;&#xFF0C;&#x96F6;&#x5B57;&#x73ED;&#x65B0;&#x751F;&#x3002;</span><br><span class="line">&#x6211;&#x66FE;&#x7ECF;&#x8DE8;&#x8FC7;&#x5C71;&#x548C;&#x5927;&#x6D77;&#xFF0C;&#x4E5F;&#x7A7F;&#x8FC7;&#x4EBA;&#x5C71;&#x4EBA;&#x6D77;&#xFF0C;&#x6211;&#x66FE;&#x7ECF;&#x62E5;&#x6709;&#x7740;&#x7684;&#x4E00;&#x5207;&#xFF0C;&#x8F6C;&#x773C;&#x90FD;&#x98D8;&#x6563;&#x5982;&#x70DF;&#xFF0C;&#x6211;&#x66FE;&#x7ECF;&#x5931;&#x843D;&#x5931;&#x671B;&#x5931;&#x6389;&#x6240;&#x6709;&#x65B9;&#x5411;&#x3002;</span><br><span class="line">&#x76F4;&#x5230;&#x770B;&#x89C1;&#x666E;&#x901A;&#xFF0C;&#x624D;&#x662F;&#x552F;&#x4E00;&#x7684;&#x7B54;&#x6848;&#x3002;</span><br><span class="line">&#x5317;&#x4EAC;&#x7684;&#x55A7;&#x56A3;&#x548C;&#x660E;&#x4EAE;&#xFF0C;&#x534E;&#x6E05;&#x7684;&#x5FEB;&#x4E50;&#x548C;&#x5E78;&#x798F;&#xFF0C;&#x5982;&#x540C;&#x6E05;&#x4EAE;&#x7684;&#x6EAA;&#x6DA7;&#xFF0C;&#x5728;&#x98CE;&#x91CC;&#xFF0C;&#x5728;&#x6211;&#x773C;&#x524D;&#xFF0C;&#x6C68;&#x6C68;&#x800C;&#x8FC7;&#x3002;&#x53EA;&#x5269;&#x4E0B;&#x666E;&#x901A;&#x7684;&#x6211;&#xFF0C;&#x5728;&#x70ED;&#x95F9;&#x627E;&#x4E0D;&#x5230;&#x7684;&#x5730;&#x65B9;&#xFF0C;&#x62E5;&#x6709;&#x7740;&#x666E;&#x901A;&#x7684;&#x7279;&#x8D28;&#xFF0C;&#x666E;&#x901A;&#x7684;&#x613F;&#x671B;&#xFF0C;&#x8FC7;&#x7740;&#x666E;&#x901A;&#x7684;&#x751F;&#x6D3B;&#x3002;</span><br><span class="line"></span><br><span class="line">&#x666E;&#x901A;&#x7684;&#x6211;&#x554A;&#x3002;&#x751F;&#x5728;&#x666E;&#x901A;&#x5BB6;&#x5EAD;&#xFF0C;&#x957F;&#x5728;&#x666E;&#x901A;&#x5BB6;&#x5EAD;&#xFF0C;&#x4E00;&#x5F20;&#x666E;&#x901A;&#x7684;&#x8138;&#xFF0C;&#x666E;&#x901A;&#x7684;&#x6210;&#x7EE9;&#xFF0C;&#x60F3;&#x666E;&#x901A;&#x7684;&#x4E8B;&#x60C5;&#x3002;</span><br><span class="line"></span><br><span class="line">&#x6211;&#x662F;&#x4E00;&#x4E2A;&#x5916;&#x8C8C;&#x666E;&#x901A;&#x7684;&#x4EBA;&#xFF0C;&#x6CA1;&#x6709;&#x5E05;&#x6C14;&#x7684;&#x957F;&#x76F8;&#xFF0C;&#x6CA1;&#x6709;&#x78C1;&#x6027;&#x7684;&#x58F0;&#x97F3;&#xFF0C;&#x6CA1;&#x6709;&#x4E00;&#x773C;&#x5C31;&#x8BA9;&#x4EBA;&#x8BB0;&#x4F4F;&#x7684;&#x8EAB;&#x6750;&#x3002;&#x6BCF;&#x5F53;&#x770B;&#x5230;&#x6709;&#x4EBA;&#x5BF9;&#x522B;&#x4EBA;&#x7684;&#x5916;&#x8C8C;&#x9891;&#x9891;&#x79F0;&#x8D5E;&#x65F6;&#xFF0C;&#x603B;&#x5E0C;&#x671B;&#x6709;&#x4E00;&#x5929;&#xFF0C;&#x8FD9;&#x6837;&#x7684;&#x5B57;&#x773C;&#x80FD;&#x843D;&#x5728;&#x81EA;&#x5DF1;&#x8EAB;&#x4E0A;&#xFF0C;&#x5E0C;&#x671B;&#x6709;&#x4E00;&#x5929;&#x80FD;&#x6210;&#x4E3A;&#x9752;&#x6625;&#x5C0F;&#x8BF4;&#x91CC;&#x6545;&#x4E8B;&#x7684;&#x7537;&#x4E3B;&#x89D2;&#xFF0C;&#x4E00;&#x51FA;&#x573A;&#x603B;&#x662F;&#x5E26;&#x7740;&#x98CE;&#x4E0E;&#x5149;&#x8292;&#x3002;&#x6211;&#x603B;&#x662F;&#x666E;&#x901A;&#x5730;&#x60F3;&#x8981;&#x6709;&#x90A3;&#x4E48;&#x4E00;&#x5929;&#xFF0C;&#x6211;&#x80FD;&#x6709;&#x4E0D;&#x666E;&#x901A;&#x7684;&#x5916;&#x8C8C;&#xFF0C;&#x80FD;&#x5F97;&#x6765;&#x4E0D;&#x666E;&#x901A;&#x7684;&#x8D5E;&#x7F8E;&#x3002;</span><br><span class="line">&#x53EF;&#x80FD;&#x6709;&#x4E9B;&#x4E0D;&#x7518;&#xFF0C;&#x4F46;&#x603B;&#x88AB;&#x5931;&#x671B;&#x586B;&#x6EE1;&#x3002;</span><br><span class="line"></span><br><span class="line">&#x6211;&#x7684;&#x8111;&#x888B;&#x4E0D;&#x591F;&#x806A;&#x660E;&#xFF0C;&#x9760;&#x7740;&#x666E;&#x901A;&#x7684;&#x5962;&#x671B;&#x548C;&#x4E00;&#x70B9;&#x5C0F;&#x5E78;&#x8FD0;&#x8FDB;&#x4E86;&#x534E;&#x6E05;&#x3002;&#x6211;&#x6765;&#x81EA;&#x4E61;&#x6751;&#xFF0C;&#x4E2D;&#x5B66;&#x5728;&#x4E00;&#x4E2A;&#x5C0F;&#x5C0F;&#x7684;&#x57CE;&#x9547;&#x8BFB;&#xFF0C;&#x6CA1;&#x5B66;&#x8FC7;&#x5439;&#x62C9;&#x5F39;&#x5531;&#xFF0C;&#x4EA6;&#x4E0D;&#x61C2;&#x7434;&#x68CB;&#x4E66;&#x753B;&#xFF0C;&#x53EA;&#x4F1A;&#x9AD8;&#x8003;&#x90A3;&#x4E00;&#x70B9;&#x5C0F;&#x5C0F;&#x7684;&#x77E5;&#x8BC6;&#x3002;&#x6211;&#x4E5F;&#x60F3;&#x50CF;&#x8EAB;&#x8FB9;&#x7684;&#x5927;&#x4F6C;&#x4E00;&#x6837;&#xFF0C;&#x65E9;&#x65E9;&#x7684;&#x5C31;&#x5B66;&#x8FC7;&#x5FAE;&#x79EF;&#x5206;&#x548C;&#x7EBF;&#x6027;&#x4EE3;&#x6570;&#xFF0C;&#x4F1A;&#x7F16;&#x4E00;&#x5927;&#x5806;&#x590D;&#x6742;&#x7684;&#x6211;&#x4E00;&#x70B9;&#x90FD;&#x770B;&#x4E0D;&#x61C2;&#x7684;&#x7A0B;&#x5E8F;&#xFF1B;&#x6211;&#x4E5F;&#x60F3;&#x50CF;&#x8EAB;&#x8FB9;&#x7684;&#x540C;&#x5B66;&#x4E00;&#x6837;&#xFF0C;&#x90FD;&#x6709;&#x4E00;&#x4EFD;&#x7279;&#x957F;&#xFF0C;&#x6709;&#x4E00;&#x4EFD;&#x81EA;&#x5DF1;&#x7279;&#x522B;&#x7684;&#x5730;&#x65B9;&#x3002;&#x53EF;&#x6211;&#x53D1;&#x73B0;&#x81EA;&#x5DF1;&#x4EC0;&#x4E48;&#x90FD;&#x6BD4;&#x4E0D;&#x4E0A;&#x4EBA;&#x5BB6;&#x3002;&#x6211;&#x6BCF;&#x5929;&#x90FD;&#x52AA;&#x529B;&#x5B66;&#x4E60;&#x90A3;&#x4E9B;&#x5BF9;&#x6211;&#x6765;&#x8BF4;&#x96BE;&#x61C2;&#x7684;&#x8BFE;&#x7A0B;&#xFF0C;&#x6BCF;&#x6B21;&#x6BCF;&#x8282;&#x8BFE;&#x90FD;&#x8BA4;&#x771F;&#x542C;&#x8BB2;&#x82E6;&#x82E6;&#x5730;&#x8BB0;&#x7B14;&#x8BB0;&#x82E6;&#x82E6;&#x5730;&#x505A;&#x7EC3;&#x4E60;&#xFF0C;&#x53EF;&#x603B;&#x662F;&#x5199;&#x4E0D;&#x6765;&#x9898;&#xFF0C;&#x603B;&#x662F;&#x6709;&#x4E9B;&#x5B66;&#x4E0D;&#x61C2;&#x3002;&#x770B;&#x7740;&#x5927;&#x4F6C;&#x6BCF;&#x5929;&#x4E0A;&#x8BFE;&#x7761;&#x89C9;&#x7136;&#x540E;&#x4ECD;&#x80FD;&#x9A6C;&#x4E0A;&#x5199;&#x5B8C;&#x4F5C;&#x4E1A;&#x7684;&#x8EAB;&#x5F71;&#xFF0C;&#x60F3;&#x60F3;&#x81EA;&#x5DF1;&#x82E6;&#x82E6;&#x6323;&#x624E;&#x7684;&#x5FC3;&#x7075;&#xFF0C;&#x6211;&#x6BCF;&#x6B21;&#x90FD;&#x5728;&#x8D28;&#x95EE;&#x81EA;&#x5DF1;&#x662F;&#x4E0D;&#x662F;&#x81EA;&#x5DF1;&#x4E0D;&#x884C;&#xFF0C;&#x662F;&#x4E0D;&#x662F;&#x81EA;&#x5DF1;&#x592A;&#x5DEE;&#xFF0C;&#x662F;&#x4E0D;&#x662F;&#x81EA;&#x5DF1;&#x4E0D;&#x914D;&#x62E5;&#x6709;&#x806A;&#x660E;&#x7684;&#x8111;&#x888B;&#x3002;&#x5728;&#x5B66;&#x4E1A;&#x7684;&#x5927;&#x9053;&#x4E0A;&#xFF0C;&#x6211;&#x8D39;&#x529B;&#x5730;&#x9A91;&#x7740;&#x81EA;&#x884C;&#x8F66;&#xFF0C;&#x5374;&#x59CB;&#x7EC8;&#x8D76;&#x4E0D;&#x4E0A;&#x5750;&#x5728;&#x6C7D;&#x8F66;&#x91CC;&#x7684;&#x4EBA;&#x8F7B;&#x8F7B;&#x4E00;&#x811A;&#x7684;&#x52A0;&#x901F;&#x3002;&#x5176;&#x5B9E;&#x6211;&#x77E5;&#x9053;&#xFF0C;&#x96BE;&#x8FC7;&#x4E0D;&#x80FD;&#x89E3;&#x51B3;&#x95EE;&#x9898;&#xFF0C;&#x4F46;&#x6709;&#x7684;&#x65F6;&#x5019;&#xFF0C;&#x6211;&#x5C31;&#x662F;&#x60F3;&#x96BE;&#x8FC7;&#x4E00;&#x5C0F;&#x4F1A;&#x3002;&#x6211;&#x4E0D;&#x6C42;&#x81EA;&#x5DF1;&#x80FD;&#x6210;&#x4E3A;&#x90A3;&#x6837;&#x7684;&#x5927;&#x4F6C;&#xFF0C;&#x6211;&#x53EA;&#x662F;&#x666E;&#x901A;&#x7684;&#x60F3;&#x8981;&#x4E0D;&#x88AB;&#x4ED6;&#x4EEC;&#x7529;&#x5F97;&#x592A;&#x8FDC;&#x3002;</span><br><span class="line"></span><br><span class="line">&#x6211;&#x6CA1;&#x6709;&#x51FA;&#x8272;&#x7684;&#x97F3;&#x4E50;&#x7EC6;&#x80DE;&#x3002;&#x5411;&#x6240;&#x6709;&#x4EBA;&#x4E00;&#x6837;&#xFF0C;&#x6211;&#x666E;&#x901A;&#x5730;&#x6E34;&#x671B;&#x6709;&#x4E00;&#x4EFD;&#x62FF;&#x7684;&#x51FA;&#x624B;&#x7684;&#x624D;&#x534E;&#x3002;&#x767E;&#x56E2;&#x5927;&#x6218;&#x90A3;&#x5929;&#xFF0C;&#x6211;&#x6000;&#x63E3;&#x7740;&#x4E00;&#x4EFD;&#x5C0F;&#x5C0F;&#x7684;&#x671F;&#x5F85;&#xFF0C;&#x52A0;&#x5165;&#x4E86;&#x534E;&#x6E05;&#x7B1B;&#x534F;&#x3002;&#x6211;&#x5929;&#x771F;&#x5730;&#x4EE5;&#x4E3A;&#x81EA;&#x5DF1;&#x80FD;&#x591F;&#x5B66;&#x5F97;&#x6B63;&#x5E38;&#xFF0C;&#x5B66;&#x5F97;&#x6709;&#x8FDB;&#x6B65;&#x3002;&#x53EF;&#x662F;&#xFF0C;&#x4E0A;&#x5929;&#x94C1;&#x9752;&#x7740;&#x8138;&#xFF0C;&#x7ED9;&#x6211;&#x7684;&#x5E7B;&#x60F3;&#x6253;&#x4E86;&#x4E00;&#x4E2A;&#x96F6;&#x5206;&#x3002;&#x5F53;&#x8EAB;&#x8FB9;&#x4E00;&#x8D77;&#x96F6;&#x57FA;&#x7840;&#x7684;&#x540C;&#x5B66;&#x5DF2;&#x7ECF;&#x5F00;&#x59CB;&#x7EC3;&#x4E60;&#x957F;&#x97F3;&#x4E2D;&#x97F3;&#x77ED;&#x97F3;&#x7684;&#x65F6;&#x5019;&#xFF0C;&#x6211;&#x8FD8;&#x5728;&#x5982;&#x4F55;&#x505A;&#x597D;&#x53E3;&#x578B;&#x3001;&#x5982;&#x4F55;&#x547C;&#x5438;&#x3001;&#x5982;&#x4F55;&#x5439;&#x54CD;&#x7B1B;&#x5B50;&#x7684;&#x5C42;&#x9762;&#x82E6;&#x82E6;&#x5F98;&#x5F8A;&#x3002;&#x6211;&#x4E0D;&#x7518;&#x3001;&#x4E0D;&#x7518;&#x8FD9;&#x6837;&#x7684;&#x72B6;&#x6001;&#x3002;&#x5468;&#x4E09;&#x7684;C&#x697C;&#x6216;&#x5730;&#x4E0B;&#x6D3B;&#x52A8;&#x4E2D;&#x5FC3;&#x7684;&#x7EC3;&#x4E60;&#x8BFE;&#xFF0C;&#x6211;&#x6EE1;&#x6000;&#x61A7;&#x61AC;&#x5E26;&#x7740;&#x7B1B;&#x5B50;&#x6765;&#x5230;&#x95E8;&#x53E3;&#xFF0C;&#x5C0F;&#x5FC3;&#x7FFC;&#x7FFC;&#x5730;&#x5411;&#x91CC;&#x9762;&#x5F20;&#x671B;&#xFF0C;&#x91CC;&#x9762;&#x4F20;&#x6765;&#x7684;&#x52A8;&#x542C;&#x7F8E;&#x5999;&#x7684;&#x7B1B;&#x58F0;&#xFF0C;&#x5230;&#x6211;&#x8033;&#x91CC;&#x5374;&#x6210;&#x4E3A;&#x4E86;&#x523A;&#x9AA8;&#x7684;&#x5632;&#x7B11;&#x3002;&#x60F3;&#x8D77;&#x81EA;&#x5DF1;&#x5439;&#x51FA;&#x7684;&#x7C97;&#x7C9D;&#x7684;&#x7B1B;&#x58F0;&#xFF0C;&#x90A3;&#x79CD;&#x523B;&#x5728;&#x9AA8;&#x5B50;&#x91CC;&#x7684;&#x81EA;&#x5351;&#x6CB9;&#x7136;&#x800C;&#x751F;&#xFF0C;&#x6211;&#x9ED8;&#x9ED8;&#x5730;&#x4F4E;&#x4E0B;&#x4E86;&#x5934;&#xFF0C;&#x9ED8;&#x9ED8;&#x5730;&#x8F6C;&#x8EAB;&#x79BB;&#x5F00;&#xFF0C;&#x8FDE;&#x80CC;&#x5F71;&#x4E5F;&#x6CA1;&#x6709;&#x7559;&#x4E0B;&#x3002;&#x53EF;&#x90A3;&#x4EFD;&#x666E;&#x901A;&#x4EBA;&#x4E5F;&#x6709;&#x7684;&#x6267;&#x7740;&#x8BA9;&#x6211;&#x4E0D;&#x60F3;&#x5C31;&#x6B64;&#x653E;&#x5F03;&#x3002;&#x6211;&#x9ED8;&#x9ED8;&#x5730;&#x6765;&#x5230;&#x4E00;&#x4E2A;&#x6CA1;&#x6709;&#x4EBA;&#x7684;&#x5730;&#x65B9;&#xFF0C;&#x5BF9;&#x7740;&#x6F06;&#x9ED1;&#x7684;&#x591C;&#x7A7A;&#xFF0C;&#x7EC3;&#x4E60;&#x4E86;&#x4E24;&#x4E2A;&#x5C0F;&#x65F6;&#x3002;&#x665A;&#x4E0A;&#x7684;&#x8377;&#x5858;&#x8FB9;&#xFF0C;&#x98CE;&#x5F88;&#x5927;&#xFF0C;&#x6211;&#x62FF;&#x7740;&#x7B1B;&#x5B50;&#x7684;&#x624B;&#x5728;&#x5BD2;&#x98CE;&#x4E2D;&#x745F;&#x745F;&#x53D1;&#x6296;&#xFF0C;&#x8EAB;&#x4F53;&#x5DF2;&#x7ECF;&#x51B7;&#x7684;&#x53D1;&#x9EBB;&#xFF0C;&#x53EF;&#x6211;&#x6700;&#x7EC8;&#x8FD8;&#x662F;&#x6CA1;&#x6709;&#x7EC3;&#x4F1A;&#x3002;&#x6211;&#x5FCD;&#x4F4F;&#x6CA1;&#x8BA9;&#x773C;&#x6CEA;&#x6389;&#x4E0B;&#x6765;&#xFF0C;&#x6211;&#x6068;&#xFF0C;&#x6068;&#x81EA;&#x5DF1;&#x4E3A;&#x4EC0;&#x4E48;&#x8FD9;&#x4E48;&#x6CA1;&#x7528;&#xFF0C;&#x6068;&#x81EA;&#x5DF1;&#x4E3A;&#x4EC0;&#x4E48;&#x8FDE;&#x8FD9;&#x4E48;&#x57FA;&#x7840;&#x7684;&#x4E1C;&#x897F;&#x90FD;&#x4E0D;&#x4F1A;&#x3002;&#x6211;&#x6015;&#x6700;&#x540E;&#xFF0C;&#x81EA;&#x5DF1;&#x8FDE;&#x4E2A;&#x666E;&#x901A;&#x4EBA;&#x90FD;&#x6210;&#x4E0D;&#x4E86;&#x3002;</span><br><span class="line">&#x5C11;&#x5E74;&#x8FD8;&#x672A;&#x6210;&#x4EBA;&#xFF0C;&#x5FD8;&#x5374;&#x4E86;&#x8BD7;&#x4EBA;&#x548C;&#x7267;&#x7B1B;&#xFF0C;&#x5FC3;&#x4E2D;&#x5076;&#x5C14;&#x6E34;&#x671B;&#x539F;&#x91CE;&#xFF0C;&#x53EA;&#x662F;&#x5F53;&#x5E74;&#x7684;&#x98CE;&#x4E0D;&#x518D;&#x3002;</span><br><span class="line"></span><br><span class="line">&#x6211;&#x6CA1;&#x6709;&#x62C5;&#x4EFB;&#x4EFB;&#x4F55;&#x73ED;&#x59D4;&#xFF0C;&#x6CA1;&#x6709;&#x4EFB;&#x4F55;&#x624D;&#x827A;&#x3002;&#x6211;&#x53C2;&#x52A0;&#x4E86;&#x8FA9;&#x8BBA;&#x8D5B;&#xFF0C;&#x5374;&#x62D6;&#x4E86;&#x73ED;&#x7EA7;&#x7684;&#x540E;&#x817F;&#xFF0C;&#x6210;&#x4E86;&#x6700;&#x5DEE;&#x7684;&#x4E00;&#x4E2A;&#xFF1B;&#x6211;&#x53C2;&#x52A0;&#x4E86;&#x4E52;&#x4E53;&#x7403;&#x6BD4;&#x8D5B;&#xFF0C;&#x53EA;&#x4F1A;&#x6253;&#x91CE;&#x7403;&#x7684;&#x6211;&#x88AB;&#x5404;&#x79CD;&#x63A5;&#x53D7;&#x8FC7;&#x8BAD;&#x7EC3;&#x5B66;&#x8FC7;&#x4E52;&#x4E53;&#x7403;&#x7684;&#x5927;&#x4F6C;&#x8840;&#x8650;&#x2026;&#x2026;&#x6211;&#x6CA1;&#x6709;&#x62FF;&#x5F97;&#x51FA;&#x624B;&#x7684;&#x624D;&#x534E;&#xFF0C;&#x53EA;&#x6709;&#x62FF;&#x7684;&#x51FA;&#x624B;&#x7684;&#x666E;&#x901A;&#x3002;</span><br><span class="line">&#x90A3;&#x79CD;&#x611F;&#x89C9;&#x53C8;&#x6765;&#x4E86;&#xFF0C;&#x5F88;&#x96BE;&#x8FC7;&#x53C8;&#x5F88;&#x96BE;&#x8BF4;&#x3002;</span><br><span class="line"></span><br><span class="line">&#x6211;&#x6CA1;&#x6709;&#x8C08;&#x8FC7;&#x604B;&#x7231;&#xFF0C;&#x53EA;&#x6709;&#x4E00;&#x6BB5;&#x5931;&#x8D25;&#x7684;&#x8868;&#x767D;&#x3002;</span><br><span class="line">&#x5979;&#x662F;&#x4E00;&#x4F4D;&#x5341;&#x5206;&#x4F18;&#x79C0;&#x7684;&#x5973;&#x751F;&#xFF0C;&#x7F8E;&#x4E3D;&#x53EF;&#x7231;&#x6709;&#x624D;&#x534E;&#xFF0C;&#x540C;&#x6837;&#x6765;&#x4E86;&#x534E;&#x6E05;&#x3002;&#x9AD8;&#x8003;&#x524D;&#x9690;&#x85CF;&#x7684;&#x5FC3;&#x52A8;&#x5728;&#x9AD8;&#x8003;&#x51FA;&#x5206;&#x540E;&#x840C;&#x53D1;&#x4E86;&#x82BD;&#x3002;&#x6211;&#x6E05;&#x695A;&#x81EA;&#x5DF1;&#x51E0;&#x4E4E;&#x6CA1;&#x6709;&#x6210;&#x529F;&#x7684;&#x673A;&#x4F1A;&#xFF0C;&#x4F46;&#x7EB5;&#x7136;&#x6709;&#x90A3;&#x4E48;&#x591A;&#x81EA;&#x5351;&#x7684;&#x7F81;&#x7ECA;&#xFF0C;&#x6211;&#x8FD8;&#x662F;&#x60F3;&#x9053;&#x51FA;&#x6211;&#x7684;&#x5FC3;&#x610F;&#xFF0C;&#x6BD5;&#x7ADF;&#x4E0D;&#x8BF4;&#x8C01;&#x4E5F;&#x4E0D;&#x77E5;&#x9053;&#x7A76;&#x7ADF;&#x4F1A;&#x5982;&#x4F55;&#xFF0C;&#x800C;&#x4E14;&#x6211;&#x518D;&#x4E5F;&#x65E0;&#x6CD5;&#x6291;&#x5236;&#x4F4F;&#x6211;&#x5BF9;&#x5979;&#x7684;&#x559C;&#x6B22;&#xFF0C;&#x5979;&#x662F;&#x6211;&#x4E00;&#x751F;&#x957F;&#x4E45;&#x7684;&#x68A6;&#x60F3;&#x3002;&#x6211;&#x82B1;&#x4E86;&#x51E0;&#x5929;&#x7CBE;&#x529B;&#xFF0C;&#x5199;&#x4E86;&#x5C01;3000&#x5B57;&#x7684;&#x60C5;&#x4E66;&#xFF0C;&#x5F97;&#x5230;&#x7684;&#xFF0C;&#x5374;&#x662F;&#x6EE1;&#x5C4F;&#x7684;&#x75DB;&#x82E6;&#x3002;&#x867D;&#x7136;&#x731C;&#x5230;&#x4E86;&#x7ED3;&#x5C40;&#xFF0C;&#x53EF;&#x5230;&#x4E86;&#x90A3;&#x523B;&#x8FD8;&#x662F;&#x4E0D;&#x613F;&#x610F;&#x63A5;&#x53D7;&#x3002;&#x4E5F;&#x8BB8;&#x8FD9;&#x5C31;&#x662F;&#x7A3B;&#x5B50;&#x548C;&#x7A17;&#x5B50;&#x7684;&#x533A;&#x522B;&#xFF0C;&#x4E5F;&#x8BB8;&#x8FD9;&#x5C31;&#x662F;&#x4E00;&#x68F5;&#x7A17;&#x5B50;&#x63D0;&#x5FC3;&#x540A;&#x80C6;&#x7684;&#x6625;&#x5929;&#x3002;&#x53EA;&#x4E0D;&#x8FC7;&#x662F;&#xFF0C;&#x6625;&#x5929;&#x6700;&#x7EC8;&#x8FD8;&#x662F;&#x6210;&#x4E3A;&#x4E86;&#x51AC;&#x5929;&#x3002;</span><br><span class="line">&#x9ED8;&#x9ED8;&#x559C;&#x6B22;&#x4E86;&#x4E00;&#x5E74;&#x591A;&#xFF0C;&#x73B0;&#x5728;&#x8FD8;&#x662F;&#x559C;&#x6B22;&#x5979;&#xFF0C;&#x8FD8;&#x662F;&#x5E0C;&#x671B;&#x5979;&#x5B89;&#x597D;&#x3002;&#x201C;&#x6211;&#x544A;&#x8BC9;&#x4F60;&#x6211;&#x559C;&#x6B22;&#x4F60;&#xFF0C;&#x5E76;&#x4E0D;&#x662F;&#x4E00;&#x5B9A;&#x8981;&#x548C;&#x4F60;&#x5728;&#x4E00;&#x8D77;&#xFF0C;&#x53EA;&#x662F;&#x5E0C;&#x671B;&#x4ECA;&#x540E;&#x7684;&#x4F60;&#xFF0C;&#x5728;&#x906D;&#x9047;&#x4EBA;&#x751F;&#x4F4E;&#x8C37;&#x7684;&#x65F6;&#x5019;&#xFF0C;&#x4E0D;&#x8981;&#x7070;&#x5FC3;&#x81F3;&#x5C11;&#x66FE;&#x7ECF;&#x6709;&#x4EBA;&#x88AB;&#x4F60;&#x7684;&#x9B45;&#x529B;&#x6240;&#x5438;&#x5F15;&#xFF0C;&#x66FE;&#x7ECF;&#x662F;&#xFF0C;&#x4EE5;&#x540E;&#x4E5F;&#x4F1A;&#x662F;&#x3002;&#x201D;</span><br><span class="line">&#x53EF;&#x80FD;&#x662F;&#x6211;&#xFF0C;&#x8FD8;&#x4E0D;&#x591F;&#x4F18;&#x79C0;&#xFF0C;&#x53EA;&#x662F;&#x4E2A;&#x666E;&#x901A;&#x4EBA;&#x3002;</span><br><span class="line">&#x4F60;&#x662F;&#x4EBA;&#x95F4;&#x70DF;&#x706B;&#x4E0D;&#x81EA;&#x77E5;&#xFF0C;&#x6211;&#x5728;&#x4FD7;&#x4E16;&#x4EF0;&#x671B;&#x5E94;&#x5982;&#x662F;&#x3002;</span><br><span class="line"></span><br><span class="line">&#x6709;&#x65F6;&#x5173;&#x4E0D;&#x4E0A;&#x51B0;&#x7BB1;&#x7684;&#x95E8;&#xFF0C;&#x811A;&#x8DBE;&#x649E;&#x5230;&#x4E86;&#x684C;&#x817F;&#xFF0C;&#x4E34;&#x51FA;&#x95E8;&#x627E;&#x4E0D;&#x5230;&#x60F3;&#x8981;&#x7684;&#x4E1C;&#x897F;&#xFF0C;&#x7A81;&#x7136;&#x5FCD;&#x4E0D;&#x4F4F;&#x6389;&#x6CEA;&#x3002;&#x4F60;&#x89C9;&#x5F97;&#x5C0F;&#x9898;&#x5927;&#x4F5C;&#xFF0C;&#x53EA;&#x6709;&#x6211;&#x81EA;&#x5DF1;&#x77E5;&#x9053;&#x4E3A;&#x4EC0;&#x4E48;&#x3002;</span><br><span class="line"></span><br><span class="line">&#x6211;&#x6709;&#x7684;&#x53EA;&#x662F;&#x666E;&#x666E;&#x901A;&#x901A;&#x7684;&#x7279;&#x8D28;&#xFF0C;&#x4F46;&#x6211;&#x4E5F;&#x6709;&#x666E;&#x666E;&#x901A;&#x901A;&#x7684;&#x671F;&#x76FC;&#x3002;&#x6211;&#x666E;&#x901A;&#x5730;&#x671F;&#x76FC;&#x6211;&#x80FD;&#x6709;&#x4E2A;&#x597D;&#x6210;&#x7EE9;&#xFF0C;&#x666E;&#x901A;&#x5730;&#x671F;&#x76FC;&#x80FD;&#x5B66;&#x4F1A;&#x7B1B;&#x5B50;&#xFF0C;&#x666E;&#x901A;&#x5730;&#x671F;&#x76FC;&#x80FD;&#x6709;&#x4EFD;&#x624D;&#x827A;&#xFF0C;&#x666E;&#x901A;&#x5730;&#x671F;&#x76FC;&#x4E00;&#x4EFD;&#x666E;&#x901A;&#x7684;&#x7231;&#x60C5;&#x3002;</span><br><span class="line">&#x6211;&#x662F;&#x4E2A;&#x666E;&#x901A;&#x4EBA;&#xFF0C;&#x4E0D;&#x610F;&#x5473;&#x7740;&#x6211;&#x662F;&#x4E2A;&#x5E73;&#x5EB8;&#x4EBA;&#xFF0C;&#x6211;&#x4E5F;&#x6709;&#x666E;&#x901A;&#x4EBA;&#x7684;&#x6267;&#x7740;&#xFF0C;&#x666E;&#x901A;&#x4EBA;&#x7684;&#x7406;&#x60F3;&#x3002;&#x54EA;&#x4E2A;&#x666E;&#x901A;&#x4EBA;&#xFF0C;&#x4E0D;&#x6E34;&#x671B;&#x81EA;&#x5DF1;&#x80FD;&#x591F;&#x62FF;&#x5230;&#x534E;&#x6E05;&#x7279;&#x5956;&#x5462;&#xFF1F;&#x62FF;&#x4E0D;&#x62FF;&#x5F97;&#x5230;&#x662F;&#x4E00;&#x56DE;&#x4E8B;&#xFF0C;&#x4F46;&#x6709;&#x6CA1;&#x6709;&#x6E34;&#x671B;&#x662F;&#x53E6;&#x4E00;&#x56DE;&#x4E8B;&#xFF0C;&#x8FD9;&#x79CD;&#x6E34;&#x671B;&#xFF0C;&#x4E5F;&#x662F;&#x666E;&#x901A;&#x4EBA;&#x6240;&#x5177;&#x6709;&#x7684;&#x666E;&#x901A;&#x7684;&#x4E00;&#x65B9;&#x9762;&#xFF0C;&#x8C01;&#x4E0D;&#x60F3;&#x6709;&#x6240;&#x6210;&#x5C31;&#xFF0C;&#x6709;&#x6240;&#x5F97;&#x5230;&#x5462;&#xFF1F;</span><br><span class="line"></span><br><span class="line">&#x6211;&#x7528;&#x5C3D;&#x5168;&#x529B;&#xFF0C;&#x8FC7;&#x7740;&#x666E;&#x901A;&#x7684;&#x4E00;&#x751F;&#x3002; </span><br></pre></td></tr></table></figure>
<p>17&#x5929;&#x4E4B;&#x524D; <a href="https://closed.social/ordinary/?page=3&amp;per_page=20&amp;sort_by=time##"> 36</a></p>
<p>No. 93</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#x4E00;&#x4E2A;&#x5728;&#x6240;&#x8C13;&#x7684;&#x4EBA;&#x4E0A;&#x4EBA;&#x9662;&#x7CFB;&#x7684;&#x4EBA;&#x4E0B;&#x4EBA;</span><br><span class="line">&#x4E0A;&#x7740;&#x666E;&#x901A;&#x7684;&#x8BFE; &#x4EA4;&#x7740;&#x666E;&#x901A;&#x7684;&#x4F5C;&#x4E1A; &#x62FF;&#x7740;&#x666E;&#x901A;&#x7684;GPA</span><br><span class="line">&#x4E0D;&#x77E5;&#x9053;&#x4EC0;&#x4E48;&#x65F6;&#x5019;&#x5F00;&#x59CB;&#x611F;&#x5230;&#x671F;&#x5F85;&#x4E0E;&#x73B0;&#x5B9E;&#x7684;&#x843D;&#x5DEE;</span><br><span class="line">&#x53C8;&#x4E0D;&#x77E5;&#x9053;&#x5728;&#x4EC0;&#x4E48;&#x65F6;&#x5019;&#x63A5;&#x53D7;&#x4E86;&#x8FD9;&#x4E2A;&#x843D;&#x5DEE;</span><br></pre></td></tr></table></figure>
<p>17&#x5929;&#x4E4B;&#x524D; <a href="https://closed.social/ordinary/?page=3&amp;per_page=20&amp;sort_by=time##"> 10</a></p>
<p>No. 92</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#x5F53;&#x81EA;&#x5DF1;&#x80FD;&#x591F;&#x4EE5;&#x5E73;&#x5B9E;&#x770B;&#x5F85;&#x8363;&#x8A89;&#xFF0C;&#x770B;&#x5F85;&#x8D77;&#x4F0F;&#xFF0C;&#x770B;&#x5F85;&#x56F0;&#x96BE;&#x4E0E;&#x9519;&#x5931;&#xFF0C;&#x5C06;&#x7269;&#x6B32;&#x540D;&#x5229;&#x9762;&#x5B50;&#x58F3;&#x5B50;&#x90FD;&#x964D;&#x4F4E;&#x548C;&#x653E;&#x4E0B;&#xFF0C;&#x7136;&#x540E;&#x53D1;&#x89C9;&#x2014;&#x2014;</span><br><span class="line">&#x54C7;&#xFF0C;&#x778E;&#x6643;&#x8361;&#x95F2;&#x804A;&#x5929;&#x7A77;&#x5F00;&#x5FC3;&#x50BB;&#x4E50;&#x5475;&#x662F;&#x8FD9;&#x4E48;&#x5766;&#x8361;&#x8361;&#x7684;&#x771F;&#x5B9E;&#x7684;&#x7545;&#x5FEB;&#x4E0E;&#x5FEB;&#x4E50;&#x554A;&#x3002;</span><br><span class="line">&#x5728;&#x56ED;&#x5B50;&#x91CC;&#x51E0;&#x5E74;&#xFF0C;&#x6700;&#x6696;&#x878D;&#x878D;&#x6026;&#x6026;&#x8DC3;&#x52A8;&#x4E8E;&#x5FC3;&#x7684;&#xFF0C;&#x662F;&#x4F5C;&#x4E3A;&#x4E2A;&#x4F53;&#x5BF9;&#x4E00;&#x4E2A;&#x5730;&#x65B9;&#x7684;&#x4E61;&#x6101;&#x548C;&#x4E00;&#x4EFD;&#x5DE5;&#x4F5C;&#x7684;&#x516C;&#x5FC3;&#xFF0C;&#x6536;&#x83B7;&#x7740;&#x5728;&#x65F6;&#x5149;&#x4E4B;&#x4E2D;&#x4E0D;&#x65AD;&#x6C89;&#x6DC0;&#x7684;&#x81EA;&#x6211;&#x4EE5;&#x53CA;&#x4E0E;&#x4EBA;&#x4E4B;&#x95F4;&#x771F;&#x631A;&#x800C;&#x7F8E;&#x597D;&#x7684;&#x60C5;&#x8C0A;&#x3002;</span><br><span class="line">&#x52AA;&#x529B;&#x65F6;&#x5766;&#x7136;&#x52AA;&#x529B;&#xFF0C;&#x5E9F;&#x67F4;&#x65F6;&#x54B8;&#x9C7C;&#x8EBA;&#x5E73;&#x3002;&#x770B;&#x4E66;&#x9875;&#x4E0E;&#x770B;&#x6811;&#x53F6;&#xFF0C;&#x90FD;&#x662F;&#x5728;&#x597D;&#x597D;&#x73CD;&#x60DC;&#x81EA;&#x5DF1;&#x7684;&#x8FD9;&#x4E00;&#x573A;&#x4EBA;&#x751F;&#x4E2D;&#x7684;&#x5C81;&#x6708;&#x3002;&#x7B80;&#x5386;&#x4E0A;&#x7684;&#x8363;&#x8A89;&#xFF0C;&#x53EA;&#x662F;&#x4E9B;&#x8BB8;&#x7ED3;&#x679C;&#xFF1B;&#x771F;&#x5B9E;&#x7684;&#x5185;&#x5728;&#x7684;&#x81EA;&#x5DF1;&#xFF0C;&#x662F;&#x5728;&#x4E8E;&#x90A3;&#x4E9B;&#x8BA9;&#x81EA;&#x5DF1;&#x6210;&#x4E3A;&#x81EA;&#x5DF1;&#x7684;&#x539F;&#x56E0;&#xFF0C;&#x4EE5;&#x53CA;&#x5728;&#x7ECF;&#x5386;&#x4E4B;&#x4E2D;&#x6709;&#x8FC7;&#x7684;&#x5FC3;&#x60C5;&#x3002;</span><br><span class="line">&#x5982;&#x679C;&#x4F60;&#x613F;&#x610F;&#x770B;&#x770B;&#x6211;&#x6240;&#x6B23;&#x559C;&#x7684;&#x98CE;&#x666F;&#xFF0C;&#x6211;&#x4F1A;&#x5F88;&#x96C0;&#x8DC3;&#x5730;&#x5C06;&#x5B83;&#x6307;&#x4E0E;&#x4F60;&#x3002;</span><br><span class="line">&#x5982;&#x679C;&#x4F60;&#x613F;&#x4E0E;&#x6211;&#x4EA4;&#x8C08;&#xFF0C;&#x8BF7;&#x4E0E;&#x6211;&#x4E00;&#x8D77;&#x9759;&#x9759;&#x6B23;&#x8D4F;&#x7247;&#x523B;&#xFF0C;&#x4E66;&#x684C;&#x4E0A;&#x6591;&#x9A73;&#x6447;&#x66F3;&#x7684;&#x3001;&#x7A97;&#x5916;&#x6811;&#x53F6;&#x63A9;&#x6620;&#x7684;&#x5149;&#x5427;&#x3002;</span><br><span class="line">&#x505A;&#x4E2A;&#x5E73;&#x5E38;&#x7684;&#x5C0F;&#x5B69;&#xFF0C;&#x6709;&#x80FD;&#x529B;&#x4E0D;&#x60DC;&#x529B;&#xFF0C;&#x6709;&#x60C5;&#x6000;&#x6709;&#x8111;&#x7B4B;&#x3002;</span><br><span class="line">&#x751F;&#x6D3B;&#x7684;&#x672C;&#x771F;&#xFF0C;&#x90FD;&#x5728;&#x7EC6;&#x5FAE;&#x5904;&#x5440;&#x3002;</span><br><span class="line">&#x56ED;&#x5B50;&#x91CC;&#x7684;&#x98CE;&#x666F;&#xFF0C;&#x56DB;&#x65F6;&#x53D8;&#x5E7B;&#xFF0C;&#x5E38;&#x65B0;&#x3002;&#x5E38;&#x4E50;&#x3002;</span><br><span class="line">&#x4E0D;&#x820D;&#x7231;&#x4E0E;&#x52C7;&#x3002;</span><br></pre></td></tr></table></figure>
<p>17&#x5929;&#x4E4B;&#x524D; <a href="https://closed.social/ordinary/?page=3&amp;per_page=20&amp;sort_by=time##"> 47</a></p>
<p>No. 91</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#x770B;&#x4E86;&#x5927;&#x5BB6;&#x7684;&#x6545;&#x4E8B;&#xFF0C;&#x597D;&#x50CF;&#x201C;&#x666E;&#x901A;&#x201D;&#x5C31;&#x662F;&#x5B66;&#x4E60;&#x3001;&#x79D1;&#x7814;&#x3001;&#x793E;&#x5DE5;&#x3001;&#x4F53;&#x80B2;&#x3001;&#x604B;&#x7231;&#x6837;&#x6837;&#x4E0D;&#x884C;&#x3002;&#x6211;&#x5012;&#x89C9;&#x5F97;&#xFF0C;&#x5982;&#x679C;&#x201C;&#x666E;&#x901A;&#x201D;&#x662F;&#x4E00;&#x79CD;&#x81EA;&#x6211;&#x611F;&#x53D7;&#x7684;&#x8BDD;&#xFF0C;&#x90A3;&#x53EF;&#x80FD;&#x5728;&#x6E05;&#x534E;&#x5927;&#x591A;&#x6570;&#x4EBA;&#x90FD;&#x89C9;&#x5F97;&#x81EA;&#x5DF1;&#x633A;&#x201C;&#x666E;&#x901A;&#x201D;&#x7684;&#xFF0C;&#x4E0D;&#x7BA1;&#x4ED6;&#x8EAB;&#x4E0A;&#x6709;&#x591A;&#x5C11;&#x5149;&#x73AF;&#x52A0;&#x6210;&#xFF0C;&#x56E0;&#x4E3A;&#x4ED6;&#x603B;&#x80FD;&#x5728;&#x522B;&#x4EBA;&#x8EAB;&#x4E0A;&#x770B;&#x5230;&#x6BD4;&#x81EA;&#x5DF1;&#x4F18;&#x79C0;&#x7684;&#x65B9;&#x9762;&#xFF08;&#x5305;&#x62EC;&#x4F46;&#x4E0D;&#x9650;&#x4E8E;&#x4EE5;&#x4E0A;&#x4E94;&#x7C7B;&#xFF09;&#x3002;&#x5982;&#x679C;&#x201C;&#x666E;&#x901A;&#x201D;&#x662F;&#x4E00;&#x79CD;&#x5916;&#x754C;&#x7684;&#x8BC4;&#x4EF7;&#x7684;&#x8BDD;&#xFF0C;&#x4EBA;&#x4EBA;&#x53C8;&#x90FD;&#x4E0D;&#x201C;&#x666E;&#x901A;&#x201D;&#xFF0C;&#x56E0;&#x4E3A;&#x5927;&#x5BB6;&#x6216;&#x591A;&#x6216;&#x5C11;&#x5728;&#x6E05;&#x534E;&#x6709;&#x81EA;&#x5DF1;&#x72EC;&#x6709;&#x7684;&#x4F53;&#x9A8C;&#x3001;&#x6536;&#x83B7;&#x3001;&#x6210;&#x957F;&#xFF0C;&#x4E0D;&#x7BA1;&#x662F;&#x6781;&#x9AD8;&#x7684;GPA&#x3001;&#x4E30;&#x7855;&#x7684;&#x79D1;&#x7814;&#x6210;&#x679C;&#x8FD8;&#x662F;&#x53D1;&#x73B0;&#x4E86;&#x81EA;&#x5DF1;&#x771F;&#x6B63;&#x7684;&#x5174;&#x8DA3;&#x7231;&#x597D;&#x3002;&#x6211;&#x5F88;&#x60CA;&#x5947;&#x4E5F;&#x5F88;&#x5E86;&#x5E78;&#x6CA1;&#x6709;&#x8F85;&#x5BFC;&#x5458;&#x5728;&#x6211;&#x5165;&#x5B66;&#x65F6;&#x544A;&#x8BC9;&#x6211;&#x662F;&#x8981;&#x4ECE;&#x54EA;&#x4E94;&#x4E2A;&#x91CC;&#x9762;&#x9009;&#x62E9;&#x4E24;&#x4E2A;&#xFF0C;&#x5176;&#x5B9E;&#x6211;&#x4EEC;&#x90FD;&#x53EF;&#x4EE5;&#x5B9A;&#x4E49;&#x81EA;&#x5DF1;&#x7684;&#x201C;&#x666E;&#x901A;&#x800C;&#x53C8;&#x4E0D;&#x666E;&#x901A;&#x201D;&#x7684;&#x6E05;&#x534E;&#x751F;&#x6D3B;&#x3002;</span><br></pre></td></tr></table></figure>
<p>17&#x5929;&#x4E4B;&#x524D; <a href="https://closed.social/ordinary/?page=3&amp;per_page=20&amp;sort_by=time##"> 16</a></p>
<p>No. 90</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#x666E;&#x901A;&#x7684;&#x6211;&#x809D;&#x7740;&#x666E;&#x901A;&#x5316;&#x5B66;&#x539F;&#x7406;&#x7684;&#x4F5C;&#x4E1A;&#x671B;&#x7740;&#x5403;&#x7070;&#x7684;&#x666E;&#x901A;&#x751F;&#x7269;&#x5B66;&#x51FA;&#x795E;.</span><br><span class="line">&#x672C;&#x6765;&#x8FD9;&#x5C31;&#x662F;&#x7B54;&#x6848;&#x4E86;...</span><br><span class="line">&#x540E;&#x6765;&#x662F;&#x666E;&#x901A;&#x5230;&#x9A8C;&#x8BC1;&#x9898;&#x4E0D;&#x77E5;&#x9053;&#x7B54;&#x6848;,&#x8FDE;&#x8BD5;&#x4E94;&#x6B21;&#x8FBE;&#x5230;&#x4E0A;&#x9650;...</span><br></pre></td></tr></table></figure>
<p>17&#x5929;&#x4E4B;&#x524D; <a href="https://closed.social/ordinary/?page=3&amp;per_page=20&amp;sort_by=time##"> 15</a></p>
<p>No. 89</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#x6211;&#x6709;&#x4E00;&#x4E2A;&#x5FF5;&#x5934;</span><br><span class="line">&#x5728;&#x8377;&#x5858;&#x6708;&#x8272;&#x7684;&#x6708;&#x8272;&#x91CC;&#x5347;&#x4E0A;&#x6765;</span><br><span class="line">&#x6211;&#x7684;&#x5FF5;&#x5934;&#x662F;&#x62E5;&#x6709;&#x4E00;&#x4E2A;&#x666E;&#x901A;&#x4EBA;&#x7684;&#x5FEB;&#x4E50;</span><br><span class="line">&#x6709;&#x5750;&#x770B;&#x4E91;&#x6735;&#x6162;&#x7B49;&#x98CE;&#x6765;&#x7684;&#x5FEB;&#x4E50;</span><br><span class="line">&#x6709;&#x771F;&#x5B9E;&#x7684;&#x5EB8;&#x5E38;&#x7684;&#x826F;&#x5584;&#x7684;&#x5FEB;&#x4E50;</span><br><span class="line">&#x4E8E;&#x662F;&#xFF0C;&#x6211;&#x60F3;&#x505A;&#x4E00;&#x4E2A;&#x8BD7;&#x4EBA;</span><br><span class="line">&#x6709;&#x52B3;&#x7EE9;&#x4E5F;&#x6709;&#x8BD7;&#x610F;</span><br><span class="line">&#x6B64;&#x65F6;&#x5927;&#x6982;&#x6211;&#x7684;&#x56ED;&#x5B50;&#x5C31;&#x4E00;&#x76F4;&#x662F;&#x8FD9;&#x6837;&#x4E86;&#x5427;&#xFF1A;</span><br><span class="line">&#x8349;&#x6728;&#x4E30;&#x8302;&#xFF0C;&#x6C34;&#x6D41;&#x6E05;&#x6E5B;</span><br><span class="line">&#x6D6E;&#x5824;&#x6708;&#x5706;&#xFF0C;&#x85E4;&#x8513;&#x8377;&#x58F0;</span><br><span class="line">&#x6625;&#x590F;&#x79CB;&#x51AC;&#xFF0C;&#x69DB;&#x5916;&#x5C71;&#x5149;</span><br><span class="line">&#x4E1C;&#x897F;&#x5357;&#x5317;&#xFF0C;&#x7A97;&#x4E2D;&#x4E91;&#x5F71;</span><br><span class="line">&#x4E00;&#x6C60;&#x6D9F;&#x6F2A;&#xFF0C;&#x4E00;&#x69AD;&#x82B3;&#x534E;</span><br><span class="line">&#x8F7B;&#x96D5;&#x65F6;&#x5C81;&#xFF0C;&#x5FC3;&#x664F;&#x5929;&#x5B81;</span><br></pre></td></tr></table></figure>
<p>17&#x5929;&#x4E4B;&#x524D; <a href="https://closed.social/ordinary/?page=3&amp;per_page=20&amp;sort_by=time##"> 37</a></p>
<p>No. 88</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#x7279;&#x666E;&#x901A;&#x7684;&#x6211;&#xFF0C;&#x81EA;&#x8350;&#x53EA;&#x662F;&#x7FA1;&#x6155;&#x7740;&#x7279;&#x666E;&#x901A;&#x5956;&#x4E5F;&#x6709;&#x7740;&#x7279;&#x5956;&#x7684;&#x7F29;&#x5199;&#xFF0C;&#x4F53;&#x9A8C;&#x4E00;&#x6B21;&#x201C;&#x7279;&#x5956;&#x201D;&#x7684;&#x63D0;&#x540D;&#x5427;&#x3002;</span><br></pre></td></tr></table></figure>
<p>No. 87</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#x666E;&#x901A;&#x7684;&#x4EBA;&#x6D3B;&#x5728;&#x666E;&#x901A;&#x7684;&#x5B66;&#x6821;&#xFF0C;&#x5374;&#x88AB;&#x5916;&#x754C;&#x7684;&#x5149;&#x73AF;&#x903C;&#x8FD1;&#x6DF1;&#x6E0A;&#x3002;</span><br></pre></td></tr></table></figure>
<p>17&#x5929;&#x4E4B;&#x524D; <a href="https://closed.social/ordinary/?page=4&amp;per_page=20&amp;sort_by=time##"> 17</a></p>
<p>No. 86</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#x770B;&#x4E86;&#x9AD8;&#x8D5E;&#x56DE;&#x7B54;&#xFF0C;&#x51E0;&#x4E4E;&#x6E05;&#x4E00;&#x8272;&#x7684;&#x90FD;&#x662F;&#x5B66;&#x5F97;&#x5F88;&#x7D2F;&#x3001;&#x6210;&#x7EE9;&#x4E00;&#x822C;&#x3001;&#x6CA1;&#x6709;&#x793E;&#x5DE5;&#x3001;&#x6CA1;&#x6709;&#x79D1;&#x7814;blabla</span><br><span class="line">&#x6240;&#x4EE5;&#x4EC0;&#x4E48;&#x65F6;&#x5019;&#x8FDE;&#x201C;&#x666E;&#x901A;&#x201D;&#x90FD;&#x6709;&#x4E00;&#x4E2A;&#x8303;&#x5F0F;&#x4E86;&#xFF1F;&#x96BE;&#x9053;&#x201C;&#x666E;&#x901A;&#x201D;&#x4E0D;&#x5E94;&#x8BE5;&#x662F;&#x81EA;&#x5DF1;&#x5BF9;&#x81EA;&#x5DF1;&#x671F;&#x5F85;&#x503C;&#x7684;&#x5747;&#x503C;&#x3001;&#x662F;&#x56E0;&#x4EBA;&#x800C;&#x5F02;&#x7684;&#x5417;&#xFF1F;&#x8981;&#x662F;&#x201C;&#x666E;&#x901A;&#x201D;&#x4E5F;&#x6709;&#x8303;&#x5F0F;&#xFF0C;&#x90A3;&#x6E05;&#x534E;&#x5B66;&#x751F;&#x5728;&#x5916;&#x4EBA;&#x770B;&#x6765;&#x4E0D;&#x90FD;&#x662F;&#x201C;&#x4E0D;&#x666E;&#x901A;&#x201D;&#x7684;&#x5417;&#xFF1F;&#x6362;&#x53E5;&#x8BDD;&#x8BF4;&#xFF0C;&#x5982;&#x679C;&#x7279;&#x5956;&#x89C9;&#x5F97;&#x81EA;&#x5DF1;&#x8FD8;&#x53EF;&#x4EE5;&#x66F4;&#x5F3A;&#xFF0C;&#x90A3;&#x4E3A;&#x4EC0;&#x4E48;&#x7279;&#x5956;&#x4E0D;&#x80FD;&#x540C;&#x65F6;&#x662F;&#x7279;&#x666E;&#x901A;&#x5956;&#xFF1F;</span><br><span class="line">&#x8FD8;&#x6709;&#xFF0C;&#x6709;&#x4E9B;&#x56DE;&#x7B54;&#x89C9;&#x5F97;&#x81EA;&#x5DF1;&#x4E0D;&#x5982;&#x522B;&#x4EBA;&#x3001;&#x89C9;&#x5F97;&#x81EA;&#x5DF1;&#x5F88;&#x5931;&#x8D25;&#xFF0C;&#x751A;&#x81F3;&#x56E0;&#x6B64;&#x6291;&#x90C1;&#x3002;&#x8FD9;&#x4E0D;&#x53EB;&#x201C;&#x666E;&#x901A;&#x201D;&#xFF0C;&#x8FD9;&#x53EB;&#x201C;&#x4E27;&#x201D;&#xFF08;&#x6211;&#x8BF4;&#x5F97;&#x6BD4;&#x8F83;&#x76F4;&#xFF0C;&#x6291;&#x90C1;&#x75C7;&#x60A3;&#x8005;&#x786E;&#x5B9E;&#x662F;&#x4E00;&#x4E2A;&#x975E;&#x5E38;&#x9700;&#x8981;&#x5173;&#x7167;&#x7684;&#x7FA4;&#x4F53;&#xFF0C;&#x4F46;&#x4E0D;&#x5E94;&#x8BE5;&#x88AB;&#x89C6;&#x4E3A;&#x5E38;&#x6001;&#x800C;&#x88AB;&#x5B9A;&#x4E49;&#x6210;&#x201C;&#x666E;&#x901A;&#x201D;&#xFF09;&#x3002;&#x5916;&#x4EBA;&#x4F1A;&#x8BF4;&#x201C;&#x4F60;&#x90FD;&#x4E0A;&#x6E05;&#x534E;&#x4E86;&#x8FD8;&#x6291;&#x90C1;&#x4E2A;&#x5C41;&#x201D;&#xFF0C;&#x4F60;&#x53EF;&#x80FD;&#x4F1A;&#x89C9;&#x5F97;&#x4ED6;&#x4EEC;&#x65E0;&#x6CD5;&#x7406;&#x89E3;&#x4F60;&#x7684;&#x538B;&#x529B;&#xFF0C;&#x5C31;&#x8DDF;&#x7279;&#x5956;&#x6574;&#x5929;&#x8BF4;&#x81EA;&#x5DF1;&#x83DC;&#x3001;&#x89C9;&#x5F97;&#x4F60;&#x7406;&#x89E3;&#x4E0D;&#x4E86;TA&#x4E00;&#x6837;&#xFF08;&#x5F53;&#x7136;&#x4E0D;&#x6392;&#x9664;&#x6709;&#x4E9B;&#x4EBA;&#x662F;&#x4E3A;&#x4E86;&#x88C5;&#x903C;&#x8BF4;&#x81EA;&#x5DF1;&#x83DC;&#xFF09;&#x3002;&#x81EA;&#x5DF1;&#x5F00;&#x5FC3;&#x5C31;&#x597D;&#xFF0C;&#x6574;&#x5929;&#x770B;&#x522B;&#x4EBA;&#x591A;&#x5389;&#x5BB3;&#x8DDF;&#x522B;&#x4EBA;&#x6BD4;&#x6765;&#x6BD4;&#x53BB;&#x7684;&#x6709;&#x5565;&#x610F;&#x601D;</span><br><span class="line">&#x6240;&#x4EE5;&#x6211;&#x7406;&#x89E3;&#x7684;&#x666E;&#x901A;&#xFF0C;&#x662F;&#x6211;&#x6210;&#x7EE9;&#x53EF;&#x80FD;&#x5F88;&#x5DEE;&#x3001;&#x4F46;&#x5728;&#x6E05;&#x534E;&#x5B66;&#x4E60;&#x7684;&#x8FC7;&#x7A0B;&#x4E2D;&#x6709;&#x6240;&#x6536;&#x83B7;&#xFF1B;&#x6211;&#x53EF;&#x80FD;&#x4E0D;&#x662F;&#x5B66;&#x751F;&#x5E72;&#x90E8;&#xFF0C;&#x4F46;&#x670D;&#x52A1;&#x540C;&#x5B66;&#x7684;&#x65F6;&#x5019;&#x4EA4;&#x5230;&#x4E86;&#x4E0D;&#x5C11;&#x670B;&#x53CB;&#xFF1B;&#x6211;&#x4E5F;&#x8BB8;&#x6CA1;&#x6709;&#x79D1;&#x7814;&#x6210;&#x679C;&#xFF0C;&#x4F46;&#x627E;&#x5230;&#x4E86;&#x81EA;&#x5DF1;&#x559C;&#x6B22;&#x7684;&#x4E8B;&#x60C5;&#x751A;&#x81F3;&#x4E8B;&#x4E1A;&#xFF1B;&#x6211;&#x6BCF;&#x5929;&#x4ECE;&#x65E9;&#x5FD9;&#x5230;&#x665A;&#xFF0C;&#x4F46;&#x4E0D;&#x7BA1;&#x6211;&#x662F;&#x5728;&#x6BD5;&#x4E1A;&#x7684;&#x8FB9;&#x7F18;&#x6323;&#x624E;&#x3001;&#x8FD8;&#x662F;&#x4E3A;&#x9662;&#x58EB;&#x8BFA;&#x5956;&#x800C;&#x594B;&#x6597;&#xFF0C;&#x90FD;&#x59CB;&#x7EC8;&#x5BF9;&#x751F;&#x6D3B;&#x5145;&#x6EE1;&#x70ED;&#x60C5;</span><br></pre></td></tr></table></figure>
<p>17&#x5929;&#x4E4B;&#x524D; <a href="https://closed.social/ordinary/?page=4&amp;per_page=20&amp;sort_by=time##"> 112</a></p>
<p>No. 85</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#x666E;&#x901A;&#x5230;&#x770B;&#x5230;&#x8FD9;&#x4E2A;&#x9898;&#x76EE; &#x60F3;&#x4E0D;&#x51FA;&#x4E00;&#x53E5;&#x8BDD;&#x6765;</span><br></pre></td></tr></table></figure>
<p>17&#x5929;&#x4E4B;&#x524D; <a href="https://closed.social/ordinary/?page=4&amp;per_page=20&amp;sort_by=time##"> 20</a></p>
<p>No. 84</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#x666E;&#x901A;&#x4F46;&#x8BA4;&#x771F;&#x5730;&#x751F;&#x6D3B;</span><br><span class="line">&#x4E0D;&#x7761;&#x591F;&#x516B;&#x5C0F;&#x65F6;&#x5C31;&#x4EBA;&#x90FD;&#x4E0D;&#x884C;&#x4E86;</span><br><span class="line">&#xFF08;&#x5728;&#x56DB;&#x53F7;&#x7EBF;&#x4E0A;&#x6CA1;&#x6709;&#x4F4D;&#x7F6E;&#x8E72;&#x5728;&#x5730;&#x4E0A;&#x7761;&#x7740;&#x4E86;&#xFF09;</span><br><span class="line">&#x8270;&#x96BE;&#x82B1;&#x4E86;&#x597D;&#x591A;&#x65F6;&#x95F4;&#x600E;&#x4E48;&#x4E5F;&#x770B;&#x4E0D;&#x61C2;&#x6750;&#x6599;&#x8FD9;&#x6837;&#x6323;&#x624E;&#x4E4B;&#x540E;&#x4E5F;&#x624D;&#x53CA;&#x683C;&#x7684;&#x5C0F;&#x4F5C;&#x4E1A;</span><br><span class="line">&#x591A;&#x5230;&#x4E0D;&#x884C;&#x7684;&#x5404;&#x79CD;&#x5FAE;&#x4FE1;&#x7FA4;&#x548C;&#x4F11;&#x606F;&#x4E4B;&#x95F4;&#x5C4F;&#x853D;&#x6240;&#x6709;&#x7FA4;&#x804A; &#x7136;&#x540E;&#x7126;&#x8651;&#x5730;&#x6253;&#x5F00;b&#x7AD9;&#x77E5;&#x4E4E;</span><br><span class="line">&#x6BCF;&#x5929;&#x597D;&#x5FD9;&#x5728;&#x9E21;&#x96F6;&#x72D7;&#x788E;&#x7684;&#x4E8B;&#x60C5;</span><br><span class="line">&#x6BCF;&#x5929;&#x5B9A;to do list &#x7136;&#x540E;&#x770B;flag&#x5012;&#x4E0B;</span><br><span class="line">&#x96BE;&#x53D7;&#x7684;&#x65F6;&#x5019; &#x4E0D;&#x6562;&#x5BF9;&#x670B;&#x53CB;&#x53EA;&#x80FD;&#x5BF9;&#x7236;&#x6BCD;&#x543C;&#x4E00;&#x543C;</span><br><span class="line">&#x5634;&#x4E0A;&#x6302;&#x7740;&#x5377;&#x5377;&#x5377; &#x5374;&#x4E00;&#x52A8;&#x4E0D;&#x52A8;</span><br><span class="line">&#x4E00;&#x632B;&#x5C31;&#x9981;&#xFF0C;&#x624D;&#x80DC;&#x4FBF;&#x9A84;</span><br><span class="line">&#x5269;&#x4E0B;&#x7684;</span><br><span class="line">&#x666E;&#x901A;&#x5230;&#x6CA1;&#x6709;&#x5566;</span><br><span class="line"></span><br><span class="line">&#x4F46;&#x662F;&#x2014;&#x2014;</span><br><span class="line">&#x6BCF;&#x5468;&#x51FA;&#x53BB;&#x770B;&#x4E24;&#x4E09;&#x6B21;&#x5C55;&#x548C;&#x6F14;&#x51FA;</span><br><span class="line">&#x6BCF;&#x5468;&#x5199;&#x8BD7;</span><br><span class="line">&#x6BCF;&#x5468;&#x548C;&#x7231;&#x7684;&#x4EBA;&#x804A;&#x5929;</span><br><span class="line">&#x6BCF;&#x5468;&#x518D;&#x52AA;&#x529B;&#x505A;&#x4E00;&#x4EF6;&#x65B0;&#x7684;&#x4E8B;</span><br><span class="line">&#x89C1;&#x4E00;&#x4E2A;&#x65B0;&#x7684;&#x4EBA;</span><br><span class="line">&#x6BCF;&#x5468;&#x5728;&#x52AA;&#x529B;&#x5403;&#x65E9;&#x996D;</span><br><span class="line">&#x6BCF;&#x5468;&#x5728;&#x7528;&#x5FC3;&#x7231;&#x8FD9;&#x4E2A;&#x56ED;&#x5B50;&#x548C;&#x4E16;&#x754C;</span><br><span class="line"></span><br><span class="line">&#x4F46;&#x8FD9;&#x6837;&#x7684;&#x5C0F;&#x79EF;&#x6781;&#x53C8;&#x975E;&#x5E38;&#x5BB9;&#x6613;&#x5D29;&#x6E83;&#xFF1A;&#xFF09;</span><br><span class="line"></span><br><span class="line">&#x666E;&#x901A;&#x5730;&#x9000;&#x51FA;&#x60F9;</span><br></pre></td></tr></table></figure>
<p>17&#x5929;&#x4E4B;&#x524D; <a href="https://closed.social/ordinary/?page=4&amp;per_page=20&amp;sort_by=time##"> 34</a></p>
<p>No. 83</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#x4EBA;&#x6587;&#x793E;&#x4F1A;&#x5927;&#x7C7B;&#x516B;&#x5B57;&#x73ED;&#x5B66;&#x751F;&#xFF0C;&#x5927;&#x4E00;&#x4E0B;&#x5206;&#x6D41;&#x9009;&#x4E86;&#x793E;&#x4F1A;&#x5B66;&#x7CFB;&#xFF0C;&#x4F46;&#x56E0;&#x9648;&#x8FF0;&#x592A;&#x8FC7;&#x77EB;&#x60C5;&#xFF0C;&#x9762;&#x8BD5;&#x7B54;&#x5F97;&#x725B;&#x5934;&#x4E0D;&#x5BF9;&#x9A6C;&#x5634;&#xFF0C;&#x60E8;&#x906D;&#x62D2;&#x7EDD;&#x5206;&#x6D41;&#x6ED1;&#x6863;&#xFF0C;&#x6B7B;&#x7F20;&#x70C2;&#x6253;&#x5730;&#x4EA4;&#x4E86;&#x8F6C;&#x4E13;&#x4E1A;&#x7533;&#x8BF7;&#xFF0C;&#x88AB;&#x7CFB;&#x4E3B;&#x4EFB;&#x7EA6;&#x8C08;&#x3002;</span><br><span class="line">&#x6267;&#x610F;&#x4E0D;&#x9000;&#x5FAE;&#x79EF;&#x5206;&#x60F3;&#x901E;&#x4E00;&#x628A;&#x82F1;&#x96C4;&#xFF0C;&#x7ED3;&#x679C;&#x6302;&#x79D1;&#x4E86;&#x3002;</span><br><span class="line">&#x5927;&#x4E8C;&#x4E00;&#x5E74;&#x6CA1;&#x4E0A;&#x4E13;&#x4E1A;&#x8BFE;&#xFF0C;&#x628A;&#x793E;&#x4F1A;&#x5B66;&#x7CFB;&#x5F00;&#x7684;&#x8BFE;&#x51E0;&#x4E4E;&#x4E00;&#x8282;&#x4E0D;&#x843D;&#x5168;&#x4E0A;&#x4E86;&#xFF0C;&#x5927;&#x4E8C;&#x4E0B;&#x8F6C;&#x4E13;&#x4E1A;&#x7EBF;&#x4E0A;&#x9762;&#x8BD5;&#x7684;&#x524D;&#x4E00;&#x5929;&#x7535;&#x8111;&#x6444;&#x50CF;&#x5934;&#x574F;&#x4E86;&#x3002;&#x793E;&#x4F1A;&#x5B66;&#x7CFB;&#x8F6C;&#x4E13;&#x4E1A;&#x4E94;&#x4E2A;&#x4EBA;&#x7533;&#x8BF7;&#x53EA;&#x5F55;&#x53D6;&#x56DB;&#x4E2A;&#x4EBA;&#xFF0C;&#x6211;&#x518D;&#x6B21;&#x88AB;&#x8E22;&#x4E86;&#x51FA;&#x6765;&#x3002;</span><br><span class="line">&#x7F51;&#x8BFE;&#x5C1D;&#x8BD5;&#x91CD;&#x4FEE;&#x5FAE;&#x79EF;&#x5206;&#xFF0C;&#x56E0;&#x5B9E;&#x5728;&#x5B66;&#x4E0D;&#x4F1A;&#x671F;&#x4E2D;&#x9000;&#x8BFE;&#x8DD1;&#x8DEF;&#x4E86;&#x3002;</span><br><span class="line">&#x8FD9;&#x5B66;&#x671F;&#x91CD;&#x5934;&#x5F00;&#x59CB;&#x4FEE;&#x4E13;&#x4E1A;&#x8BFE;&#xFF0C;&#x4F46;&#x56E0;&#x4E3A;&#x4E00;&#x95E8;&#x4E5F;&#x4E0A;&#x4E0D;&#x4E0B;&#x53BB;&#x6B63;&#x5728;&#x8003;&#x8651;&#x4F11;&#x5B66;&#x3002;&#x4E24;&#x5E74;&#x6765;&#x5728;&#x6821;&#x56ED;&#x91CC;&#x51E0;&#x4E4E;&#x4ECE;&#x672A;&#x548C;&#x4EBA;&#x804A;&#x8FC7;&#x5B66;&#x672F;&#x95EE;&#x9898;&#x3002;</span><br><span class="line">&#x6211;&#x4EEC;&#x5728;&#x8FD9;&#x91CC;&#x7559;&#x4E0B;&#x4E00;&#x4E9B;&#x8BDD;&#xFF0C;&#x67D0;&#x79CD;&#x610F;&#x4E49;&#x4E0A;&#x6765;&#x8BF4;&#xFF0C;&#x662F;&#x5426;&#x662F;&#x5728;&#x4E3A;&#x81EA;&#x5DF1;&#x7684;&#x5E73;&#x5EB8;&#x6D17;&#x8131;&#x6C61;&#x540D;&#xFF1F;&#x4F46;&#x53C8;&#x662F;&#x8C01;&#x5F20;&#x7259;&#x821E;&#x722A;&#x5730;&#x628A;&#x6211;&#x4EEC;&#x62C9;&#x626F;&#x8FDB;&#x4E00;&#x573A;&#x4E0D;&#x8BB2;&#x7406;&#x7684;&#x5206;&#x5C42;&#x6E38;&#x620F;&#x3001;&#x86EE;&#x6A2A;&#x5730;&#x5B9A;&#x4E49;&#x4E86;&#x4F55;&#x4E3A;&#x5E73;&#x5EB8;&#x548C;&#x5931;&#x8D25;&#x5462;&#xFF1F;&#x4F60;&#x9700;&#x4EE5;&#x8089;&#x8EAB;&#x62B5;&#x6297;&#x6765;&#x81EA;&#x7CFB;&#x7EDF;&#x7684;&#x538B;&#x529B;&#x548C;&#x65E5;&#x5E38;&#x91CC;&#x5076;&#x7136;&#x7684;&#x4E0D;&#x5E78;&#xFF0C;&#x4E00;&#x79CD;&#x826F;&#x597D;&#x751F;&#x6D3B;&#x7684;&#x9738;&#x6743;&#x8FD8;&#x5728;&#x65F6;&#x65F6;&#x523B;&#x523B;&#x538B;&#x7740;&#x4F60;&#x3002;&#x8FDB;&#x6B65;&#x7684;&#x5927;&#x706B;&#x8F66;&#x547C;&#x5578;&#x9A76;&#x8FC7;&#x6765;&#xFF0C;&#x6240;&#x89C1;&#x5373;&#x662F;&#x5168;&#x7136;&#x7684;&#x5149;&#x660E;&#xFF0C;&#x6B8A;&#x4E0D;&#x77E5;&#x603B;&#x6709;&#x4EBA;&#x6070;&#x597D;&#x8EBA;&#x5728;&#x94C1;&#x8F68;&#x4E0A;&#x7684;&#x9634;&#x5F71;&#x91CC;&#xFF0C;&#x52A8;&#x5F39;&#x4E0D;&#x5F97;&#x3002;</span><br><span class="line">&#x6211;&#x4EEC;&#x8FD8;&#x5728;&#x88AB;&#x8FD9;&#x6837;&#x4E00;&#x79CD;&#x77DB;&#x76FE;&#x6495;&#x626F;&#x7740;&#xFF0C;&#x5E08;&#x957F;&#x4EEC;&#x603B;&#x8A00;&#x6211;&#x4EEC;&#x5E74;&#x8F7B;&#xFF0C;&#x5403;&#x5F97;&#x4E0B;&#x66F4;&#x591A;&#x82E6;&#xFF0C;&#x597D;&#x4E8B;&#x4E0D;&#x6015;&#x665A;&#xFF1B;&#x540C;&#x65F6;&#x53C8;&#x88AB;&#x6559;&#x8BAD;&#x7740;&#x8981;&#x505A;&#x7A33;&#x59A5;&#x7684;&#x9009;&#x62E9;&#xFF0C;&#x9009;&#x62E9;&#x751F;&#x6D3B;&#xFF0C;&#x9009;&#x62E9;&#x5DE5;&#x4F5C;&#xFF0C;&#x9009;&#x62E9;&#x804C;&#x4E1A;&#xFF0C;&#x9009;&#x62E9;***&#x5927;&#x7535;&#x89C6;&#x673A;&#xFF0C;&#x9009;&#x62E9;&#x7EE9;&#x70B9;&#x793E;&#x5DE5;&#x4FDD;&#x7814;&#x4E09;&#x5343;&#x7C73;&#x3002;&#x4E8C;&#x5341;&#x5C81;&#x51FA;&#x5934;&#x7684;&#x5E74;&#x8F7B;&#x4EBA;&#x8981;&#x4E0A;&#x77E5;&#x725B;&#x987F;&#x83B1;&#x5E03;&#x5C3C;&#x5179;&#x516C;&#x5F0F;&#x4E0B;&#x77E5;&#x798F;&#x67EF;&#x6208;&#x8FBE;&#x5C14;&#x4E00;&#x5B66;&#x671F;&#x4E09;&#x5341;&#x5B66;&#x5206;&#x4E24;&#x4E2A;&#x4E13;&#x4E1A;&#x7EE9;&#x70B9;3.7&#x5DE6;&#x624B;&#x793E;&#x5DE5;&#x53F3;&#x624B;&#x79D1;&#x7814;&#x5B66;&#x672F;&#x5C0F;&#x6709;&#x6210;&#x5C31;&#x5C31;&#x4E1A;&#x4E0D;&#x662F;&#x95EE;&#x9898;&#x6700;&#x597D;&#x628A;&#x5BF9;&#x8C61;&#x4E5F;&#x627E;&#x4E86;&#x2014;&#x2014;&#x4EBA;&#x662F;&#x53EA;&#x80FD;&#x6D3B;&#x5230;&#x4E8C;&#x5341;&#x4E03;&#x5C81;&#x4E48;&#xFF1F;&#x5728;&#x4E00;&#x4E2A;&#x5904;&#x5904;&#x8352;&#x8C2C;&#x53C8;&#x903C;&#x4EBA;&#x4F53;&#x9762;&#x7684;&#x5927;&#x73AF;&#x5883;&#x91CC;&#xFF0C;&#x5E73;&#x5EB8;&#x662F;&#x88AB;&#x5236;&#x9020;&#x51FA;&#x6765;&#x7684;&#xFF0C;&#x603B;&#x6709;&#x4E1C;&#x897F;&#x60F3;&#x628A;&#x6211;&#x4EEC;&#x5206;&#x51FA;&#x4E09;&#x516D;&#x4E5D;&#x7B49;&#x6765;&#x3002;</span><br><span class="line">&#x6CA1;&#x6709;&#x8C01;&#x662F;&#x6D3B;&#x5728;&#x8499;&#x6627;&#x91CC;&#x7B49;&#x5F85;&#x9AD8;&#x7EA7;&#x6587;&#x660E;&#x6551;&#x8D4E;&#x7684;&#x7334;&#x5B50;&#xFF0C;&#x795D;&#x6211;&#x4EEC;&#x80FD;&#x76F4;&#x89C6;&#x81EA;&#x5DF1;&#x7684;&#x8F6F;&#x5F31;&#x3002;</span><br><span class="line">&#x53E6;&#x5916;&#xFF0C;&#x731C;&#x7CFB;&#x540D;&#x8FD9;&#x79CD;&#x9A8C;&#x8BC1;&#x95EE;&#x9898;&#x5BF9;&#x4FE1;&#x606F;&#x95ED;&#x585E;&#x7684;&#x6587;&#x79D1;&#x751F;&#x5B9E;&#x5728;&#x592A;&#x4E0D;&#x53CB;&#x597D;&#x4E86;&#x2026;</span><br></pre></td></tr></table></figure>
<p>17&#x5929;&#x4E4B;&#x524D; <a href="https://closed.social/ordinary/?page=4&amp;per_page=20&amp;sort_by=time##"> 40</a></p>
<p>No. 82</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#x6211;&#x4EE5;&#x4E3A;&#x666E;&#x901A;&#x5C31;&#x662F;&#x83DC;&#xFF0C;&#x4E8E;&#x662F;&#x5174;&#x9AD8;&#x91C7;&#x70C8;&#x5730;&#x6765;&#x4E86;&#x3002;</span><br><span class="line">&#x53EF;&#x662F;&#x666E;&#x901A;&#x4EBA;&#x6709;&#x4E0D;&#x5728;&#x8BC4;&#x4EF7;&#x4F53;&#x7CFB;&#x5185;&#x4F46;&#x5374;&#x95EA;&#x95EA;&#x53D1;&#x5149;&#x7684;&#x5730;&#x65B9;&#xFF0C;&#x800C;&#x83DC;&#x5C31;&#x53EA;&#x662F;&#x83DC;&#xFF0C;&#x4E0D;&#x7BA1;&#x662F;&#x4F20;&#x7EDF;&#x7684;&#x8FD8;&#x662F;&#x65B0;&#x9896;&#x7684;&#x8FD8;&#x662F;&#x53E6;&#x7C7B;&#x7684;&#x8BC4;&#x4EF7;&#x65B9;&#x5F0F;&#xFF0C;&#x6211;&#x90FD;&#x65E0;&#x6CD5;&#x8131;&#x9896;&#x800C;&#x51FA;&#x3002;</span><br><span class="line">&#x201C;&#x4F60;&#x4E0D;&#x8BA8;&#x538C;&#xFF0C;&#x53EA;&#x662F;&#x5168;&#x65E0;&#x7528;&#x5904;&#x3002;&#x201D;</span><br><span class="line">&#x53EF;&#x662F;&#x6211;&#x8FD8;&#x662F;&#x60F3;&#x8981;&#x660E;&#x4FE1;&#x7247;&#x554A;(&#x4E3E;&#x529E;&#x65B9;&#x4E0D;&#x4F1A;&#x7834;&#x4EA7;&#x5427;&#x2026;</span><br></pre></td></tr></table></figure>
<p>17&#x5929;&#x4E4B;&#x524D; <a href="https://closed.social/ordinary/?page=4&amp;per_page=20&amp;sort_by=time##"> 38</a></p>
<p>No. 81</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#x666E;&#x901A;&#x4F60;&#x597D;&#xFF0C;&#x6211;&#x662F;&#x5706;&#x901A;&#xFF01;</span><br></pre></td></tr></table></figure>
<p>17&#x5929;&#x4E4B;&#x524D; <a href="https://closed.social/ordinary/?page=4&amp;per_page=20&amp;sort_by=time##"> 21</a></p>
<p>No. 80</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#x4EE5;&#x9AD8;&#x8003;&#x751F;&#x8EAB;&#x4EFD;&#x3001;&#x8BA1;&#x7B97;&#x673A;&#x96F6;&#x57FA;&#x7840;&#x7684;&#x80CC;&#x666F;&#x8FDB;&#x5165;&#x8D35;&#x7CFB;&#x5B66;&#x4E60;&#x3002;&#x8FD9;&#x4E00;&#x5E74;&#x591A;&#x5C1D;&#x8BD5;&#x8FC7;&#x5237;&#x7EE9;&#x70B9;&#xFF0C;&#x53EF;&#x662F;&#x8BB8;&#x591A;&#x95E8;&#x8BFE;&#x5F88;&#x52AA;&#x529B;&#x4E86;&#x4E5F;&#x53EA;&#x80FD;B+&#x6216;B&#xFF0C;&#x6210;&#x7EE9;&#x5E73;&#x5EB8;&#x7CFB;&#x91CC;&#x4E2D;&#x6E38;&#xFF1B;&#x5C1D;&#x8BD5;&#x8FC7;&#x641E;&#x641E;&#x81EA;&#x5DF1;&#x4E00;&#x76F4;&#x559C;&#x6B22;&#x7684;&#x97F3;&#x4E50;&#xFF0C;&#x53EF;&#x788D;&#x4E8E;&#x65F6;&#x95F4;&#x592A;&#x5C11;&#x6CA1;&#x80FD;&#x597D;&#x597D;&#x82B1;&#x5FC3;&#x601D;&#xFF1B;&#x5C1D;&#x8BD5;&#x8FC7;&#x79D1;&#x7814;&#xFF0C;&#x4F46;&#x662F;&#x540C;&#x6837;&#x4E0E;&#x5B66;&#x4E1A;&#x95F4;&#x96BE;&#x4EE5;&#x5E73;&#x8861;&#x800C;&#x9009;&#x62E9;&#x6682;&#x65F6;&#x6401;&#x7F6E;&#xFF1B;&#x5C1D;&#x8BD5;&#x8FC7;&#x591A;&#x8BFB;&#x8BFB;&#x4E66;&#xFF0C;&#x4F46;&#x73B0;&#x5B9E;&#x5F88;&#x9AA8;&#x611F;&#xFF0C;&#x9AD8;&#x4E2D;&#x65F6;&#x4E00;&#x5E74;&#x80FD;&#x8BFB;&#x56DB;&#x4E94;&#x5341;&#x672C;&#xFF0C;&#x73B0;&#x5728;&#x6570;&#x91CF;&#x5927;&#x6982;20%&#xFF1B;&#x5C1D;&#x8BD5;&#x8FC7;&#x5728;&#x4F53;&#x80B2;&#x953B;&#x70BC;&#x4E0A;&#x53D8;&#x5F3A;&#xFF0C;&#x4F46;&#x6C34;&#x5E73;&#x4E5F;&#x5C31;&#x4E0D;&#x6E29;&#x4E0D;&#x706B;&#x3002;</span><br><span class="line">&#x867D;&#x7136;&#x4F46;&#x662F;&#xFF0C;&#x6211;&#x8FD8;&#x662F;&#x5BF9;&#x5B66;&#x7684;&#x8FD9;&#x95E8;&#x5B66;&#x79D1;&#x5145;&#x6EE1;&#x70ED;&#x60C5;&#xFF0C;&#x5C0F;&#x5B66;&#x671F;&#x4E09;&#x5468;&#x4E00;&#x5468;&#x4E00;&#x4E2A;&#x5927;&#x4F5C;&#x4E1A;&#x90FD;&#x8F9B;&#x82E6;&#x8F9B;&#x82E6;&#x4F46;&#x7F8E;&#x7F8E;&#x6EE1;&#x6EE1;&#x5730;&#x5B8C;&#x6210;&#xFF1B;&#x79D1;&#x7814;&#x6CA1;&#x5728;&#x7EE7;&#x7EED;&#xFF0C;&#x4F46;&#x5B66;&#x5230;&#x7684;&#x76F8;&#x5173;&#x77E5;&#x8BC6;&#x6FC0;&#x8D77;&#x4E86;&#x6211;&#x81EA;&#x5DF1;&#x5C1D;&#x8BD5;&#x5C0F;&#x9879;&#x76EE;&#x7684;&#x5174;&#x8DA3;&#xFF1B;&#x770B;&#x4E66;&#x867D;&#x7136;&#x4E0D;&#x591A;&#xFF0C;&#x4F46;&#x8BFB;&#x7684;&#x65F6;&#x5019;&#x603B;&#x80FD;&#x771F;&#x6B63;&#x4ECE;&#x4E2D;&#x627E;&#x5230;&#x6170;&#x85C9;&#xFF1B;&#x97F3;&#x4E50;&#x9C9C;&#x6709;&#x81EA;&#x5DF1;&#x7684;&#x53D1;&#x5C55;&#xFF0C;&#x4F46;&#x603B;&#x62B1;&#x6709;&#x65E0;&#x9650;&#x7684;&#x70ED;&#x7231;&#xFF1B;&#x4F53;&#x80B2;&#x867D;&#x7136;&#x6CA1;&#x90A3;&#x4E48;&#x5389;&#x5BB3;&#xFF0C;&#x4F46;&#x603B;&#x662F;&#x575A;&#x6301;&#x953B;&#x70BC;&#xFF1B;&#x5F02;&#x5730;&#x604B;&#x6709;&#x5728;&#x597D;&#x597D;&#x7EF4;&#x6301;&#xFF0C;&#x4E0D;&#x5927;&#x7684;&#x4EA4;&#x9645;&#x5708;&#x4E5F;&#x6709;&#x5728;&#x7D27;&#x5BC6;&#x5730;&#x4E92;&#x52A8;......</span><br><span class="line">&#x6211;&#x4E00;&#x76F4;&#x8BA4;&#x4E3A;&#x666E;&#x901A;&#x4E0D;&#x662F;&#x4E27;&#x3002;&#x666E;&#x901A;&#x4E0D;&#x662F;&#x4EC0;&#x4E48;&#x90FD;&#x505A;&#x4E0D;&#x597D;&#xFF0C;&#x800C;&#x662F;&#x4E0D;&#x592A;&#x95EA;&#x4EAE;&#xFF0C;&#x5374;&#x4E5F;&#x81EA;&#x8BA4;&#x4E3A;&#x6CA1;&#x90A3;&#x4E48;&#x7CDF;&#x7CD5;&#x3002;&#x6211;&#x60F3;&#x6211;&#x751F;&#x6D3B;&#x5F97;&#x5F88;&#x7D2F;&#xFF0C;&#x771F;&#x7684;&#x5F88;&#x7D2F;&#xFF0C;&#x5728;&#x8FD9;&#x4E2A;&#x5B66;&#x6821;&#x91CC;&#x4E5F;&#x6CA1;&#x6709;&#x90A3;&#x4E48;&#x95EA;&#x5149;&#xFF0C;&#x4F46;&#x81F3;&#x5C11;&#x6211;&#x6709;&#x5728;&#x8BA4;&#x771F;&#x751F;&#x6D3B;&#x3002;&#x6211;&#x7518;&#x4E8E;&#x666E;&#x666E;&#x901A;&#x901A;&#xFF0C;&#x4F46;&#x6211;&#x5FC3;&#x91CC;&#x6C38;&#x8FDC;&#x70ED;&#x5FF1;&#xFF0C;&#x773C;&#x91CC;&#x6C38;&#x8FDC;&#x6709;&#x5149;&#xFF0C;&#x6C38;&#x8FDC;&#x5BF9;&#x660E;&#x5929;&#x5145;&#x6EE1;&#x5E0C;&#x671B;&#x3002;</span><br></pre></td></tr></table></figure>
<p>17&#x5929;&#x4E4B;&#x524D; <a href="https://closed.social/ordinary/?page=4&amp;per_page=20&amp;sort_by=time##"> 47</a></p>
<p>No. 79</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#x80FD;&#x610F;&#x8BC6;&#x5230;&#x81EA;&#x5DF1;&#x666E;&#x901A;&#xFF0C;&#x5927;&#x6982;&#x662F;&#x56E0;&#x4E3A;&#x603B;&#x6709;&#x592A;&#x591A;&#x60F3;&#x505A;&#x7684;&#x4E8B;&#xFF0C;&#x6700;&#x540E;&#x53C8;&#x4E00;&#x70B9;&#x70B9;&#x653E;&#x5F03;&#x5427;&#x3002;&#x9009;&#x8BFE;&#x65F6;&#xFF0C;&#x603B;&#x6709;&#x4E00;&#x957F;&#x5217;&#x7684;&#x8BFE;&#x7A0B;&#x60F3;&#x9009;&#xFF0C;&#x6700;&#x540E;&#x603B;&#x662F;&#x8001;&#x8001;&#x5B9E;&#x5B9E;&#x5730;&#x5220;&#x53BB;&#x90A3;&#x4E9B;&#x97F3;&#x4E50;&#x3001;&#x4E8C;&#x5916;&#x3001;&#x54F2;&#x5B66;...&#x6BD5;&#x7ADF;&#xFF0C;&#x8FD9;&#x4E0E;&#x4F60;&#x7684;&#x4E13;&#x4E1A;&#x6709;&#x4EC0;&#x4E48;&#x5173;&#x7CFB;&#x5462;&#xFF1F;&#x96BE;&#x9053;&#x4F60;&#x5DF2;&#x7ECF;&#x5B66;&#x6E05;&#x695A;&#x5FC5;&#x4FEE;&#x4E86;&#x5417;&#xFF1F;&#x793E;&#x56E2;&#x5982;&#x6B64;&#xFF0C;&#x821E;&#x53F0;&#x5982;&#x6B64;&#xFF0C;&#x6BD4;&#x8D5B;&#x4EA6;&#x5982;&#x6B64;...&#x4E0D;&#x5982;&#x7F29;&#x56DE;&#x5B89;&#x5168;&#x7684;&#x666E;&#x901A;&#x4EBA;&#x7684;&#x58F3;&#x5B50;&#x91CC;</span><br></pre></td></tr></table></figure>
<p>17&#x5929;&#x4E4B;&#x524D; <a href="https://closed.social/ordinary/?page=4&amp;per_page=20&amp;sort_by=time##"> 13</a></p>
<p>No. 78</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#x611F;&#x89C9;&#x81EA;&#x5DF1;&#x7684;&#x6545;&#x4E8B;&#x5C31;&#x662F;&#x4E0D;&#x65AD;&#x5730;&#x9047;&#x5230;&#x597D;&#x8FD0;&#xFF0C;&#x518D;&#x4E0D;&#x65AD;&#x5730;&#x88AB;&#x81EA;&#x5DF1;&#x641E;&#x7838;&#xFF0C;&#x6700;&#x540E;&#x529F;&#x5229;&#x5730;&#x770B;&#x51E0;&#x4E4E;&#x5C31;&#x662F;&#x6DF7;&#x5F97;&#x6700;&#x5DEE;&#x7684;&#x72B6;&#x6001;&#x3002;</span><br><span class="line">&#x7B97;&#x4E86;&#xFF0C;&#x597D;&#x50CF;&#x4E5F;&#x7B97;&#x4E0D;&#x4E0A;&#x666E;&#x901A;&#xFF0C;&#x4E0D;&#x8BC4;&#x4E86;&#x3002;</span><br></pre></td></tr></table></figure>
<p>17&#x5929;&#x4E4B;&#x524D; <a href="https://closed.social/ordinary/?page=4&amp;per_page=20&amp;sort_by=time##"> 11</a></p>
<p>No. 77</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#x771F;&#x6B63;&#x666E;&#x901A;&#x7684;&#x4EBA;&#x662F;&#x60F3;&#x4E0D;&#x8D77;&#x6765;&#x8981;&#x5199;&#x4EC0;&#x4E48;&#x7684;&#x2026;&#x2026;</span><br></pre></td></tr></table></figure>
<p>17&#x5929;&#x4E4B;&#x524D; <a href="https://closed.social/ordinary/?page=4&amp;per_page=20&amp;sort_by=time##"> 28</a></p>
<p>No. 76</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#x5F53;&#x4E00;&#x4E2A;&#x4EBA;&#x771F;&#x6B63;&#x666E;&#x901A;&#x7684;&#x65F6;&#x5019;&#xFF0C;&#x4ED6;&#x662F;&#x4E0D;&#x4F1A;&#x610F;&#x8BC6;&#x5230;&#x8FD9;&#x4EF6;&#x4E8B;&#x7684;&#x3002;</span><br></pre></td></tr></table></figure>
<p>18&#x5929;&#x4E4B;&#x524D; <a href="https://closed.social/ordinary/?page=4&amp;per_page=20&amp;sort_by=time##"> 20</a></p>
<p>No. 75</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#x6211;&#x4E0D;&#x662F;&#x666E;&#x901A;&#xFF0C;&#x5728;&#x534E;&#x6E05;&#x5927;&#x5B66;&#x7684;&#x8BC4;&#x4EF7;&#x4F53;&#x7CFB;&#x4E2D;&#x6211;&#x5C31;&#x662F;&#x8BE5;&#x9000;&#x5B66;&#x7684;&#x90A3;&#x79CD;&#x3002;</span><br><span class="line">&#x5927;&#x4E00;&#x4E00;&#x5B66;&#x671F;&#x6302;&#x4E00;&#x79D1;&#xFF0C;&#x5C31;&#x7B97;&#x4FE1;&#x9662;&#x5927;&#x4E00;&#x6302;&#x79D1;&#x7684;&#x7279;&#x6B8A;&#x653F;&#x7B56;&#x4E5F;&#x6551;&#x4E0D;&#x4E86;&#x6211;&#xFF0C;&#x6570;&#x7406;&#x76F8;&#x5173;&#x7684;&#x7EE9;&#x70B9;&#x60E8;&#x4E0D;&#x5FCD;&#x7779;&#xFF0C;&#x5BF9;&#x672C;&#x4E13;&#x4E1A;&#x66F4;&#x662F;&#x63D0;&#x4E0D;&#x8D77;&#x5174;&#x8DA3;&#x3002;&#x8F6C;&#x7CFB;&#x5427;&#xFF0C;&#x9519;&#x8FC7;&#x4E86;&#x5927;&#x4E00;&#x4E0B;&#x7684;&#xFF0C;&#x53EA;&#x80FD;&#x964D;&#x8F6C;&#xFF0C;&#x4F46;&#x76EE;&#x6807;&#x9662;&#x7CFB;&#x53C8;&#x662F;&#x5C31;&#x4E1A;&#x524D;&#x666F;&#x4E0D;&#x662F;&#x5F88;&#x660E;&#x6670;&#x7684;&#xFF0C;&#x5BB6;&#x4EBA;&#x4E5F;&#x683C;&#x5916;&#x53CD;&#x5BF9;&#xFF0C;&#x53EA;&#x80FD;&#x4F5C;&#x7F62;&#x3002;</span><br><span class="line">&#x6240;&#x4EE5;&#x6211;&#x8BE5;&#x600E;&#x6837;&#x7EE7;&#x7EED;&#x4E0B;&#x53BB;&#x5462;&#xFF1F;</span><br><span class="line">&#x7236;&#x6BCD;&#x4E0D;&#x540C;&#x610F;&#x6211;&#x8F6C;&#x7CFB;&#xFF0C;&#x4F46;&#x53C8;&#x5E0C;&#x671B;&#x6211;&#x5065;&#x5EB7;&#x5730;&#x751F;&#x6D3B;&#xFF0C;&#x6B8A;&#x4E0D;&#x77E5;&#x5728;&#x8FD9;&#x4E2A;&#x73AF;&#x5883;&#x4E2D;&#x6CA1;&#x6709;GPA&#x5C31;&#x4E0D;&#x53EF;&#x80FD;&#x6709;&#x6B63;&#x5E38;&#x7684;&#x751F;&#x6D3B;&#xFF0C;&#x538B;&#x529B;&#x5927;&#x5230;&#x751F;&#x7406;&#x6027;&#x5455;&#x5410;&#x4E5F;&#x4E0D;&#x662F;&#x6CA1;&#x6709;&#xFF0C;&#x4F46;&#x6211;&#x8FD8;&#x662F;&#x6B63;&#x5E38;&#x7684;&#x6D3B;&#x7740;&#xFF0C;&#x4E3A;&#x4EC0;&#x4E48;&#x5462;&#xFF1F;&#x56E0;&#x4E3A;&#x6211;&#x5E76;&#x4E0D;&#x666E;&#x901A;&#x3002;</span><br><span class="line">&#x4E0D;&#x80FD;&#x8F6C;&#x7CFB;&#x5C31;&#x8F85;&#x4FEE;&#x5457;&#xFF0C;&#x4FEE;&#x4E86;&#x5BF9;&#x9762;&#x7684;&#x8BFE;&#x8BA9;&#x6211;&#x5FC3;&#x60C5;&#x6109;&#x60A6;&#xFF0C;&#x56E0;&#x4E3A;&#x5176;&#x4ED6;&#x7684;&#x4E00;&#x4E9B;&#x6253;&#x7B97;&#x9000;&#x6389;&#x81EA;&#x5DF1;&#x9662;&#x7CFB;&#x7684;&#x4E00;&#x4E9B;&#x8BFE;&#x540E;&#xFF0C;&#x6211;&#x6709;&#x4E86;&#x66F4;&#x591A;&#x7684;&#x65F6;&#x95F4;&#x53BB;&#x601D;&#x8003;&#x3002;&#x6E10;&#x6E10;&#x7684;&#x6211;&#x4E5F;&#x53D1;&#x73B0;&#x4E86;&#x6211;&#x5728;&#x5176;&#x4ED6;&#x65B9;&#x9762;&#x7684;&#x5174;&#x8DA3;&#xFF0C;&#x6211;&#x559C;&#x6B22;&#x5FD7;&#x613F;&#xFF0C;&#x4E0D;&#x4E3A;&#x4E86;&#x5DE5;&#x65F6;&#x5E2E;&#x52A9;&#x522B;&#x4EBA;&#x4E5F;&#x8BA9;&#x6211;&#x5FEB;&#x4E50;&#xFF0C;&#x6211;&#x559C;&#x6B22;&#x4E0E;&#x4EBA;&#x4EA4;&#x6D41;&#xFF0C;&#x6211;&#x559C;&#x6B22;&#x505A;pre&#xFF0C;&#x6211;&#x4E5F;&#x559C;&#x6B22;&#x505A;&#x63A8;&#x9001;&#xFF0C;&#x5C31;&#x662F;&#x8FD9;&#x4E9B;&#x7EC6;&#x5C0F;&#x7684;&#x3001;&#x770B;&#x8D77;&#x6765;&#x4E0D;&#x52A1;&#x6B63;&#x4E1A;&#x7684;&#x7231;&#x597D;&#x4E3A;&#x6211;&#x5806;&#x79EF;&#x8D77;&#x5BF9;&#x6297;&#x7126;&#x8651;&#x7684;&#x57CE;&#x5821;&#xFF0C;&#x6211;&#x5728;&#x60F3;&#xFF0C;&#x4E3A;&#x4EC0;&#x4E48;&#x6211;&#x4E0D;&#x80FD;&#x75DB;&#x75DB;&#x5FEB;&#x5FEB;&#x5730;&#x53BB;&#x505A;&#x81EA;&#x5DF1;&#x60F3;&#x505A;&#x7684;&#x4E8B;&#x5462;&#xFF1F;&#x53BB;&#x505A;&#x5FD7;&#x613F;&#xFF0C;&#x53BB;&#x641E;&#x5BA3;&#x4F20;&#xFF0C;&#x53BB;&#x548C;&#x4ED6;&#x4EBA;&#x6C9F;&#x901A;&#xFF0C;&#x90FD;&#x662F;&#x6211;&#x64C5;&#x957F;&#x800C;&#x4E14;&#x505A;&#x7684;&#x597D;&#x7684;&#xFF0C;&#x4E3A;&#x4EC0;&#x4E48;&#x6211;&#x8981;&#x56E0;&#x4E3A;&#x4E00;&#x4E2A;&#x6211;&#x4E0D;&#x613F;&#x610F;&#x63A5;&#x53D7;&#x7684;&#x8BC4;&#x4EF7;&#x4F53;&#x7CFB;&#x53BB;&#x626D;&#x66F2;&#x81EA;&#x5DF1;&#x7684;&#x5FC3;&#x60C5;&#x5462;&#xFF1F;</span><br><span class="line">GPA&#x5BF9;&#x6211;&#x6700;&#x5927;&#x7684;&#x5F71;&#x54CD;&#x5C31;&#x662F;&#x4FDD;&#x7814;&#xFF0C;&#x4F46;&#x662F;&#x4E0D;&#x80FD;&#x4FDD;&#x7814;&#x53C8;&#x600E;&#x6837;&#xFF1F;&#x5927;&#x4E0D;&#x4E86;&#x8003;&#x7814;&#x6216;&#x8005;&#x76F4;&#x63A5;&#x5C31;&#x4E1A;&#x3002;&#x6BCF;&#x5E74;&#x591A;&#x5C11;&#x8003;&#x7814;&#x7684;&#x4EBA;&#xFF1F;&#x53EA;&#x662F;&#x5728;&#x4FE1;&#x9662;&#x8FD9;&#x79CD;&#x5168;&#x5458;&#x8FFD;&#x6C42;&#x4FDD;&#x7814;&#x7684;&#x6C1B;&#x56F4;&#x4E0B;&#x8003;&#x7814;&#x624D;&#x663E;&#x5F97;&#x975E;&#x5E38;&#x4E0D;&#x548C;&#x8C10;&#x3002;&#x51B5;&#x4E14;&#x8003;&#x7814;&#x6216;&#x8005;&#x5C31;&#x4E1A;&#x4E0E;&#x5426;&#xFF0C;&#x5F71;&#x54CD;&#x7684;&#x662F;&#x672A;&#x6765;&#x7684;&#x6536;&#x5165;&#xFF0C;&#x6E05;&#x672C;&#x7684;&#x5C65;&#x5386;&#x6211;&#x89C9;&#x5F97;&#x5DF2;&#x7ECF;&#x4E0D;&#x9519;&#x4E86;&#xFF0C;&#x5DEE;&#x8DDD;&#x7684;&#x6765;&#x6E90;&#x5927;&#x6982;&#x53EA;&#x662F;&#x4E0E;&#x540C;&#x5B66;&#x76F8;&#x6BD4;&#xFF0C;&#x4F46;&#x6211;&#x4E3A;&#x4EC0;&#x4E48;&#x8981;&#x548C;&#x4ED6;&#x4EEC;&#x6BD4;&#x8F83;&#x5462;&#xFF1F;</span><br><span class="line">&#x6240;&#x4EE5;&#x6211;&#x4E0D;&#x666E;&#x901A;&#x5728;&#x6211;&#x538C;&#x6076;&#x5E76;&#x653E;&#x5F03;&#x5BF9;&#x8FD9;&#x79CD;&#x6211;&#x4E0D;&#x8BA4;&#x540C;&#x7684;&#x8BC4;&#x4EF7;&#x4F53;&#x7CFB;&#x7684;&#x59A5;&#x534F;&#xFF0C;&#x5FD7;&#x613F;&#x548C;&#x5BA3;&#x4F20;&#x6CA1;&#x6709;&#x95E8;&#x69DB;&#xFF0C;&#x6211;&#x53EF;&#x4EE5;&#x75DB;&#x75DB;&#x5FEB;&#x5FEB;&#x505A;&#x4E2A;&#x591F;&#x3002;&#x53EA;&#x8981;&#x4E0D;&#x518D;&#x6302;&#x79D1;&#x6211;&#x5C31;&#x53EF;&#x4EE5;&#x6BD5;&#x4E1A;&#xFF0C;&#x5728;&#x5269;&#x4E0B;&#x7684;&#x65F6;&#x95F4;&#x91CC;&#xFF0C;GPA&#x4E0D;&#x518D;&#x662F;&#x6211;&#x7684;&#x5168;&#x90E8;&#xFF0C;&#x6211;&#x8F85;&#x4FEE;&#xFF0C;&#x6211;&#x641E;&#x5FD7;&#x613F;&#xFF0C;&#x6211;&#x624D;&#x4E0D;&#x4F1A;&#x5728;&#x610F;&#x522B;&#x4EBA;&#x600E;&#x4E48;&#x770B;&#x5F85;&#x6211;&#x7684;&#x4E0D;&#x52A1;&#x6B63;&#x4E1A;&#xFF0C;&#x6211;&#x5FEB;&#x4E50;&#xFF0C;&#x6211;&#x624D;&#x5B58;&#x5728;&#x3002;</span><br><span class="line">&#x611F;&#x89C9;&#x8FD9;&#x6837;&#x4E0D;&#x666E;&#x901A;&#x7684;&#x6211;&#x5927;&#x6982;&#x8BC4;&#x4E0D;&#x4E0A;&#x7279;&#x666E;&#x901A;&#x5956;&#x4E86;&#x54C8;&#x54C8;&#x54C8;&#xFF0C;&#x4F46;&#x6211;&#x8FD8;&#x662F;&#x60F3;&#x53D1;&#x51FA;&#x81EA;&#x5DF1;&#x5FAE;&#x5F31;&#x7684;&#x58F0;&#x97F3;&#xFF0C;&#x5728;&#x8FD9;&#x4E2A;&#x56ED;&#x5B50;&#x4E2D;&#x5C31;&#x7B97;&#x662F;&#x540E;&#x767E;&#x5206;&#x4E4B;&#x5341;&#x53C8;&#x600E;&#x6837;&#xFF0C;&#x6211;&#x4F9D;&#x65E7;&#x53EF;&#x4EE5;&#x6D3B;&#x5F97;&#x5FEB;&#x4E50;&#x3002;&#x590F;&#x5929;&#x7684;&#x8377;&#x5858;&#xFF0C;&#x79CB;&#x5929;&#x7684;&#x96D5;&#x5851;&#x56ED;&#xFF0C;&#x51AC;&#x5929;&#x96EA;&#x540E;&#x7684;&#x60C5;&#x4EBA;&#x5761;&#xFF0C;&#x6625;&#x5929;&#x65B0;&#x7EFF;&#x7684;&#x679D;&#x6860;&#xFF0C;&#x8FD9;&#x4E2A;&#x56ED;&#x5B50;&#x7684;&#x7F8E;&#x4E3D;&#xFF0C;&#x6211;&#x90FD;&#x8981;&#x4E00;&#x70B9;&#x70B9;&#x53BB;&#x4F53;&#x4F1A;&#x5230;&#x3002;</span><br></pre></td></tr></table></figure>
<p>18&#x5929;&#x4E4B;&#x524D; <a href="https://closed.social/ordinary/?page=4&amp;per_page=20&amp;sort_by=time##"> 63</a></p>
<p>No. 74</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#x666E;&#x901A;&#xFF0C;&#x5373;&#x6709;&#x5E73;&#x51E1;&#x7684;&#x957F;&#x5904;&#x548C;&#x5E73;&#x51E1;&#x7684;&#x7F3A;&#x70B9;&#x3002;&#x80FD;&#x968F;&#x65F6;&#x968F;&#x5730;&#x51B7;&#x51BB;&#x6C1B;&#x56F4;&#xFF0C;&#x968F;&#x65F6;&#x968F;&#x5730;&#x9690;&#x8EAB;&#x6D88;&#x5931;&#xFF0C;&#x5076;&#x5C14;&#x4E5F;&#x80FD;&#x5438;&#x5F15;&#x76EE;&#x5149;&#x7F62;&#x4E86;&#x3002;</span><br><span class="line">&#x666E;&#x901A;&#x4E0D;&#x53EA;&#x662F;&#x540C;&#x8D28;&#x5730;&#x505A;&#x5927;&#x5BB6;&#x90FD;&#x5728;&#x505A;&#x7684;&#x4E8B;&#xFF0C;&#x72AF;&#x5927;&#x5BB6;&#x90FD;&#x80FD;&#x5171;&#x60C5;&#x7684;&#x9519;&#x8BEF;&#x3002;</span><br><span class="line">&#x6211;&#x7684;&#x666E;&#x901A;&#x662F;&#x6108;&#x6F14;&#x6108;&#x70C8;&#x5730;&#x5728;ddl&#x8FB9;&#x7F18;&#x81EA;&#x66B4;&#x81EA;&#x5F03;&#xFF0C;&#x4E00;&#x8FB9;&#x5728;&#x65F6;&#x95F4;&#x8FD8;&#x591A;&#x65F6;&#x62A5;&#x4EE5;&#x5BD2;&#x53F7;&#x9E1F;&#x7684;&#x54C2;&#x7B11;&#xFF0C;&#x4E00;&#x8FB9;&#x5728;ddl&#x7684;&#x8DDF;&#x524D;&#x4E00;&#x8FB9;&#x7126;&#x8651;&#xFF0C;&#x4E00;&#x8FB9;&#x8BD5;&#x56FE;&#x7528;&#x522B;&#x7684;&#x4EC0;&#x4E48;&#x5FEB;&#x9910;&#x5316;&#x7684;&#x5982;&#x6E38;&#x620F;&#x89C6;&#x9891;&#x4E4B;&#x7C7B;&#x7684;&#x4FE1;&#x606F;&#x8F93;&#x5165;&#x9EBB;&#x75F9;&#x81EA;&#x5DF1;&#xFF0C;&#x4E4B;&#x540E;&#x5728;&#x66F4;&#x7D27;&#x7684;ddl&#x4E2D;&#x8017;&#x5C3D;&#x5FC3;&#x529B;&#x901A;&#x5173;&#x3002;&#x5982;&#x6B64;&#x53CD;&#x590D;&#x6298;&#x78E8;&#xFF0C;&#x76F4;&#x5230;&#x6709;&#x4E00;&#x5929;&#xFF0C;&#x6211;&#x8BD5;&#x56FE;&#x65E9;&#x4E0A;&#x8865;&#x4F5C;&#x4E1A;&#x800C;&#x7EC8;&#x4E8E;&#x662F;&#x6CA1;&#x80FD;&#x8D77;&#x6765;&#xFF0C;&#x5374;&#x6709;&#x4E00;&#x79CD;&#x677E;&#x4E86;&#x4E00;&#x53E3;&#x6C14;&#x7684;&#x611F;&#x89C9;&#x3002;&#x6211;&#x77E5;&#x9053;&#x6211;&#x6700;&#x540E;&#x7684;&#x906E;&#x7F9E;&#x5E03;&#x6CA1;&#x4E86;&#xFF0C;&#x4E0A;&#x8FDB;&#x7684;&#x6700;&#x540E;&#x7684;&#x9A84;&#x50B2;&#x548C;&#x5014;&#x5F3A;&#x88AB;&#x8F7B;&#x98D8;&#x98D8;&#x5730;&#x5439;&#x6563;&#x4E86;&#x3002;</span><br><span class="line">&#x4ECE;&#x6B64;&#xFF0C;&#x6211;&#x7EC8;&#x4E8E;&#x6210;&#x4E3A;&#x4E86;&#x4E00;&#x4E2A;&#x5FC3;&#x91CC;&#x666E;&#x901A;&#xFF0C;&#x884C;&#x52A8;&#x4E5F;&#x666E;&#x901A;&#x7684;&#x4EBA;&#x3002;</span><br></pre></td></tr></table></figure>
<p>18&#x5929;&#x4E4B;&#x524D; <a href="https://closed.social/ordinary/?page=4&amp;per_page=20&amp;sort_by=time##"> 16</a></p>
<p>No. 73</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#x6765;&#x81EA;&#x6821;&#x540D;&#x548C;&#x67D0;&#x9675;&#x5893;&#x540C;&#x540D;&#x7684;&#x5C0F;&#x5B66;&#x3002;&#x505A;&#x8FC7;&#x4E00;&#x4E9B;&#x4E0D;&#x6B63;&#x7ECF;&#x7684;&#x4E8B;&#x60C5;&#xFF0C;&#x4F8B;&#x5982;&#x7EC4;&#x7EC7;&#x540C;&#x5B66;&#x7ED9;&#x6821;&#x957F;&#x5199;&#x8054;&#x540D;&#x4FE1;&#x8981;&#x6C42;&#x4E3E;&#x884C;&#x90CA;&#x6E38;&#xFF08;&#x540E;&#x6765;&#x88AB;&#x73ED;&#x4E3B;&#x4EFB;&#x902E;&#x4F4F;&#x6328;&#x4E86;&#x5435;&#xFF09;&#x3001;&#x628A;&#x6821;&#x56ED;&#x65E5;&#x5E38;&#x753B;&#x6210;&#x56DB;&#x683C;&#x6F2B;&#x753B;&#x88C5;&#x8BA2;&#x6210;&#x300A;&#x963F;&#x8870;&#x300B;&#x90A3;&#x6837;&#x7684;&#x5C0F;&#x518C;&#x5B50;&#x81EA;&#x5DF1;&#x7559;&#x7740;&#x73A9;&#x513F;&#x3002;</span><br><span class="line"></span><br><span class="line">&#x6765;&#x81EA;&#x5168;&#x7701;&#x6700;&#x597D;&#x7684;&#x4E2D;&#x5B66;&#x3002;&#x9AD8;&#x4E00;&#x53C2;&#x52A0;&#x793E;&#x56E2;&#x505A;&#x9879;&#x76EE;&#x5230;&#x5927;&#x57CE;&#x5E02;&#x53C2;&#x52A0;&#x6BD4;&#x8D5B;&#xFF0C;&#x9AD8;&#x4E8C;&#x641E;&#x7ADE;&#x8D5B;&#x62FF;&#x5230;&#x6E05;&#x534E;&#x964D;&#x4E00;&#x672C;&#x7EBF;&#xFF0C;&#x9AD8;&#x4E09;&#x5728;&#x52AA;&#x529B;&#x5B66;&#x4E60;&#x6253;&#x597D;&#x6570;&#x7406;&#x57FA;&#x7840;&#x548C;&#x81EA;&#x7531;&#x53D1;&#x5C55;&#x4E4B;&#x95F4;&#x6447;&#x6446;&#x4E0D;&#x5B9A;&#xFF0C;&#x6700;&#x540E;&#x62FF;&#x7740;&#x4E00;&#x4E2A;&#x8D85;&#x4F4E;&#x7684;&#x9AD8;&#x8003;&#x5206;&#x6570;&#x6765;&#x5230;THU&#x3002;</span><br><span class="line"></span><br><span class="line">&#x5927;&#x4E00;&#x4E0A;&#x5B66;&#x671F;&#x8FD8;&#x662F;&#x5EF6;&#x7EED;&#x9AD8;&#x4E09;&#x81EA;&#x7531;&#x6563;&#x6F2B;&#x7684;&#x4E60;&#x60EF;&#xFF0C;&#x5230;&#x5904;&#x542C;&#x8BB2;&#x5EA7;&#xFF0C;&#x5B66;&#x6821;&#x5468;&#x8FB9;&#x901B;&#x901B;&#x5403;&#x5403;&#x3002;&#x52A0;&#x4E4B;&#x6570;&#x7406;&#x57FA;&#x7840;&#x8584;&#x5F31;&#x7EBF;&#x4EE3;&#x5FAE;&#x79EF;&#x5206;&#x671F;&#x4E2D;&#x4F4E;&#x5230;&#x60E8;&#x4E0D;&#x5FCD;&#x7779;&#xFF0C;&#x9042;&#x9000;&#x7EBF;&#x4EE3;&#xFF0C;&#x9000;&#x6587;&#x7D20;&#x8BFE;&#x3002;&#x5FAE;&#x79EF;&#x5206;&#x7531;&#x4E8E;&#x795E;&#x5947;&#x7684;&#x539F;&#x56E0;&#x5F04;&#x9519;&#x671F;&#x672B;&#x8003;&#x8BD5;&#x65F6;&#x95F4;&#xFF0C;&#x9042;&#x6302;&#x5FAE;&#x79EF;&#x5206;&#x3002;&#x77ED;&#x6682;&#x8131;&#x5355;&#xFF0C;&#x4ED6;&#x559C;&#x6B22;&#x7684;&#x53EA;&#x662F;&#x9AD8;&#x4E00;&#x793E;&#x56E2;&#x6BD4;&#x8D5B;&#x65F6;&#x77ED;&#x6682;&#x4E86;&#x89E3;&#x7684;&#x3001;&#x60F3;&#x8C61;&#x4E2D;&#x7684;&#x6211;&#x3002;&#x4E0D;&#x8FC7;&#x73B0;&#x5728;&#x56DE;&#x60F3;&#x8D77;&#x5F53;&#x65F6;&#x4E00;&#x8D77;&#x901B;&#x5929;&#x575B;&#x3001;&#x722C;&#x957F;&#x57CE;&#x3001;&#x4E00;&#x8D77;&#x8E72;&#x4E0B;&#x6765;&#x9759;&#x9759;&#x5730;&#x89C2;&#x5BDF;&#x4E00;&#x53EA;&#x5C0F;&#x87B3;&#x8782;&#x7684;&#x60C5;&#x666F;&#xFF0C;&#x8FD8;&#x662F;&#x5F88;&#x7F8E;&#x597D;&#x3002;</span><br><span class="line"></span><br><span class="line">&#x5927;&#x4E00;&#x4E0B;&#x5B66;&#x671F;&#x81EA;&#x89C9;&#x8FF7;&#x832B;&#xFF0C;&#x5C1D;&#x8BD5;&#x5BFB;&#x627E;&#x65B9;&#x5411;&#x3002;&#x715E;&#x6709;&#x4ECB;&#x4E8B;&#x5730;&#x8054;&#x7CFB;&#x51FA;&#x56FD;&#x4E2D;&#x4ECB;&#xFF0C;&#x60CA;&#x52A8;&#x7239;&#x5A18;&#x548C;&#x8001;&#x5E08;&#x5BFC;&#x5458;&#xFF0C;&#x6700;&#x540E;&#x4E0D;&#x4E86;&#x4E86;&#x4E4B;&#x3002;&#x60F3;&#x8981;&#x5165;&#x4F0D;&#xFF0C;&#x665A;&#x4E0A;&#x5750;&#x5728;&#x7D2B;&#x64CD;&#x88AB;&#x7535;&#x8BDD;&#x90A3;&#x5934;&#x7684;&#x7239;&#x9A82;&#x5F97;&#x72D7;&#x8840;&#x55B7;&#x5934;&#x3002;&#x5728;&#x8BF4;&#x670D;&#x4E86;&#x7236;&#x6BCD;&#x7537;&#x7968;&#x7B49;&#x6240;&#x6709;&#x4EBA;&#x4E4B;&#x540E;&#xFF0C;&#x6CA1;&#x6709;&#x6700;&#x7EC8;&#x8BF4;&#x670D;&#x81EA;&#x5DF1;&#x3002;&#x7B2C;&#x4E00;&#x6B21;&#x505A;&#x793E;&#x4F1A;&#x5B9E;&#x8DF5;&#x3002;&#x8131;&#x5355;&#x3002;</span><br><span class="line"></span><br><span class="line">&#x90A3;&#x4E2A;&#x56F0;&#x5883;&#x5927;&#x6982;&#x6301;&#x7EED;&#x534A;&#x5E74;&#xFF0C;&#x5F88;&#x62BD;&#x8C61;&#x3001;&#x5F88;&#x77EB;&#x60C5;&#xFF0C;&#x6BD5;&#x7ADF;&#x6211;&#x4E5F;&#x6CA1;&#x6709;&#x9047;&#x5230;&#x4EB2;&#x4EBA;&#x79BB;&#x4E16;&#x6216;&#x91CD;&#x5927;&#x632B;&#x6298;&#x5565;&#x7684;&#xFF0C;&#x4F46;&#x5374;&#x771F;&#x5B9E;&#x53EF;&#x611F;&#xFF0C;&#x6211;&#x4E00;&#x76F4;&#x5728;&#x60F3;&#x529E;&#x6CD5;&#x8D70;&#x51FA;&#x6765;&#x3002;&#x5927;&#x4E8C;&#x4E0A;&#x63A5;&#x89E6;&#x4E86;&#x7985;&#x5B66;&#xFF0C;&#x548C;&#x4E00;&#x4F4D;&#x8001;&#x5E08;&#x804A;&#x5929;&#xFF0C;&#x5DF4;&#x62C9;&#x5DF4;&#x62C9;&#x8BF4;&#x4E86;&#x4E00;&#x5806;&#x201C;&#x6211;&#x4E5F;&#x60F3;&#x52AA;&#x529B;&#x5B66;&#x4E60;&#x4F46;&#x5C31;&#x662F;&#x6CA1;&#x6709;&#x52A8;&#x529B;&#x201D;&#x4E91;&#x4E91;&#x3002;&#x8001;&#x5E08;&#xFF1A;&#x90A3;&#x6211;&#x4E5F;&#x6CA1;&#x6709;&#x529E;&#x6CD5;&#x554A;&#xFF0C;&#x4E5F;&#x6CA1;&#x6709;&#x4E00;&#x4E2A;&#x6309;&#x94AE;&#xFF0C;&#x6211;&#x4E00;&#x6309;&#x4F60;&#x5C31;&#x4F1A;&#x52AA;&#x529B;&#x90A3;&#x79CD;&#x3002;&#x90A3;&#x4F1A;&#x513F;&#x611F;&#x89C9;&#x88AB;&#x201C;&#x70B9;&#x5316;&#x201D;&#x4E86;&#xFF0C;&#x5F00;&#x59CB;&#x52AA;&#x529B;&#x5B66;&#x4E60;&#x3002;&#x81EA;&#x5DF1;&#x4E00;&#x76F4;&#x5728;&#x627E;&#x5BFB;&#x8D70;&#x51FA;&#x56F0;&#x5883;&#x7684;&#x65B9;&#x6CD5;&#x3002;&#x201C;&#x9E21;&#x5C3E;&#x9152;&#x7597;&#x6CD5;&#x201D;&#x8FD8;&#x6709;&#x51A5;&#x60F3;&#x3001;&#x63A5;&#x89E6;&#x5FC3;&#x7406;&#x5B66;&#x3001;&#x756A;&#x8304;&#x5DE5;&#x4F5C;&#x6CD5;&#x3001;&#x5199;&#x65E5;&#x8BB0;&#x3001;&#x770B;&#x4E66;&#x3001;&#x5728;&#x624B;&#x673A;&#x4E0A;&#x542C;&#x4E00;&#x4E9B;&#x97F3;&#x9891;&#x8BFE;&#x7B49;&#x7B49;&#x3002;&#x5FD8;&#x4E86;&#x4EC0;&#x4E48;&#x65F6;&#x5019;&#xFF0C;&#x5C31;&#x8D70;&#x51FA;&#x6765;&#x4E86;&#x3002;</span><br><span class="line"></span><br><span class="line">&#x5927;&#x4E8C;&#x4E0B;&#x6211;&#x5E26;&#x961F;&#x6D77;&#x5916;&#x5B9E;&#x8DF5;&#xFF0C;&#x521A;&#x56DE;&#x56FD;&#x5C31;&#x75AB;&#x60C5;&#x4E86;&#xFF0C;&#x8FD8;&#x597D;&#x56DE;&#x6765;&#x65E9;&#x3002;&#x75AB;&#x60C5;&#x5728;&#x5BB6;&#xFF0C;&#x6211;&#x7CFB;&#x7EDF;&#x5730;&#x6574;&#x7406;&#x603B;&#x7ED3;&#x4E86;&#x4E00;&#x5E74;&#x4EE5;&#x6765;&#x7684;&#x7ECF;&#x5386;&#xFF0C;&#x6108;&#x53D1;&#x53D1;&#x73B0;&#x81EA;&#x5DF1;&#x5728;&#x63A2;&#x7D22;&#x81EA;&#x5DF1;&#x548C;&#x4ED6;&#x4EBA;&#x7684;&#x6240;&#x601D;&#x6240;&#x60F3;&#x65B9;&#x9762;&#x611F;&#x5174;&#x8DA3;&#x3002;&#x60F3;&#x8F6C;&#x5FC3;&#x7406;&#x7CFB;&#xFF0C;&#x7236;&#x6BCD;&#x4E0D;&#x540C;&#x610F;&#xFF0C;&#x671F;&#x95F4;&#x4E5F;&#x6709;&#x51E0;&#x6B21;&#x4EA4;&#x6D41;&#xFF0C;&#x6700;&#x7EC8;&#x672A;&#x9042;&#x3002;&#x73B0;&#x5728;&#x60F3;&#x60F3;&#x53EF;&#x80FD;&#x4E5F;&#x662F;&#x81EA;&#x5DF1;&#x4E0D;&#x591F;&#x575A;&#x6301;&#x7684;&#x7F18;&#x6545;&#x5427;&#x3002;</span><br><span class="line"></span><br><span class="line">&#x5927;&#x4E09;&#x4E0A;&#x3002;&#x4E4B;&#x524D;&#x7684;&#x7EE9;&#x70B9;&#x770B;&#x8D77;&#x6765;&#x662F;&#x9010;&#x5B66;&#x671F;&#x4E0A;&#x5347;&#xFF0C;&#x7136;&#x800C;&#x56F0;&#x96BE;&#x7684;&#x8BFE;&#x90FD;&#x88AB;&#x6211;&#x9000;&#x6389;&#x4E86;&#x65E9;&#x665A;&#x8981;&#x8865;&#xFF0C;&#x8FD9;&#x5B66;&#x671F;&#x5C31;&#x6709;&#x4E09;&#x95E8;&#x786C;&#x8BFE;&#x3002;&#x53D1;&#x73B0;&#x4E86;&#x81EA;&#x5DF1;&#x5728;&#x6559;&#x5B66;&#x65B9;&#x9762;&#x7684;&#x5174;&#x8DA3;&#xFF0C;&#x4F46;&#x662F;&#x8BFE;&#x592A;&#x591A;&#x6CA1;&#x65F6;&#x95F4;&#x652F;&#x6559;&#x3002;&#x8FD8;&#x662F;&#x7EE7;&#x7EED;&#x53C2;&#x52A0;&#x4EE3;&#x8868;&#x961F;&#x7684;&#x8BAD;&#x7EC3;&#xFF0C;&#x8FD0;&#x52A8;&#x65F6;&#x5185;&#x5561;&#x80BD;&#x7684;&#x91CA;&#x653E;&#x3001;&#x80FD;&#x505A;&#x81EA;&#x5DF1;&#x64C5;&#x957F;&#x4E00;&#x4E9B;&#x7684;&#x4E8B;&#x60C5;&#x3001;&#x4EE5;&#x53CA;&#x548C;&#x961F;&#x53CB;&#x4EEC;&#x7684;&#x793E;&#x4F1A;&#x8054;&#x7ED3;&#x53EF;&#x80FD;&#x662F;&#x6211;&#x8BAD;&#x7EC3;&#x7684;&#x52A8;&#x529B;&#x3002;&#x5206;&#x624B;&#x3002;&#x5F00;&#x59CB;&#x8003;&#x8651;&#x5E76;&#x6253;&#x542C;&#x672A;&#x6765;&#x7684;&#x53D1;&#x5C55;&#x65B9;&#x5411;&#xFF1A;&#x6559;&#x80B2;&#x5B66;&#x3001;&#x5FC3;&#x7406;&#x5B66;&#x3001;&#x4E2D;&#x533B;&#x836F;&#x3002;&#x5F53;&#x5B66;&#x6821;&#x8001;&#x5E08;&#xFF1F;&#x5230;&#x504F;&#x8FDC;&#x7684;&#x5730;&#x65B9;&#x652F;&#x6559;&#xFF1F;&#x8BFB;&#x7855;&#x8BFB;&#x535A;&#xFF1F;&#x559C;&#x4E0D;&#x559C;&#x6B22;&#x505A;&#x79D1;&#x7814;&#xFF1F;&#x4ECE;&#x4E8B;&#x5FC3;&#x7406;&#x54A8;&#x8BE2;&#x662F;&#x5426;&#x80FD;&#x6070;&#x996D;&#xFF1F;&#x7136;&#x800C;&#x6C89;&#x4E0D;&#x4E0B;&#x5FC3;&#x5B66;&#x4E60;&#xFF0C;&#x53C8;&#x8D70;&#x5165;&#x4E86;&#x540C;&#x6837;&#x7684;&#x56F0;&#x5883;&#x4E4B;&#x4E2D;&#xFF0C;&#x4E3B;&#x89C2;&#x611F;&#x53D7;&#x548C;&#x5927;&#x4E00;&#x4E0A;&#x51E0;&#x4E4E;&#x5B8C;&#x5168;&#x4E00;&#x6837;&#x3002;&#x5E76;&#x6CA1;&#x6709;&#x7A81;&#x7834;&#x81EA;&#x6211;&#x3002;</span><br><span class="line"></span><br><span class="line">&#x6700;&#x8FD1;&#x7ECF;&#x5E38;&#x89C9;&#x5F97;&#x5B64;&#x72EC;&#x3002;&#x665A;&#x8BFE;&#x4E0B;&#x8BFE;&#x540E;&#x770B;&#x5230;&#x6D77;&#x62A5;&#xFF0C;&#x83AB;&#x540D;&#x5931;&#x843D;&#x3001;&#x83AB;&#x540D;&#x611F;&#x52A8;&#xFF08;&#x5F97;&#x4E0D;&#x4E86;&#x7279;&#x5956;&#x5F97;&#x4E00;&#x4E2A;&#x7279;&#x666E;&#x901A;&#x5956;&#x4E5F;&#x597D;&#xFF09;&#xFF0C;&#x626B;&#x7801;&#x62A5;&#x540D;&#xFF0C;&#x56DE;&#x5BDD;&#x6572;&#x5B57;&#x3002;</span><br><span class="line"></span><br><span class="line">&#x5927;&#x4E00;&#x521A;&#x5165;&#x5B66;&#x65F6;&#xFF0C;&#x4E00;&#x4F4D;&#x5B66;&#x957F;&#xFF08;&#x8FD9;&#x8D27;&#x53EF;&#x4EE5;&#x7B97;&#x5F97;&#x4E0A;&#x6211;&#x7684;&#x4EBA;&#x751F;&#x5BFC;&#x5E08;&#x4E4B;&#x4E00;&#xFF09;&#x66FE;&#x5BF9;&#x6211;&#x8BF4;&#xFF1A;&#x5927;&#x5B66;&#x56DB;&#x5E74;&#x6709;&#x4E94;&#x4EF6;&#x91CD;&#x8981;&#x7684;&#x4E8B;&#xFF0C;&#x5B66;&#x4E60;&#x3001;&#x79D1;&#x7814;&#x3001;&#x793E;&#x5DE5;&#x3001;&#x4F53;&#x80B2;&#x3001;&#x604B;&#x7231;&#xFF0C;&#x7279;&#x5956;&#x9009;&#x624B;&#x4E5F;&#x8BB8;&#x53EF;&#x4EE5;&#x6837;&#x6837;&#x90FD;&#x505A;&#x5F97;&#x597D;&#xFF0C;&#x6211;&#x4EEC;&#x666E;&#x901A;&#x4EBA;&#x4E5F;&#x8BB8;&#x53EA;&#x80FD;&#x9009;&#x4E24;&#x6837;&#xFF0C;&#x4F60;&#x9009;&#x4EC0;&#x4E48;&#xFF1F;&#x5927;&#x5B66;&#x4F59;&#x989D;&#x8FC7;&#x534A;&#xFF0C;&#x76EE;&#x524D;&#x6210;&#x7EE9;&#x4E0D;&#x77E5;&#x6700;&#x7EC8;&#x662F;&#x5426;&#x80FD;&#x8FC7;&#x4FDD;&#x7814;&#x7EBF;&#x3001;&#x79D1;&#x7814;&#x57FA;&#x672C;&#x672A;&#x6D89;&#x8DB3;&#x3001;&#x793E;&#x5DE5;&#x96F6;&#x96F6;&#x6563;&#x6563;&#x6CA1;&#x6DF7;&#x5F97;&#x4E00;&#x4E2A;&#x90E8;&#x957F;&#x3001;&#x4F53;&#x80B2;&#x4E5F;&#x6CA1;&#x4EC0;&#x4E48;&#x62FF;&#x5F97;&#x51FA;&#x624B;&#x7684;&#x5956;&#x3001;&#x604B;&#x7231;&#x8FC7;&#x6700;&#x7EC8;&#x53C8;&#x56DE;&#x5230;&#x539F;&#x70B9;&#x3002;</span><br><span class="line"></span><br><span class="line">&#x4E00;&#x822C;&#x5199;&#x6587;&#x7AE0;&#x662F;&#x8981;&#x5217;&#x63D0;&#x7EB2;&#x7684;&#xFF0C;&#x8FD9;&#x7BC7;&#x5374;&#x662F;&#x788E;&#x788E;&#x5FF5;&#x5199;&#x4E86;&#x4E00;&#x7BC7;&#x7B80;&#x5386;&#xFF08;&#x867D;&#x7136;&#x8FD9;&#x7BC7;&#x7B80;&#x5386;&#x6295;&#x51FA;&#x53BB;&#x4F30;&#x8BA1;&#x6CA1;&#x4E00;&#x4E2A;&#x5355;&#x4F4D;&#x6562;&#x8981;&#x6211;hhh&#xFF09;</span><br><span class="line"></span><br><span class="line">&#x6211;&#x4EEC;&#x5171;&#x4EAB;&#x7740;&#x56ED;&#x5B50;&#x91CC;&#x5927;&#x5B66;&#x751F;&#x7684;&#x559C;&#x60A6;&#x4E0E;&#x70E6;&#x607C;&#xFF0C;&#x65E0;&#x975E;&#x5173;&#x4E4E;&#x6210;&#x7EE9;&#x3001;&#x79D1;&#x7814;&#x3001;&#x611F;&#x60C5;&#x3001;&#x5934;&#x53D1;&#x4E91;&#x4E91;&#xFF0C;&#x6709;&#x65F6;&#x60F3;&#x627E;&#x4EBA;&#x503E;&#x8BC9;&#x90FD;&#x4F1A;&#x72B9;&#x8C6B;&#xFF0C;&#x89C9;&#x5F97;&#x81EA;&#x5DF1;&#x7684;&#x82E6;&#x95F7;&#x592A;&#x8FC7;&#x8001;&#x5957;&#x3002;&#x6211;&#x4EEC;&#x5728;&#x4E00;&#x4E9B;&#x793E;&#x4F1A;&#x5E38;&#x7528;&#x7684;&#x8BC4;&#x4EF7;&#x6807;&#x51C6;&#x4E2D;&#x53EF;&#x80FD;&#x5904;&#x4E8E;&#x6B63;&#x6001;&#x5206;&#x5E03;&#x7684;&#x5E73;&#x5747;&#x503C;&#x9644;&#x8FD1;&#xFF0C;&#x7684;&#x786E;&#x79F0;&#x5F97;&#x4E0A;&#x201C;&#x666E;&#x901A;&#x201D;&#x3002;&#x4F46;&#x6211;&#x7801;&#x5B8C;&#x4E0A;&#x9762;&#x7684;&#x4E00;&#x5806;&#x5B57;&#x4E4B;&#x540E;&#xFF0C;&#x6211;&#x53D1;&#x73B0;&#x81EA;&#x5DF1;&#x662F;&#x201C;&#x7279;&#x522B;&#x201D;&#x7684;&#xFF0C;&#x56E0;&#x4E3A;&#x81EA;&#x5DF1;&#x7684;&#x7ECF;&#x5386;&#x662F;&#x72EC;&#x4E00;&#x65E0;&#x4E8C;&#x7684;&#xFF0C;&#x5728;&#x770B;&#x8FD9;&#x6BB5;&#x6587;&#x5B57;&#x7684;&#x4F60;&#x4E5F;&#x4E00;&#x6837;&#x3002;&#x4E5F;&#x8BB8;&#xFF0C;&#x6211;&#x4EEC;&#x90FD;&#x503C;&#x5F97;&#x4E00;&#x4EFD;&#x201C;&#x7279;&#xB7;&#x666E;&#x901A;&#x201D;&#x5956;&#x5B66;&#x91D1;&#x3002;</span><br></pre></td></tr></table></figure>
<p>18&#x5929;&#x4E4B;&#x524D; <a href="https://closed.social/ordinary/?page=4&amp;per_page=20&amp;sort_by=time##"> 45</a></p>
<p>No. 72</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#x6211;&#x662F;&#x4E00;&#x4E2A;&#x7279;&#x666E;&#x901A;&#x7684;&#x4E00;&#x4E2A;&#x4EBA;&#x3002;</span><br><span class="line">&#x51ED;&#x501F;&#x5BF9;&#x6570;&#x5B66;&#x7684;&#x70ED;&#x7231;&#xFF0C;&#x4ECA;&#x5E74;&#x6765;&#x5230;&#x4E86;&#x56ED;&#x5B50;&#x91CC;&#xFF0C;&#x8FDB;&#x5165;&#x5230;&#x4E86;&#x6570;&#x5B66;&#x7CFB;&#xFF0C;&#x968F;&#x540E;&#x4F53;&#x4F1A;&#x5230;&#x4E86;&#xFF0C;&#x6709;&#x4E9B;&#x4E1C;&#x897F;&#x662F;&#x9700;&#x8981;&#x5929;&#x5206;&#x7684;&#xFF0C;&#x6709;&#x4E9B;&#x4E8B;&#x60C5;&#x4E0D;&#x662F;&#x901A;&#x8FC7;&#x52AA;&#x529B;&#x5C31;&#x53EF;&#x4EE5;&#x5B66;&#x597D;&#x7684;&#x3002;&#x4E00;&#x6574;&#x8282;&#x6570;&#x5B66;&#x5206;&#x6790;&#x8BFE;&#x57FA;&#x672C;&#x4E0A;&#x90FD;&#x542C;&#x4E0D;&#x61C2;&#xFF0C;&#x8BFE;&#x4E0B;&#x6211;&#x9700;&#x8981;&#x82B1;&#x5F88;&#x591A;&#x65F6;&#x95F4;&#x624D;&#x80FD;&#x591F;&#x628A;&#x5B83;&#x5F04;&#x61C2;&#xFF1B;&#x4F5C;&#x4E1A;&#x9898;&#x76EE;&#x5F88;&#x591A;&#x90FD;&#x4E0D;&#x4F1A;&#x5199;&#xFF0C;&#x770B;&#x4E86;&#x770B;&#x5F80;&#x5E74;&#x7684;&#x671F;&#x4E2D;&#x8003;&#x8BD5;&#x9898;&#x76EE;&#xFF0C;&#x679C;&#x7136;&#x4E00;&#x9053;&#x9898;&#x90FD;&#x4E0D;&#x4F1A;&#x5199;&#xFF0C;&#x6211;&#x5F00;&#x59CB;&#x62C5;&#x5FC3;&#x81EA;&#x5DF1;&#x662F;&#x5426;&#x80FD;&#x591F;&#x5728;&#x8003;&#x8BD5;&#x4E2D;&#xFF0C;&#x54EA;&#x6015;&#x5F97;&#x5230;&#x4E00;&#x70B9;&#x70B9;&#x7684;&#x5206;&#x6570;&#xFF0C;&#x5F00;&#x59CB;&#x6000;&#x7591;&#xFF0C;&#x6E90;&#x4E8E;&#x6700;&#x521D;&#x7684;&#x70ED;&#x7231;&#xFF0C;&#x662F;&#x5426;&#x80FD;&#x652F;&#x6491;&#x7740;&#x6211;&#x5EA6;&#x8FC7;&#x88AB;&#x6570;&#x5B66;&#x5206;&#x6790;&#x66B4;&#x6253;&#x7684;&#x65E5;&#x5B50;&#x3002;</span><br><span class="line">&#x6211;&#x662F;&#x73ED;&#x5E72;&#x90E8;&#xFF0C;&#x4F46;&#x662F;&#x5728;&#x67D0;&#x4E9B;&#x95EE;&#x9898;&#x4E0A;&#x6211;&#x6CA1;&#x6709;&#x5904;&#x7406;&#x597D;&#xFF0C;&#x53D7;&#x5230;&#x4E86;&#x4E00;&#x4E9B;&#x540C;&#x5B66;&#x7684;&#x6307;&#x8D23;&#xFF0C;&#x6211;&#x7684;&#x5185;&#x5FC3;&#x4E5F;&#x611F;&#x5230;&#x5341;&#x5206;&#x714E;&#x71AC;&#x3002;&#x6211;&#x672C;&#x6765;&#x5C31;&#x662F;&#x4E00;&#x4E2A;&#x5185;&#x5411;&#x7684;&#x4E0D;&#x5584;&#x4E8E;&#x540C;&#x522B;&#x4EBA;&#x4EA4;&#x5F80;&#x7684;&#x4EBA;&#xFF0C;&#x5728;&#x9762;&#x5BF9;&#x8FD9;&#x4E9B;&#x9700;&#x8981;&#x4E0E;&#x4ED6;&#x4EBA;&#x6C9F;&#x901A;&#x7684;&#x4E8B;&#x60C5;&#x7684;&#x65F6;&#x5019;&#x603B;&#x662F;&#x6FD2;&#x4E34;&#x5D29;&#x6E83;&#x3002;&#x4E00;&#x9762;&#x662F;&#x4E0A;&#x9762;&#x8981;&#x6C42;&#x7684;&#x5728;ddl&#x4E4B;&#x524D;&#x4E0A;&#x62A5;&#x540D;&#x5355;&#xFF0C;&#x4E00;&#x9762;&#x53C8;&#x662F;&#x540C;&#x5B66;&#x4EEC;&#x7684;&#x4E0D;&#x7406;&#x89E3;&#x4E0E;&#x6307;&#x8D23;&#xFF0C;&#x6211;&#x5DE6;&#x53F3;&#x4E3A;&#x96BE;&#xFF0C;&#x4E0D;&#x77E5;&#x9053;&#x8BE5;&#x600E;&#x4E48;&#x529E;&#x3002;</span><br><span class="line">&#x4EE4;&#x6211;&#x611F;&#x5230;&#x7126;&#x8651;&#x7684;&#x8FD8;&#x6709;&#x4F53;&#x80B2;&#x3002;&#x9664;&#x4E86;&#x5B66;&#x4E1A;&#x7684;&#x538B;&#x529B;&#x4E4B;&#x5916;&#xFF0C;&#x4F53;&#x80B2;&#x5BF9;&#x4E8E;&#x6211;&#x6765;&#x8BF4;&#x4E5F;&#x662F;&#x4E00;&#x5757;&#x96BE;&#x5543;&#x7684;&#x9AA8;&#x5934;&#x3002;&#x8FD9;&#x51E0;&#x65E5;&#x6211;&#x6BCF;&#x5929;&#x8BA1;&#x7B97;&#x7740;&#x6211;&#x5728;&#x6BCF;&#x4E2A;&#x9879;&#x76EE;&#x8981;&#x62FF;&#x5230;&#x591A;&#x5C11;&#x5206;&#xFF0C;&#x4F53;&#x80B2;&#x624D;&#x6709;&#x53EF;&#x80FD;&#x53CA;&#x683C;&#x3002;&#x4F46;&#x662F;&#x6B8B;&#x9177;&#x7684;&#x73B0;&#x5B9E;&#x662F;&#xFF0C;&#x6211;&#x6839;&#x672C;&#x53CA;&#x683C;&#x4E0D;&#x4E86;&#x3002;&#x6709;&#x4E9B;&#x9879;&#x76EE;&#x6211;&#x6839;&#x672C;&#x62FF;&#x4E0D;&#x5230;&#x5206;&#x6570;&#xFF0C;&#x6BD4;&#x5982;&#x5F15;&#x4F53;&#x5411;&#x4E0A;&#x548C;&#x8DF3;&#x8FDC;&#x3002;&#x8FD9;&#x8BA9;&#x6211;&#x611F;&#x5230;&#x5341;&#x5206;&#x7126;&#x8651;&#xFF0C;&#x5475;&#xFF0C;&#x6216;&#x8BB8;&#x4F53;&#x80B2;&#x5C06;&#x8981;&#x6210;&#x4E3A;&#x6211;&#x6302;&#x7684;&#x7B2C;&#x4E00;&#x95E8;&#x8BFE;&#x5427;&#x3002;</span><br><span class="line">&#x6211;&#x662F;&#x4E00;&#x4E2A;&#x666E;&#x901A;&#x7684;&#x4EBA;&#xFF0C;&#x666E;&#x901A;&#x7684;&#x989C;&#x503C;&#xFF0C;&#x666E;&#x901A;&#x7684;&#x667A;&#x5546;&#xFF0C;&#x666E;&#x901A;&#x7684;&#x60C5;&#x5546;&#xFF0C;&#x4EE5;&#x53CA;&#x4F53;&#x80B2;&#xFF0C;&#x5E73;&#x6DE1;&#x65E0;&#x5947;&#x3002;</span><br><span class="line">&#x4F46;&#x662F;&#x8FD9;&#x53C8;&#x6709;&#x4EC0;&#x4E48;&#x5462;&#xFF1F;&#x6211;&#x76F8;&#x8C8C;&#x65E0;&#x5947;&#xFF0C;&#x4F46;&#x662F;&#x6211;&#x7684;&#x4E00;&#x4E9B;&#x540C;&#x5B66;&#x5938;&#x6211;&#x53EF;&#x7231;&#xFF0C;&#x6216;&#x8BB8;&#x6BD4;&#x8D77;&#x76F8;&#x8C8C;&#x4E0A;&#x7684;&#x53EF;&#x7231;&#xFF0C;&#x66F4;&#x591A;&#x7684;&#x662F;&#x6211;&#x7684;&#x5185;&#x5FC3;&#x7684;&#x53EF;&#x7231;&#x5427;&#xFF1B;&#x6211;&#x6709;&#x7740;&#x666E;&#x666E;&#x901A;&#x901A;&#x7684;&#x667A;&#x5546;&#xFF0C;&#x4F46;&#x662F;&#x6211;&#x613F;&#x610F;&#x5C3D;&#x81EA;&#x5DF1;&#x6240;&#x80FD;&#x5E2E;&#x52A9;&#x5176;&#x4ED6;&#x4EBA;&#xFF0C;&#x6211;&#x7684;&#x9AD8;&#x4E2D;&#x540C;&#x5B66;&#x6765;&#x95EE;&#x6211;&#x9898;&#x76EE;&#x7684;&#x65F6;&#x5019;&#x6211;&#x4F1A;&#x4E50;&#x4E8E;&#x4E3A;&#x4ED6;&#x4EEC;&#x89E3;&#x7B54;&#xFF1B;&#x6B63;&#x5982;&#x516C;&#x4F17;&#x53F7;&#x63A8;&#x6587;&#x91CC;&#x9762;&#x8BF4;&#x7684;&#xFF0C;&#x6211;&#x7684;&#x4F53;&#x80B2;&#x5E38;&#x5E74;&#x4E0D;&#x53CA;&#x683C;&#xFF0C;1000&#x7C73;&#x548C;3000&#x7C73;&#x4E00;&#x76F4;&#x90FD;&#x662F;&#x4E0D;&#x53CA;&#x683C;&#x7684;&#xFF0C;&#x4F46;&#x662F;&#x8FD9;&#x5E76;&#x4E0D;&#x59A8;&#x788D;&#x6211;&#x70ED;&#x7231;&#x4F53;&#x80B2;&#xFF0C;&#x6211;&#x559C;&#x6B22;&#x957F;&#x8DD1;&#xFF0C;&#x52A0;&#x5165;&#x4E86;&#x9A6C;&#x534F;&#xFF0C;&#x8FD8;&#x52A0;&#x5165;&#x4E86;&#x5176;&#x4ED6;&#x4F53;&#x80B2;&#x7C7B;&#x793E;&#x56E2;&#xFF1B;&#x6211;&#x8FD9;&#x4E2A;&#x4EBA;&#x666E;&#x666E;&#x901A;&#x901A;&#xFF0C;&#x4F46;&#x6211;&#x613F;&#x610F;&#x5949;&#x732E;&#x81EA;&#x6211;&#xFF0C;&#x62A5;&#x540D;&#x4E86;&#x8BB8;&#x591A;&#x5FD7;&#x613F;&#x6D3B;&#x52A8;&#x3002;</span><br><span class="line">&#x666E;&#x901A;&#x53C8;&#x6709;&#x4EC0;&#x4E48;&#x5173;&#x7CFB;&#x5462;&#xFF1F;&#x6BCF;&#x4E2A;&#x4EBA;&#x603B;&#x80FD;&#x5728;&#x8FD9;&#x4E2A;&#x4E16;&#x754C;&#x4E0A;&#x627E;&#x5230;&#x5C5E;&#x4E8E;&#x666E;&#x901A;&#x7684;&#x81EA;&#x5DF1;&#x7684;&#x4E00;&#x5757;&#x5C0F;&#x7530;&#x5730;&#x5427;&#x3002;</span><br></pre></td></tr></table></figure>
<p>18&#x5929;&#x4E4B;&#x524D; <a href="https://closed.social/ordinary/?page=4&amp;per_page=20&amp;sort_by=time##"> 27</a></p>
<p>No. 71</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#x5443;...</span><br><span class="line">&#x5C31;&#x6CA1;&#x4EC0;&#x4E48;&#x53EF;&#x8BF4;&#x7684;...</span><br><span class="line">&#x5C31;&#x8FD9;&#x6837;&#x5427;...</span><br></pre></td></tr></table></figure>
<p>18&#x5929;&#x4E4B;&#x524D; <a href="https://closed.social/ordinary/?page=4&amp;per_page=20&amp;sort_by=time##"> 12</a></p>
<p>No. 69</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#x79BB;&#x8C31;&#xFF0C;&#x5C31;&#x79BB;&#x8C31;&#x3002;&#x6211;&#x662F;&#x4E00;&#x4E2A;&#x4EC0;&#x4E48;&#x90FD;&#x4E0D;&#x4F1A;&#x7684;&#x83DC;&#x83DC;&#xFF0C;&#x662F;&#x4E00;&#x4E2A;&#x53EA;&#x5E0C;&#x671B;&#x80FD;&#x987A;&#x5229;&#x6BD5;&#x4E1A;&#x7684;&#x666E;&#x901A;five&#xFF0C;&#x5E0C;&#x671B;&#x5728;&#x6DF1;&#x7814;&#x9662;&#x666E;&#x901A;&#x7684;disco&#x6211;&#x4EEC;&#x666E;&#x901A;&#x7684;&#x6447;&#xFF0C;&#x8C22;&#x8C22;&#x5927;&#x5BB6;&#x8BF7;&#x6295;&#x6211;&#x4E00;&#x7968;&#x3002;</span><br></pre></td></tr></table></figure>
<p>18&#x5929;&#x4E4B;&#x524D; <a href="https://closed.social/ordinary/?page=4&amp;per_page=20&amp;sort_by=time##"> 17</a></p>
<p>No. 68</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#x65E0;&#x540D;&#x6C0F;&#xFF0C;&#x5973;&#xFF0C;&#x6765;&#x81EA;&#x4E1C;&#x5357;&#x6CBF;&#x6D77;&#x67D0;&#x7701;&#x7684;10086&#x7EBF;&#x57CE;&#x5E02;&#xFF0C;&#x73B0;&#x5728;&#x8F6F;&#x9662;&#x8BFB;&#x7855;&#x3002;</span><br><span class="line">&#x8EAB;&#x5728;&#x534E;&#x6E05;&#xFF0C;&#x4F46;&#x534E;&#x6E05;&#x4E0D;care&#x3002;&#x8BD5;&#x56FE;&#x586B;&#x7279;&#x666E;&#x901A;&#x8BC4;&#x59D4;&#x95EE;&#x5377;&#x7684;&#x65F6;&#x5019;&#xFF0C;&#x7B2C;&#x4E00;&#x9898;&#x7684;&#x9009;&#x9879;&#x201C;&#x5927;&#x4E00;&#x3001;&#x5927;&#x4E8C;&#x3001;&#x5927;&#x4E09;&#x3001;&#x5927;&#x56DB;&#x3001;&#x5176;&#x4ED6;&#x201D; &#x6211;&#x5C31;&#x6E05;&#x695A;&#x5730;&#x8BA4;&#x77E5;&#x5230;&#x81EA;&#x5DF1;&#x5DF2;&#x7ECF;&#x88AB;&#x5212;&#x5206;&#x5230;&#x4E86;&#x5982;&#x6B64;&#x666E;&#x901A;&#x53C8;&#x5C0F;&#x4F17;&#x800C;&#x4E0D;&#x914D;&#x62E5;&#x6709;&#x59D3;&#x540D;&#x7684;&#x7FA4;&#x4F53;&#x3002;&#x90A3;&#x6211;&#x4E0D;&#x5982;&#x81EA;&#x8350;&#x62A5;&#x540D;&#x5F97;&#x4E86;&#x3002;</span><br><span class="line">&#x9AD8;&#x8003;&#x5931;&#x5229;&#xFF0C;&#x618B;&#x7740;&#x4E00;&#x53E3;&#x6C14;&#x4ECE;&#x666E;&#x901A;211&#x4FDD;&#x7814;&#x6765;&#x4E86;&#x534E;&#x6E05;&#x3002;&#x4F46;&#x5165;&#x5B66;&#x4EE5;&#x6765;&#x5230;&#x73B0;&#x5728;&#xFF0C;&#x4E0D;&#x77E5;&#x9053;&#x591A;&#x5C11;&#x6B21;&#x95EE;&#x8FC7;&#x81EA;&#x5DF1;&#xFF1A;&#x6765;&#x5230;&#x534E;&#x6E05;&#xFF0C;&#x4F60;&#x914D;&#x5417;&#xFF1F;</span><br><span class="line">&#x8FD8;&#x79EF;&#x6781;&#x4E50;&#x89C2;&#x7684;&#x65F6;&#x5019;&#x6211;&#x80FD;&#x7ED9;&#x51FA;&#x7684;&#x56DE;&#x7B54;&#x662F;&#xFF1A;&#x65E2;&#x7136;&#x901A;&#x8FC7;&#x4E86;&#x5165;&#x5B66;&#x8003;&#x6838;&#xFF0C;&#x8BF4;&#x660E;&#x6211;&#x914D;&#x3002;&#x7136;&#x800C;&#x5728;&#x67D0;&#x6B21;&#x548C;&#x540C;&#x5B66;&#x7684;&#x5916;&#x51FA;&#x6D3B;&#x52A8;&#x65F6;&#xFF0C;&#x65C1;&#x4EBA;&#x5F97;&#x77E5;&#x6211;&#x4EEC;&#x662F;&#x534E;&#x6E05;&#x5B66;&#x751F;&#x540E;&#x505A;&#x51FA;&#x8BC4;&#x8BBA;&#x201C;&#x8FD9;&#x4E9B;&#x4EE5;&#x540E;&#x90FD;&#x662F;&#x54B1;&#x4EEC;&#x7684;&#x56FD;&#x5BB6;&#x680B;&#x6881;&#x201D;&#xFF0C;dbq&#x6211;&#x4E0D;&#x914D;&#x3002;&#x81EA;&#x6B64;&#x4E0D;&#x6562;&#x7A7F;&#x7740;&#x5370;&#x7740;&#x534E;&#x6E05;logo&#x7684;&#x8863;&#x670D;&#x51FA;&#x95E8;&#xFF0C;&#x5C31;&#x7B97;&#x88AB;&#x95EE;&#x8D77;&#x4E5F;&#x8FD8;&#x80FD;&#x63A8;&#x8131;&#x81EA;&#x5DF1;&#x662F;&#x9694;&#x58C1;&#x7684;&#xFF0C;&#x53EA;&#x751F;&#x6015;&#x81EA;&#x5DF1;&#x7ED9;&#x534E;&#x6E05;&#x4E22;&#x8138;&#xFF0C;&#x751F;&#x6015;&#x81EA;&#x5DF1;&#x7684;&#x884C;&#x4E3A;&#x4E3E;&#x6B62;&#x4E0E;&#x5916;&#x754C;&#x671F;&#x5F85;&#x7684;&#x534E;&#x6E05;&#x5B66;&#x751F;&#x4E0D;&#x7B26;&#x3002;</span><br><span class="line">&#x6210;&#x7EE9;&#x4E2D;&#x6E38;&#x504F;&#x4E0A;&#xFF0C;&#x793E;&#x5DE5;&#x53EA;&#x5F53;&#x5E26;&#x201C;&#x526F;&#x201D;&#x5B57;&#x5934;&#x7684;&#x3002;&#x7814;&#x4E00;&#x65F6;&#x62B1;&#x7740;&#x61A7;&#x61AC;&#x7684;&#x5FC3;&#x60C5;&#x53C2;&#x52A0;&#x8FC7;&#x5408;&#x5531;&#x961F;&#xFF0C;&#x5468;&#x56F4;&#x5168;&#x662F;&#x71A0;&#x71A0;&#x751F;&#x8F89;&#x7684;&#x672C;&#x79D1;&#x751F;&#x4EEC;&#xFF0C;&#x81EA;&#x6211;&#x4ECB;&#x7ECD;&#x90FD;&#x4E0D;&#x597D;&#x610F;&#x601D;&#x8BF4;&#x81EA;&#x5DF1;&#x4ECA;&#x5E74;&#x7814;&#x51E0;&#xFF0C;&#x6280;&#x672F;&#x4E0A;&#x662F;&#x840C;&#x65B0;&#x83DC;&#x9E21;&#xFF0C;&#x5E74;&#x9F84;&#x4E0A;&#x5374;&#x8FD8;&#x5F97;&#x88AB;&#x53EB;&#x5B66;&#x59D0;&#xFF0C;&#x5728;&#x8FD9;&#x6837;&#x522B;&#x626D;&#x7684;&#x4E0D;&#x5E73;&#x8861;&#x4E2D;&#x65E0;&#x6CD5;&#x878D;&#x5165;&#x8FD9;&#x4E2A;&#x4E0D;&#x5C5E;&#x4E8E;&#x81EA;&#x5DF1;&#x7684;&#x7FA4;&#x4F53;&#xFF0C;&#x6700;&#x7EC8;&#x66F4;&#x50CF;&#x662F;&#x62FF;&#x4E86;&#x4E00;&#x5F20;&#x89C2;&#x4F17;&#x7968;&#xFF0C;&#x5FAE;&#x7B11;&#x65C1;&#x89C2;&#x3001;&#x5165;&#x5E2D;&#x79BB;&#x5EA7;&#xFF0C;&#x4E5F;&#x4E0D;&#x4F1A;&#x6709;&#x4EBA;&#x8BB0;&#x5F97;&#x3002;&#x65F6;&#x5E38;&#x8273;&#x7FA1;&#x7740;&#x8FD8;&#x5728;&#x8BFB;&#x672C;&#x79D1;&#x7684;&#x4E00;&#x4E9B;&#x4EBA;&#xFF0C;&#x89C1;&#x8FC7;&#x4E16;&#x9762;&#xFF0C;&#x5B8F;&#x56FE;&#x5F85;&#x5C55;&#x3001;&#x5FC3;&#x91CC;&#x6709;&#x671F;&#x5F85;&#xFF0C;&#x773C;&#x91CC;&#x6709;&#x661F;&#x5149;&#x3002;&#x53CD;&#x6B63;&#x53EA;&#x8981;&#x8FD8;&#x5E74;&#x8F7B;&#xFF0C;&#x4E0D;&#x7BA1;&#x73B0;&#x5728;&#x662F;&#x6EE1;&#x610F;&#x8FD8;&#x662F;&#x4E0D;&#x6EE1;&#x610F;&#xFF0C;&#x90FD;&#x8FD8;&#x6709;&#x9009;&#x62E9;&#x7684;&#x4F59;&#x5730;&#xFF0C;&#x90FD;&#x8FD8;&#x6709;&#x8BD5;&#x9519;&#x7684;&#x53EF;&#x80FD;&#x3002;</span><br><span class="line">&#x800C;&#x6211;&#x4EEC;&#x5462;&#xFF1F;&#x548C;&#x540C;&#x9F84;&#x4EBA;&#x5403;&#x996D;&#xFF0C;&#x804A;&#x7684;&#x6700;&#x591A;&#x7684;&#x53EA;&#x6709;&#x5DE5;&#x4F5C;&#x3001;&#x4E70;&#x623F;&#x3001;&#x85AA;&#x8D44;&#x3001;&#x5730;&#x4F4D;&#xFF0C;&#x8BFB;&#x535A;&#x7684;&#x7EA0;&#x7ED3;&#x6559;&#x804C;&#x8FD8;&#x662F;&#x7814;&#x7A76;&#x9662;&#xFF0C;&#x8BFB;&#x7855;&#x7684;&#x7EA0;&#x7ED3;&#x9009;&#x8C03;&#x8FD8;&#x662F;&#x4F01;&#x4E1A;&#xFF0C;&#x628A;&#x4F34;&#x4FA3;&#x60C5;&#x51B5;&#x3001;&#x7236;&#x6BCD;&#x517B;&#x8001;&#x3001;&#x5C0F;&#x5B69;&#x6559;&#x80B2;&#xFF0C;&#x7EDF;&#x7EDF;&#x8003;&#x8651;&#x5728;&#x5185;&#x3002;&#x6DF7;&#x5230;&#x73B0;&#x5728;&#x4E0D;&#x5BB9;&#x6613;&#xFF0C;&#x4E00;&#x65E6;&#x8D39;&#x52B2;&#x529B;&#x6C14;&#x5F97;&#x5230;&#x4E86;&#xFF0C;&#x5C31;&#x53D8;&#x5F97;&#x7236;&#x6BCD;&#x90A3;&#x4E00;&#x8F88;&#x540C;&#x6837;&#x7684;&#x8C28;&#x614E;&#x3001;&#x8FFD;&#x6C42;&#x7A33;&#x5B9A;&#xFF0C;&#x4ECE;&#x4E0D;&#x6562;&#x628A;&#x4E0D;&#x5207;&#x5B9E;&#x9645;&#x7684;&#x68A6;&#x60F3;&#x4ED8;&#x8BF8;&#x73B0;&#x5B9E;&#xFF0C;&#x4ECE;&#x4E0D;&#x6562;&#x4E70;&#x9AD8;&#x98CE;&#x9669;&#x7684;&#x57FA;&#x91D1;&#x80A1;&#x7968;&#xFF0C;&#x751F;&#x6015;&#x73B0;&#x5728;&#x6240;&#x62E5;&#x6709;&#x7684;&#x3001;&#x597D;&#x4E0D;&#x5BB9;&#x6613;&#x5F97;&#x5230;&#x7684;&#x4E1C;&#x897F;&#xFF0C;&#x4F1A;&#x767D;&#x767D;&#x5931;&#x53BB;&#x3002;&#x8C01;&#x8FD8;&#x6562;&#x8C08;&#x7406;&#x60F3;&#xFF1F;&#x6700;&#x6015;&#x542C;&#x5230;&#x7684;&#x4E00;&#x53E5;&#x8BDD;&#x662F;&#xFF1A;&#x201C;&#x505A;&#x8FD9;&#x4E2A;&#x6709;&#x7528;&#x5417;&#xFF1F;&#x201D;&#x660E;&#x660E;&#x8FD8;&#x8BB0;&#x5F97;&#x81EA;&#x5DF1;&#x586B;&#x62A5;&#x5FD7;&#x613F;&#x9009;&#x62E9;&#x4E13;&#x4E1A;&#x65F6;&#x7684;&#x7B03;&#x5B9A;&#xFF0C;&#x660E;&#x660E;&#x8FD8;&#x8BB0;&#x5F97;&#x68A6;&#x60F3;&#x662F;&#x4EC0;&#x4E48;&#xFF0C;&#x4F46;&#x56E0;&#x4E3A;&#x8D8A;&#x6765;&#x8D8A;&#x77E5;&#x9053;&#x51E0;&#x4E4E;&#x4E0D;&#x53EF;&#x80FD;&#x5B9E;&#x73B0;&#xFF0C;&#x4E14;&#x66F4;&#x56E0;&#x4E3A;&#x6015;&#x88AB;&#x73B0;&#x5B9E;&#x4E3B;&#x4E49;&#x5632;&#x7B11;&#x800C;&#x6CA1;&#x6709;&#x52C7;&#x6C14;&#x628A;&#x8FD9;&#x6837;ideal&#x7684;&#x4E8B;&#x60C5;&#x63D0;&#x4E0A;&#x7EB8;&#x9762;&#x3002;&#x6700;&#x7EC8;&#x4E5F;&#x8FD8;&#x662F;&#x6309;&#x90E8;&#x5C31;&#x73ED;&#x7684;&#x8D70;&#x4E00;&#x6B65;&#x770B;&#x4E00;&#x6B65;&#xFF0C;&#x628A;&#x80FD;&#x505A;&#x7684;&#x505A;&#x597D;&#xFF0C;&#x5728;&#x6709;&#x9650;&#x7684;&#x9009;&#x62E9;&#x7A7A;&#x95F4;&#x91CC;&#x7CBE;&#x5FC3;&#x6311;&#x9009;&#x5C3D;&#x53EF;&#x80FD;&#x662F;&#x5BF9;&#x7684;&#x9053;&#x8DEF;&#x3002;</span><br><span class="line">&#x5373;&#x4F7F;&#x5230;&#x4E86;&#x8BFB;&#x7814;&#x9636;&#x6BB5;&#xFF0C;&#x542C;&#x4E86;&#x4ECE;&#x591A;&#x5C11;&#x4EBA;&#x5634;&#x91CC;&#x8BF4;&#x51FA;&#x7684;&#x201C;GPA&#x4E0D;&#x91CD;&#x8981;&#x201D;&#xFF0C;&#x4E5F;&#x4ECD;&#x7136;&#x4F1A;&#x56E0;&#x4E3A;GPA&#x6BD4;&#x4E0D;&#x4E0A;&#x8EAB;&#x8FB9;&#x7684;&#x670B;&#x53CB;&#x800C;&#x611F;&#x5230;&#x5931;&#x843D;&#x3002;&#x4E00;&#x672C;&#x6B63;&#x7ECF;&#x7684;&#x8FA9;&#x89E3;&#x201C;GPA&#x662F;&#x95E8;&#x69DB;&#x201D;&#xFF0C;&#x6709;&#x65F6;&#x4E5F;&#x80FD;&#x6210;&#x529F;&#x628A;&#x5BF9;&#x65B9;&#x8BF4;&#x670D;&#xFF0C;&#x4F46;&#x81EA;&#x5DF1;&#x5F88;&#x6E05;&#x695A;&#x5730;&#x77E5;&#x9053;&#x8FD9;&#x53EA;&#x662F;&#x56E0;&#x4E3A;&#x6CA1;&#x6709;&#x4E00;&#x4E2A;&#x6E05;&#x6670;&#x7684;&#x81EA;&#x6211;&#x8861;&#x91CF;&#x6307;&#x6807;&#xFF0C;&#x201C;&#x6211;&#x8981;&#x7684;&#x5230;&#x5E95;&#x662F;&#x4EC0;&#x4E48;&#x201D;&#x8FD9;&#x53E5;&#x8BDD;&#x59CB;&#x7EC8;&#x56DE;&#x7B54;&#x4E0D;&#x4E0A;&#x6765;&#xFF0C;&#x4F46;&#x53C8;&#x56E0;&#x4E3A;&#x4E60;&#x60EF;&#x4E86;&#x4ECE;&#x5C0F;&#x7684;&#x7ADE;&#x4E89;&#x5F0F;&#x6559;&#x80B2;&#xFF0C;&#x4EFF;&#x4F5B;&#x5FC5;&#x987B;&#x8981;&#x8FCE;&#x5408;&#x4E00;&#x4E2A;&#x5916;&#x754C;&#x7684;&#x5927;&#x4F17;&#x7684;&#x6807;&#x51C6;&#x624D;&#x80FD;&#x8BC1;&#x660E;&#x81EA;&#x5DF1;&#x7B97;&#x4E0D;&#x7B97;&#x4F18;&#x79C0;&#x3002;&#x5982;&#x679C;&#x80FD;&#x6E05;&#x695A;&#x5730;&#x8BA4;&#x77E5;&#x5230;&#x81EA;&#x5DF1;&#x80FD;&#x505A;&#x4EC0;&#x4E48;&#xFF0C;&#x60F3;&#x505A;&#x4EC0;&#x4E48;&#xFF0C;&#x4E14;&#x771F;&#x5728;&#x67D0;&#x4E9B;&#x65B9;&#x9762;&#x6709;&#x7279;&#x522B;&#x7684;&#x957F;&#x5904;&#xFF0C;&#x5012;&#x4E5F;&#x7406;&#x5E94;&#x81EA;&#x4FE1;&#x4E86;&#xFF0C;&#x7136;&#x800C;&#x4E0A;&#x8FF0;&#x90FD;&#x6CA1;&#x6709;&#x53D1;&#x751F;&#x3002;&#x7A76;&#x7ADF;&#x5E94;&#x5F53;&#x627F;&#x8BA4;&#x81EA;&#x5DF1;&#x5C31;&#x662F;&#x666E;&#x666E;&#x901A;&#x901A;&#x3001;&#x82B8;&#x82B8;&#x4F17;&#x751F;&#x7684;&#x4E00;&#x5458;&#xFF0C;&#x8FD8;&#x662F;&#x5E94;&#x5F53;&#x4F9D;&#x7136;&#x6709;&#x6240;&#x671F;&#x5F85;&#xFF0C;&#x4E5F;&#x786E;&#x5B9E;&#x662F;&#x96BE;&#x9898;&#x4E86;&#x3002;</span><br><span class="line">&#x8BB0;&#x5F97;&#x4E2D;&#x5C9B;&#x6566;&#x300A;&#x5C71;&#x6708;&#x8BB0;&#x300B;&#x91CC;&#x7684;&#x4E00;&#x6BB5;&#x8BDD;&#xFF1A;&#x201C;&#x56E0;&#x4E3A;&#x5BB3;&#x6015;&#x81EA;&#x5DF1;&#x5E76;&#x975E;&#x660E;&#x73E0;&#x800C;&#x4E0D;&#x6562;&#x523B;&#x82E6;&#x7422;&#x78E8;&#xFF0C;&#x53C8;&#x56E0;&#x4E3A;&#x6709;&#x51E0;&#x5206;&#x76F8;&#x4FE1;&#x81EA;&#x5DF1;&#x662F;&#x660E;&#x73E0;&#xFF0C;&#x800C;&#x4E0D;&#x80FD;&#x4E0E;&#x74E6;&#x783E;&#x788C;&#x788C;&#x4E3A;&#x4F0D;&#x3002;&#x5982;&#x4ECA;&#x60F3;&#x8D77;&#x6765;&#xFF0C;&#x6211;&#x771F;&#x662F;&#x7A7A;&#x8D39;&#x4E86;&#x81EA;&#x5DF1;&#x90A3;&#x4E00;&#x70B9;&#x4EC5;&#x6709;&#x7684;&#x624D;&#x80FD;&#xFF0C;&#x5F92;&#x7136;&#x5728;&#x53E3;&#x5934;&#x4E0A;&#x5356;&#x5F04;&#x7740;&#x4EC0;&#x4E48;&#x201C;&#x4EBA;&#x751F;&#x4E00;&#x4E8B;&#x4E0D;&#x4E3A;&#x5219;&#x592A;&#x957F;&#xFF0C;&#x6B32;&#x4E3A;&#x4E00;&#x4E8B;&#x5219;&#x592A;&#x77ED;&#x201D;&#x7684;&#x8B66;&#x53E5;&#xFF0C;&#x53EF;&#x4E8B;&#x5B9E;&#x662F;&#xFF0C;&#x552F;&#x6050;&#x66B4;&#x9732;&#x624D;&#x534E;&#x4E0D;&#x8DB3;&#x7684;&#x5351;&#x602F;&#x7684;&#x754F;&#x60E7;&#xFF0C;&#x548C;&#x538C;&#x6076;&#x94BB;&#x7814;&#x523B;&#x82E6;&#x7684;&#x60F0;&#x6020;&#xFF0C;&#x5C31;&#x662F;&#x6211;&#x7684;&#x5168;&#x90E8;&#x4E86;&#x3002;&#x4F46;&#x8FDC;&#x6BD4;&#x6211;&#x7F3A;&#x4E4F;&#x624D;&#x534E;&#xFF0C;&#x53EF;&#x7531;&#x4E8E;&#x4E13;&#x5FF5;&#x78E8;&#x783A;&#x800C;&#x6210;&#x5C31;&#x5802;&#x5802;&#x8BD7;&#x5BB6;&#x7684;&#xFF0C;&#x4E5F;&#x9887;&#x4E0D;&#x4E4F;&#x5176;&#x4EBA;&#x3002;&#x6210;&#x4E3A;&#x8001;&#x864E;&#x540E;&#x7684;&#x4ECA;&#x5929;&#xFF0C;&#x6211;&#x624D;&#x603B;&#x7B97;&#x770B;&#x5230;&#x4E86;&#x8FD9;&#x4E00;&#x70B9;&#x3002;&#x201D;</span><br></pre></td></tr></table></figure>
<p>18&#x5929;&#x4E4B;&#x524D; <a href="https://closed.social/ordinary/?page=4&amp;per_page=20&amp;sort_by=time##"> 76</a></p>
<p>No. 67</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#x4E3A;&#x4E86;&#x5F97;&#x5230;&#x660E;&#x4FE1;&#x7247;&#x8FD9;&#x4E2A;&#x666E;&#x901A;&#x7684;&#x60F3;&#x6CD5;&#x5199;&#x4E0B;&#x8FD9;&#x6BB5;&#x8BDD;&#x3002;</span><br><span class="line">&#x662F;&#x5BB6;&#x91CC;&#x7B2C;&#x4E00;&#x4E2A;&#x5927;&#x5B66;&#x751F;&#xFF0C;&#x5374;&#x6CA1;&#x6709;&#x5BF9;&#x5927;&#x5B66;&#x751F;&#x6D3B;&#x65E0;&#x6240;&#x9002;&#x4ECE;&#x3002;&#x672C;&#x79D1;&#x56DB;&#x5E74;&#x5C1D;&#x8BD5;&#x8FC7;&#x793E;&#x5DE5;&#x5B9E;&#x8DF5;&#x5FD7;&#x613F;&#xFF0C;&#x5374;&#x6CA1;&#x5728;&#x4EFB;&#x4F55;&#x4E00;&#x65B9;&#x9762;&#x8D70;&#x5411;&#x9AD8;&#x5904;&#xFF1B;&#x6302;&#x8FC7;&#x79D1;&#x6210;&#x7EE9;&#x4E2D;&#x7B49;&#x6CA1;&#x6709;&#x4E00;&#x4F5C;&#x4ECE;&#x672A;&#x62FF;&#x8FC7;&#x79D1;&#x521B;&#x76F8;&#x5173;&#x7684;&#x5956;&#x5B66;&#x91D1;&#xFF0C;&#x5374;&#x83AB;&#x540D;&#x559C;&#x6B22;&#x5B66;&#x672F;&#x3002;&#x4E00;&#x76F4;&#x89C9;&#x5F97;&#x5927;&#x5B66;&#x6559;&#x80B2;&#x7684;&#x610F;&#x4E49;&#x5728;&#x4E8E;&#x627E;&#x5230;&#x81EA;&#x5DF1;&#xFF0C;&#x968F;&#x5FC3;&#x7684;&#x672C;&#x79D1;&#x56DB;&#x5E74;&#x91CC;&#x6240;&#x6709;&#x666E;&#x901A;&#x65E5;&#x5E38;&#x7684;&#x7ECF;&#x5386;&#x90FD;&#x5728;&#x6559;&#x4F1A;&#x6211;&#x8FD9;&#x4E00;&#x70B9;&#x3002;&#x5982;&#x679C;&#x666E;&#x901A;&#x4E5F;&#x53EF;&#x4EE5;&#x8BA9;&#x81EA;&#x5DF1;&#x5BFB;&#x627E;&#x5230;&#x4E16;&#x95F4;&#x7F8E;&#x597D;&#xFF0C;&#x4E3A;&#x4EC0;&#x4E48;&#x975E;&#x8981;&#x7AD9;&#x5728;&#x805A;&#x5149;&#x706F;&#x4E0B;</span><br></pre></td></tr></table></figure>
<p>No. 66</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#x6211;&#x7684;&#x666E;&#x901A;&#x5E94;&#x8BE5;&#x5C31;&#x662F;</span><br><span class="line">&#x4E3A;&#x4E86;&#x6709;&#x8DA3;&#x7684;&#x4E8B;&#x53D1;&#x670B;&#x53CB;&#x5708;&#x5927;&#x5BB6;&#x54C8;&#x54C8;&#x54C8;</span><br><span class="line">&#x4E3A;&#x4E86;&#x6C14;&#x6124;&#x7684;&#x4E8B;&#x53D1;&#x670B;&#x53CB;&#x5708;&#x5927;&#x5BB6;&#x4E00;&#x8D77;&#x6C14;</span><br><span class="line">&#x4E3A;&#x4E86;&#x89C9;&#x5F97;&#x81EA;&#x5DF1;&#x597D;&#x50CF;&#x8FD8;&#x662F;&#x6709;&#x70B9;&#x4E0D;&#x4E00;&#x6837;&#x7684;&#x4E8B;&#x60C5;&#x53D1;&#x670B;&#x53CB;&#x5708;&#xFF0C;&#x5E0C;&#x671B;&#x5F97;&#x5230;&#x51E0;&#x4E2A;&#x8D5E;&#x548C;&#x8BC4;&#x8BBA;&#xFF0C;&#x7136;&#x540E;&#x5C31;&#x6EE1;&#x8DB3;&#x4E86;</span><br><span class="line"></span><br><span class="line">&#x4EE5;&#x53CA;&#x6E38;&#x620F;&#x6253;&#x4E0D;&#x8D62;&#x5B9E;&#x4E60;&#x7533;&#x4E0D;&#x5230;&#x79D1;&#x7814;&#x4E0D;&#x4F1A;&#x505A;&#x672A;&#x6765;&#x6CA1;&#x65B9;&#x5411;&#x7684;&#x65F6;&#x5019;&#x9009;&#x62E9;&#x5403;&#x5403;&#x5403;&#x7761;&#x7761;&#x7761;</span><br><span class="line"></span><br><span class="line">&#x660E;&#x5929;&#x53C8;&#x662F;&#x4E2A;&#x65B0;&#x592A;&#x9633;&#xFF0C;&#x4E0D;&#x662F;&#x5417;&#xFF1F;</span><br></pre></td></tr></table></figure>
<p>18&#x5929;&#x4E4B;&#x524D; <a href="https://closed.social/ordinary/?page=5&amp;per_page=20&amp;sort_by=time##"> 15</a></p>
<p>No. 65</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#x6211;&#x4EEC;&#x666E;&#x901A;&#x4EBA;&#xFF0C;&#x8981;&#x6709;&#x666E;&#x901A;&#x9B42;&#xFF01;</span><br></pre></td></tr></table></figure>
<p>18&#x5929;&#x4E4B;&#x524D; <a href="https://closed.social/ordinary/?page=5&amp;per_page=20&amp;sort_by=time##"> 12</a></p>
<p>No. 64</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#x5728;&#x8FD9;&#x91CC;&#x6211;&#x6CA1;&#x6709;&#x62FF;&#x8FC7;&#x4EFB;&#x4F55;&#x5956;&#x9879;&#xFF0C;&#x4EFB;&#x4F55;&#x8363;&#x8A89;&#xFF0C;&#x4E5F;&#x6CA1;&#x6709;&#x5904;&#x5206;&#xFF0C;&#x5728;&#x7ECF;&#x5386;&#x7684;&#x6240;&#x6709;&#x8868;&#x683C;&#x7684;&#x4E2A;&#x4EBA;&#x5956;&#x60E9;&#x680F;&#xFF0C;&#x90FD;&#x662F;&#x7559;&#x767D;&#x7684;&#x201C;&#x65E0;&#x201D;</span><br></pre></td></tr></table></figure>
<p>18&#x5929;&#x4E4B;&#x524D; <a href="https://closed.social/ordinary/?page=5&amp;per_page=20&amp;sort_by=time##"> 55</a></p>
<p>No. 63</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#x9AD8;&#x8003;&#x5C0F;&#x6709;&#x5931;&#x8BEF;&#xFF0C;&#x8FDB;&#x4E86;&#x4E00;&#x4E2A;&#x9119;&#x89C6;&#x94FE;&#x4E2D;&#x6E38;&#x7684;&#x9662;&#x7CFB;&#x3002;&#x66FE;&#x7ECF;&#x4FE1;&#x8A93;&#x65E6;&#x65E6;&#x60F3;&#x8F6C;&#x7CFB;&#xFF0C;&#x5374;&#x4E0D;&#x4E86;&#x4E86;&#x4E4B;&#x3002;&#x820D;&#x53CB;&#x4E5F;&#x5F88;&#x4F5B;&#x7CFB;&#xFF0C;&#x5927;&#x5BB6;&#x4E00;&#x8D77;&#x4F5B;&#x7CFB;&#x3002;</span><br><span class="line">&#x65E9;&#x8BFE;&#x62A5;&#x4E86;&#x4E0D;&#x53BB;&#xFF0C;&#x4E0A;&#x8BFE;&#x53BB;&#x4E86;&#x4E0D;&#x542C;&#x3002;&#x4F5C;&#x4E1A;&#x9760;&#x4E92;&#x52A9;&#xFF0C;&#x8003;&#x8BD5;&#x9760;&#x7A81;&#x51FB;&#x3002;&#x793E;&#x56E2;&#x53C2;&#x52A0;&#x4E86;&#x4E00;&#x4E2A;&#x3002;&#x4F53;&#x80B2;&#x6D3B;&#x52A8;&#x3001;&#x73ED;&#x7EA7;&#x6D3B;&#x52A8;&#x4E0D;&#x60F3;&#x53BB;&#xFF0C;&#x53EA;&#x60F3;&#x7761;&#x89C9;&#x548C;&#x73A9;&#x624B;&#x673A;&#x3002;</span><br><span class="line">&#x63A8;&#x7814;&#x65F6;&#x7CFB;&#x91CC;&#x540E;50%&#xFF0C;&#x4E13;&#x4E1A;&#x8BFE;&#x7EE9;&#x70B9;&#x60E8;&#x4E0D;&#x5FCD;&#x7779;&#xFF0C;&#x4E13;&#x6392;&#x4F4E;&#x4E8E;&#x603B;&#x6392;&#xFF0C;&#x6CA1;&#x62FF;&#x8FC7;&#x4EFB;&#x4F55;&#x5B66;&#x4E60;&#x76F8;&#x5173;&#x7684;&#x5956;&#x5B66;&#x91D1;&#x3002;</span><br><span class="line">&#x5C31;&#x8FD9;&#x6837;&#x6D51;&#x6D51;&#x5669;&#x5669;&#x8FC7;&#x4E86;&#x56DB;&#x5E74;&#xFF0C;&#x6BD5;&#x4E1A;&#x7ED3;&#x675F;&#x3002;&#x518D;&#x89C1;THU&#xFF0C;&#x540E;&#x4F1A;&#x6709;&#x671F;&#x3002;</span><br></pre></td></tr></table></figure>
<p>18&#x5929;&#x4E4B;&#x524D; <a href="https://closed.social/ordinary/?page=5&amp;per_page=20&amp;sort_by=time##"> 28</a></p>
<p>No. 62</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#x6BCF;&#x5929;&#x542C;&#x7740;&#x56FE;&#x4E66;&#x9986;&#x7684;&#x95ED;&#x9986;&#x94C3;&#x58F0;&#x79BB;&#x5F00;&#xFF1B;&#x56E0;&#x4E3A;&#x65E9;&#x9910;&#x8BA1;&#x5212;&#xFF0C;&#x524D;&#x4E0D;&#x4E45;&#x542C;&#x4E86;&#x4E00;&#x6B21;&#x5F00;&#x9986;&#x94C3;&#x58F0;&#xFF0C;&#x8FD8;&#x633A;&#x5F00;&#x5FC3;&#x3002;</span><br><span class="line">thy&#x7684;&#x6982;&#x7EDF;&#x65E5;&#x5E38;&#x770B;&#x4E0D;&#x61C2;&#xFF0C;&#x4E00;&#x8282;&#x8BFE;&#x540E;&#x8981;&#x82B1;&#x4E24;&#x4E2A;&#x5C0F;&#x65F6;&#x627E;&#x4ED6;&#x7684;&#x601D;&#x8DEF;&#xFF0C;&#x624D;&#x80FD;&#x4E86;&#x89E3;&#x4ED6;&#x8BB2;&#x4E86;&#x5565;&#x3002;&#x4F5C;&#x4E1A;&#x53C8;&#x662F;&#x53E6;&#x4E00;&#x56DE;&#x4E8B;&#x4E86;&#xFF1B;&#x4E0D;&#x8FC7;&#x603B;&#x7B97;&#x662F;&#x6709;&#x70B9;&#x6536;&#x83B7;&#xFF0C;&#x8FD9;&#x79CD;&#x611F;&#x89C9;&#x4E5F;&#x633A;&#x4E0D;&#x9519;&#x3002;</span><br><span class="line">&#x5728;&#x793E;&#x56E2;&#x5E72;&#x6D3B;&#x513F;&#xFF0C;&#x548C;&#x522B;&#x4EBA;&#x8BF4;&#x8D77;&#x8FD9;&#x6BB5;&#x7ECF;&#x5386;&#x7684;&#x65F6;&#x5019;&#xFF0C;&#x4EFF;&#x4F5B;&#x5145;&#x6EE1;&#x96C4;&#x5FC3;&#x58EE;&#x5FD7;&#xFF0C;&#x53EF;&#x662F;&#x5728;&#x793E;&#x56E2;&#x4F19;&#x4F34;&#x63D0;&#x5230;&#x4E00;&#x4E2A;&#x975E;&#x5E38;&#x68D2;&#x4F46;&#x662F;&#x633A;&#x590D;&#x6742;&#x7684;&#x65B0;&#x70B9;&#x5B50;&#x7684;&#x65F6;&#x5019;&#xFF0C;&#x7B2C;&#x4E00;&#x4E2A;&#x60F3;&#x5230;&#x7684;&#x662F;&#xFF1A;&#x8FD9;&#x597D;&#x9EBB;&#x70E6;&#x554A;&#xFF0C;&#x4E00;&#x5B9A;&#x4F1A;&#x82B1;&#x6389;&#x6211;&#x4E0D;&#x5C11;&#x65F6;&#x95F4;&#xFF0C;&#x4E0D;&#x60F3;&#x505A;&#x5462;&#x3002;&#x8FD9;&#x5927;&#x6982;&#x662F;&#x4E00;&#x79CD;&#x5FC3;&#x53E3;&#x4E0D;&#x4E00;&#x5427;&#x3002;</span><br><span class="line">&#x5199;&#x65E5;&#x8BB0;&#x3002;&#x5199;&#x4E86;&#x597D;&#x591A;&#xFF0C;&#x73B0;&#x5728;&#x770B;&#x53BB;&#x5E74;&#x7684;&#x65E5;&#x8BB0;&#xFF0C;&#x89C9;&#x5F97;&#x597D;&#x7070;&#x6697;&#x554A;&#xFF0C;&#x800C;&#x524D;&#x5E74;&#x7684;&#x65E5;&#x8BB0;&#x5C31;&#x597D;&#x5F88;&#x591A;&#xFF1B;&#x867D;&#x7136;&#x90A3;&#x65F6;&#x5019;&#x9AD8;&#x4E09;&#xFF0C;&#x53EF;&#x662F;&#x6211;&#x662F;&#x613F;&#x610F;&#x56DE;&#x5230;&#x9AD8;&#x4E09;&#x7684;&#x554A;&#x3002;</span><br><span class="line">&#x8FD9;&#x4E2A;&#x5730;&#x65B9;&#xFF0C;&#x592A;&#x538B;&#x6291;&#x4E86;&#x3002;</span><br><span class="line">&#x800C;&#x4E14;&#x4E91;&#x4E5F;&#x6CA1;&#x6709;&#x5BB6;&#x4E61;&#x7684;&#x4E91;&#x597D;&#x770B;&#x3002;</span><br><span class="line"></span><br><span class="line">&#x6709;&#x65F6;&#x5019;&#x5FC3;&#x7406;&#x6D3B;&#x52A8;&#x5C31;&#x50CF;&#x5750;&#x8FC7;&#x5C71;&#x8F66;&#xFF0C;&#x4E00;&#x4F1A;&#x513F;&#x96BE;&#x8FC7;&#x4E00;&#x4F1A;&#x513F;&#x53C8;&#x5F00;&#x5FC3;&#x8D77;&#x6765;&#x3002;&#x96BE;&#x8FC7;&#x7684;&#x539F;&#x56E0;&#x5462;&#xFF0C;&#x4E3B;&#x8981;&#x5C31;&#x662F;&#x9EBB;&#x70E6;&#x7684;&#x4EBA;&#x9645;&#x5173;&#x7CFB;&#x3002;&#x5F00;&#x5FC3;&#x5C31;&#x5927;&#x6982;&#x662F;&#x548C;&#x4F19;&#x4F34;&#x4E00;&#x8D77;&#x73A9;&#x800D;&#x804A;&#x5929;&#x3002;</span><br></pre></td></tr></table></figure>
<p>18&#x5929;&#x4E4B;&#x524D; <a href="https://closed.social/ordinary/?page=5&amp;per_page=20&amp;sort_by=time##"> 15</a></p>
<p>No. 61</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#x6211;&#x6709;&#x5728;&#x666E;&#x901A;&#x5730;&#x4EAB;&#x53D7;&#x666E;&#x901A;&#x7684;&#x6BCF;&#x4E00;&#x5929;&#x3002;</span><br></pre></td></tr></table></figure>
<p>18&#x5929;&#x4E4B;&#x524D; <a href="https://closed.social/ordinary/?page=5&amp;per_page=20&amp;sort_by=time##"> 18</a></p>
<p>No. 60</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#x597D;&#x6C14;&#x54E6;&#xFF0C;&#x8FDE;&#x60F3;&#x88AB;&#x5927;&#x5BB6;&#x8BA4;&#x4E3A;&#x666E;&#x901A;&#x90FD;&#x505A;&#x4E0D;&#x5230;&#x5462;</span><br></pre></td></tr></table></figure>
<p>18&#x5929;&#x4E4B;&#x524D; <a href="https://closed.social/ordinary/?page=5&amp;per_page=20&amp;sort_by=time##"> 18</a></p>
<p>No. 59</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#x6765;&#x5199;&#x4E00;&#x6BB5;&#x201C;&#x7279;&#x4E0D;&#x666E;&#x901A;&#x201D;&#x7684;&#x81EA;&#x6211;&#x4ECB;&#x7ECD;hhh</span><br><span class="line">&#x9AD8;&#x8003;&#x540D;&#x6B21;&#x5F88;&#x9760;&#x524D;&#xFF0C;&#x62A5;&#x4E86;&#x4E00;&#x4E2A;&#x5F53;&#x65F6;&#x5206;&#x6570;&#x5F88;&#x9AD8;&#x7684;&#x4E13;&#x4E1A;&#x3002;</span><br><span class="line">&#x5728;&#x7B49;&#x5BA4;&#x53CB;&#x7684;&#x65F6;&#x5019;&#x88AB;&#x62C9;&#x53BB;&#x827A;&#x672F;&#x56E2;&#x9762;&#x8BD5;&#xFF0C;&#x6700;&#x7EC8;&#x8FDB;&#x5165;&#x4E86;&#x827A;&#x672F;&#x56E2;&#x3002;</span><br><span class="line">&#x867D;&#x7136;&#x7B2C;&#x4E00;&#x5E74;gpa&#x5F88;&#x4F4E;&#xFF0C;&#x800C;&#x4E14;&#x662F;&#x5012;&#x6570;&#x7B2C;&#x4E00;&#xFF0C;&#x5927;&#x4E8C;&#x7684;&#x65F6;&#x5019;&#x8FD8;&#x662F;&#x53BB;&#x505A;&#x4E86;srt&#x3002;</span><br><span class="line">&#x867D;&#x7136;srt&#x505A;&#x5F97;&#x5E76;&#x4E0D;&#x6109;&#x5FEB;&#xFF0C;&#x62FF;&#x4E86;&#x4E2A;A-&#x3010;&#x636E;&#x6211;&#x6240;&#x77E5;srt&#x4E00;&#x822C;&#x7ED9;A&#x66F4;&#x5E38;&#x89C1;&#x4E9B;&#x3011;&#xFF0C;&#x5199;&#x4E86;&#x7BC7;paper&#xFF0C;&#x559C;&#x63D0;reject&#x3002;</span><br><span class="line">&#x5927;&#x4E00;&#x7ED3;&#x675F;&#x540E;&#x6210;&#x4E3A;&#x4E86;TP-Link&#xFF0C;&#x4E24;&#x4E2A;&#x4EBA;&#x5728;&#x4E00;&#x8D77;&#x7684;&#x7B2C;&#x4E00;&#x4E2A;&#x5B66;&#x671F;&#x603B;&#x662F;&#x5435;&#x67B6;&#xFF0C;&#x56E0;&#x4E3A;&#x8BA8;&#x538C;ta&#x4E27;&#x4E27;&#x7684;&#x8FD8;&#x4E0D;&#x8DDF;&#x6211;&#x8BF4;&#xFF0C;&#x56E0;&#x4E3A;ta&#x4F3C;&#x4E4E;&#x548C;&#x6211;&#x4E0D;&#x80FD;&#x90A3;&#x4E48;in sync&#xFF0C;&#x8BA9;ta&#x53BB;&#x516D;&#x9662;&#x770B;&#x4E86;&#x770B;&#xFF0C;&#x5728;&#x8BA8;&#x538C;&#x539F;&#x4E13;&#x4E1A;&#x7684;&#x540C;&#x65F6;&#x8BD5;&#x4E86;&#x8BD5;&#x522B;&#x7684;&#x4E13;&#x4E1A;&#x7684;&#x4E13;&#x4E1A;&#x8BFE;&#xFF0C;&#x4F46;&#x7A81;&#x7136;&#x7075;&#x5149;&#x4E00;&#x73B0;&#x53D1;&#x73B0;&#x4E86;&#x6CA1;&#x8BD5;&#x8FC7;&#x7684;&#x7B2C;&#x4E09;&#x4E2A;&#x4E13;&#x4E1A;&#x3002;</span><br><span class="line">&#x6211;&#x8F6C;&#x7CFB;&#x4E86;&#xFF0C;&#x8F6C;&#x7CFB;&#x4E4B;&#x524D;&#x548C;&#x539F;&#x6765;&#x7684;&#x73ED;&#x4E3B;&#x4EFB;&#x5927;&#x5435;&#x4E00;&#x67B6;&#xFF0C;&#x62FF;&#x7740;&#x8F85;&#x5BFC;&#x5458;&#x7B97;&#x7684;&#x6240;&#x6709;gpa&#x4E2D;&#x6570;&#x503C;&#x6700;&#x9AD8;&#x6392;&#x540D;&#x6700;&#x9760;&#x524D;&#x7684;&#x53BB;&#x9762;&#x8BD5;&#xFF0C;&#x5BF9;&#x9762;&#x9662;&#x7CFB;&#x5F88;&#x5305;&#x5BB9;&#x7684;&#x6536;&#x4E86;&#xFF0C;&#x8FD9;&#x4E2A;&#x9662;&#x7CFB;&#x5F88;&#x5305;&#x5BB9;&#x7684;&#x6536;&#x4E86;&#x3002;</span><br><span class="line">&#x9662;&#x7CFB;&#x7684;&#x4E13;&#x4E1A;&#x8BFE;&#x4E0D;&#x96BE;&#xFF0C;&#x4F46;&#x662F;&#x6108;&#x53D1;&#x611F;&#x89C9;&#x81EA;&#x5DF1;&#x4EC0;&#x4E48;&#x4E5F;&#x4E0D;&#x4F1A;&#xFF0C;&#x7ADE;&#x4E89;&#x529B;&#x5F88;&#x5F31;&#xFF0C;&#x53C8;&#x5F00;&#x59CB;&#x9009;&#x522B;&#x7684;&#x9662;&#x7CFB;&#x7684;&#x8BFE;&#xFF0C;&#x518D;&#x5B66;&#x4E00;&#x904D;&#x5FAE;&#x79EF;&#x5206;&#x5E76;&#x6CA1;&#x6709;&#x6539;&#x53D8;&#x6211;&#x5B66;&#x4E0D;&#x4F1A;&#x7684;&#x4E8B;&#x5B9E;&#xFF0C;&#x4F46;&#x662F;&#x6BD4;&#x539F;&#x6765;&#x591A;&#x4F1A;&#x4E86;&#x4E00;&#x4E9B;&#x3002;</span><br><span class="line">&#x5728;&#x65B0;&#x9662;&#x7CFB;&#x505A;&#x4E86;srt&#xFF0C;&#x4F46;&#x53D1;&#x73B0;&#x81EA;&#x5DF1;&#x4E0D;&#x559C;&#x6B22;&#x8FD9;&#x4E2A;&#x65B9;&#x5411;&#xFF0C;&#x559C;&#x6B22;&#x7684;&#x65B9;&#x5411;&#x53C8;&#x7F3A;&#x4E4F;&#x7ADE;&#x4E89;&#x529B;&#xFF0C;&#x8FD8;&#x597D;&#x53D1;&#x73B0;&#x4E86;&#x65B0;&#x7684;&#x65B9;&#x5411;&#xFF0C;&#x4E5F;&#x4E0B;&#x51B3;&#x5FC3;&#x53BB;&#x5C1D;&#x8BD5;&#x8FD9;&#x4E2A;&#x65B0;&#x7684;&#x65B9;&#x5411;&#x3002;</span><br><span class="line">&#x5728;&#x5927;&#x5B66;&#x8FC7;&#x53BB;&#x7684;&#x4E09;&#x5E74;&#x91CC;gpa&#x76F4;&#x7EBF;&#x4E0A;&#x5347;&#x3001;&#x4E2A;&#x4EBA;&#x611F;&#x89C9;&#x5E45;&#x5EA6;&#x8FD8;&#x633A;&#x5927;&#xFF0C;&#x4F46;&#x4ECD;&#x7136;&#x62FF;&#x4E0D;&#x5230;&#x9662;&#x7CFB;&#x7684;&#x201C;&#x5B66;&#x4E60;&#x8FDB;&#x6B65;&#x5956;&#x201D;&#xFF0C;&#x4E89;&#x53D6;&#x4E0B;&#x4E00;&#x6B21;&#x8FDB;&#x6B65;&#x5230;&#x201C;&#x5B66;&#x4E1A;&#x4F18;&#x79C0;&#x201D;&#x5427;&#xFF0C;&#x4E0D;&#x8FC7;&#x770B;&#x8D77;&#x6765;&#x5F88;&#x96BE;&#xFF0C;&#x56E0;&#x4E3A;&#x9009;&#x4E86;&#x592A;&#x591A;&#x8BA9;&#x81EA;&#x5DF1;&#x53D8;&#x5F97;technical&#x7684;&#x8BFE;&#x7A0B;&#xFF0C;&#x4E3A;&#x4E86;&#x6709;&#x4E66;&#x8BFB;&#x3002;</span><br><span class="line">&#x548C;npy&#x5728;&#x4E00;&#x8D77;&#x4E24;&#x5E74;&#x534A;&#x4E86;&#xFF0C;&#x867D;&#x7136;&#x4ED6;&#x6210;&#x7EE9;&#x4E00;&#x822C;&#xFF0C;&#x4F46;&#x91CD;&#x4FEE;&#x90FD;&#x8FC7;&#x4E86;&#xFF0C;&#x4E5F;&#x6709;&#x4E86;&#x559C;&#x6B22;&#x7684;&#x65B9;&#x5411;&#x3002;</span><br><span class="line">&#x6211;&#x89C9;&#x5F97;&#x6211;&#x8FD9;&#x51E0;&#x5E74;&#x4E00;&#x70B9;&#x90FD;&#x4E0D;&#x666E;&#x901A;&#xFF0C;&#x56E0;&#x4E3A;&#x6211;&#x5C1D;&#x8BD5;&#x4E86;&#x597D;&#x591A;&#x4E13;&#x4E1A;&#x65B9;&#x5411;&#x8D8A;&#x6765;&#x8D8A;&#x660E;&#x786E;&#x81EA;&#x5DF1;&#x60F3;&#x505A;&#x5565;&#xFF0C;&#x6709;&#x4E00;&#x4E2A;&#x53EF;&#x4EE5;&#x5171;&#x540C;&#x8FDB;&#x6B65;&#x6709;&#x5171;&#x540C;&#x76EE;&#x6807;&#x7684;npy&#xFF0C;&#x867D;&#x7136;&#x6211;&#x62FF;&#x8FC7;&#x5012;&#x7B2C;&#x4E00;&#x4F46;&#x5DF2;&#x7ECF;&#x6709;&#x4E86;&#x4E2A;&#x4EBA;&#x6EE1;&#x610F;&#x7684;&#x8FDB;&#x6B65;&#xFF0C;&#x4E5F;&#x56E0;&#x4E3A;&#x5237;&#x591C;&#x592A;&#x591A;&#x53BB;&#x4E09;&#x9662;&#x770B;&#x8FC7;&#x5FC3;&#x810F;&#x53D1;&#x73B0;&#x662F;&#x865A;&#x60CA;&#x4E00;&#x573A;&#xFF0C;&#x6BCF;&#x5468;&#x90FD;&#x53EF;&#x4EE5;&#x53BB;&#x827A;&#x672F;&#x56E2;&#x5FEB;&#x4E50;&#x6392;&#x7EC3;&#xFF0C;&#x7136;&#x540E;&#x5FEB;&#x4E50;&#x6F14;&#x51FA;&#xFF0C;&#x5373;&#x4F7F;&#x6211;&#x5728;&#x6572;&#x4E0B;&#x8FD9;&#x4E9B;&#x5B57;&#x7684;&#x65F6;&#x5019;&#x4ECD;&#x7136;&#x88AB;ddl&#x8FFD;&#x6740;&#xFF0C;&#x4E5F;&#x65F6;&#x5E38;&#x7A81;&#x7136;&#x4E27;&#xFF0C;&#x4F46;&#x8FDC;&#x6CA1;&#x6709;&#x5927;&#x4E00;&#x90A3;&#x4E48;&#x4E27;&#xFF0C;&#x800C;&#x4E14;&#x6211;&#x8FD8;&#x597D;&#x597D;&#x7684;&#x6D3B;&#x7740;&#x3002;</span><br><span class="line">&#x76F8;&#x6BD4;&#x4E8E;&#x592A;&#x591A;&#x4EBA;&#x6211;&#x5DF2;&#x7ECF;&#x8DB3;&#x591F;&#x4E0D;&#x666E;&#x901A;&#x4E86;&#xFF0C;&#x56E0;&#x6B64;&#x6211;&#x53EA;&#x662F;&#x60F3;&#x6765;&#x968F;&#x4FBF;&#x5199;&#x5199;&#xFF0C;&#x8C22;&#x8C22;&#x4F60;&#x770B;&#x5230;&#x8FD9;&#x91CC;&#x3002;</span><br></pre></td></tr></table></figure>
<p>18&#x5929;&#x4E4B;&#x524D; <a href="https://closed.social/ordinary/?page=5&amp;per_page=20&amp;sort_by=time##"> 22</a></p>
<p>No. 58</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#x5927;&#x5B66;&#x4E94;&#x5E74;&#x6CA1;&#x62FF;&#x8FC7;&#x4EFB;&#x4F55;&#x5956;&#x9879;&#xFF0C;&#x5230;&#x4E86;&#x5927;&#x4E09;&#x672B;&#x7684;&#x65F6;&#x5019;&#x624D;&#x77E5;&#x9053;&#x56E0;&#x4E3A;&#x6709;&#x4E0D;&#x53CA;&#x683C;&#x8BFE;&#x7A0B;&#x800C;&#x6CA1;&#x6709;&#x4FDD;&#x7814;&#x8D44;&#x683C;&#x3002;&#x793E;&#x6050;&#xFF0C;&#x5E38;&#x5E74;&#x5B85;&#x5BBF;&#x820D;&#xFF0C;&#x5728;&#x516C;&#x5171;&#x573A;&#x5408;&#x6700;&#x591A;&#x53EA;&#x80FD;&#x505C;&#x7559;4&#x5C0F;&#x65F6;&#xFF0C;&#x5426;&#x5219;&#x4F1A;&#x7531;&#x5FC3;&#x7406;&#x4E0D;&#x9002;&#x5347;&#x7EA7;&#x4E3A;&#x751F;&#x7406;&#x4E0D;&#x9002;&#x3002;&#x56E0;&#x6B64;&#x4ECE;&#x6CA1;&#x53C2;&#x52A0;&#x8FC7;&#x96C6;&#x4F53;&#x6D3B;&#x52A8;&#xFF0C;&#x4E5F;&#x61D2;&#x5F97;&#x8DDF;&#x540C;&#x5B66;&#x670B;&#x53CB;&#x8054;&#x7EDC;&#xFF0C;&#x9EBB;&#x70E6;&#x3002;</span><br></pre></td></tr></table></figure>
<p>18&#x5929;&#x4E4B;&#x524D; <a href="https://closed.social/ordinary/?page=5&amp;per_page=20&amp;sort_by=time##"> 21</a></p>
<p>No. 57</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#x554A;&#xFF0C;&#x5728;&#x820D;&#x53CB;&#x5B66;&#x8BFE;&#x5916;&#x4E1C;&#x897F;&#x7684;&#x65F6;&#x5019;&#x8FD8;&#x5728;&#x8D76;&#x4F5C;&#x4E1A;&#x3002;&#x770B;&#x5230;&#x4ED6;&#x4EEC;&#x5377;&#x7EE9;&#x70B9;&#x81EA;&#x5DF1;&#x53EA;&#x80FD;&#x5F53;&#x4E00;&#x6761;&#x54B8;&#x9C7C;&#x3002;&#x968F;&#x624B;&#x5237;&#x4E86;&#x4E2A;&#x670B;&#x53CB;&#x5708;&#xFF0C;&#x53D1;&#x73B0;&#x53EF;&#x4EE5;&#x62FF;&#x660E;&#x4FE1;&#x7247;&#x3002;&#x4E0A;&#x5927;&#x5B66;&#x4E4B;&#x524D;&#x4E00;&#x76F4;&#x8BA4;&#x4E3A;&#x5927;&#x5B66;&#x91CC;&#x53EF;&#x4EE5;&#x5B66;&#x81EA;&#x5DF1;&#x559C;&#x6B22;&#x7684;&#x77E5;&#x8BC6;&#xFF0C;&#x4E0D;&#x559C;&#x6B22;&#x7684;&#x8BFE;&#x80FD;&#x8FC7;&#x5C31;&#x884C;&#xFF0C;&#x4E0D;&#x7528;&#x8DDF;&#x522B;&#x4EBA;&#x6BD4;&#xFF0C;&#x5E0C;&#x671B;&#x6211;&#x80FD;&#x4E00;&#x76F4;&#x575A;&#x6301;&#x8FD9;&#x4E2A;&#x60F3;&#x6CD5;&#xFF0C;&#x9047;&#x5230;&#x540C;&#x6837;&#x7684;&#x8EBA;&#x602A;&#x5427;&#x3002;</span><br></pre></td></tr></table></figure>
<p>18&#x5929;&#x4E4B;&#x524D; <a href="https://closed.social/ordinary/?page=5&amp;per_page=20&amp;sort_by=time##"> 15</a></p>
<p>No. 56</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#x8BEF;&#x5165;&#x6E05;&#x534E;&#x56ED;&#xFF0C;&#x53EA;&#x80FD;&#x786C;&#x7740;&#x5934;&#x76AE;&#x8D70;&#x4E0B;&#x53BB;&#xFF0C;&#x8D8A;&#x6765;&#x8D8A;&#x4E0D;&#x77E5;&#x9053;&#x8BE5;&#x5F80;&#x54EA;&#x8D70;&#x3002;</span><br><span class="line">&#x6BD4;&#x8D77;&#x6570;&#x7406;&#x5316;&#x5176;&#x5B9E;&#x66F4;&#x559C;&#x6B22;&#x5199;&#x4E1C;&#x897F;&#x3002;&#x7136;&#x800C;&#x5BF9;&#x7406;&#x79D1;&#x5176;&#x5B9E;&#x6CA1;&#x90A3;&#x4E48;&#x611F;&#x5174;&#x8DA3;&#x7684;&#x201C;&#x5E78;&#x8FD0;&#x201D;&#x5973;&#x751F;&#xFF0C;&#x7A00;&#x91CC;&#x7CCA;&#x6D82;&#x5B66;&#x4E86;&#x4E00;&#x4E2A;&#x5176;&#x5B9E;&#x6CA1;&#x90A3;&#x4E48;&#x611F;&#x5174;&#x8DA3;&#x7684;&#x7ADE;&#x8D5B;&#x79D1;&#x76EE;&#xFF0C;&#x8BEF;&#x6253;&#x8BEF;&#x649E;&#x62FF;&#x4E86;&#x5956;&#x62FF;&#x5230;&#x4E86;&#x6E05;&#x534E;&#x964D;&#x5206;&#xFF0C;&#x5934;&#x8111;&#x4E00;&#x70ED;&#x8FDB;&#x4E86;&#x4E00;&#x4E2A;&#x81EA;&#x5DF1;&#x4E4B;&#x524D;&#x6839;&#x672C;&#x6CA1;&#x4EC0;&#x4E48;&#x8BA4;&#x8BC6;&#x7684;&#x4E13;&#x4E1A;&#x3002;</span><br><span class="line">&#x767D;&#x7EB8;&#x4E00;&#x7247;&#x7684;&#x81EA;&#x5DF1;&#xFF0C;&#x60F3;&#x8981;&#x5728;&#x5927;&#x5B66;&#x5145;&#x5B9E;&#x81EA;&#x6211;&#xFF0C;&#x4F46;&#x8FD8;&#x662F;&#x4EC0;&#x4E48;&#x90FD;&#x505A;&#x4E0D;&#x597D;&#xFF0C;&#x540E;&#x6765;&#x8D8A;&#x6765;&#x8D8A;&#x4F5B;&#xFF0C;&#x56DB;&#x5E74;&#x8F6C;&#x77AC;&#x5373;&#x8FC7;&#x3002;&#x6210;&#x7EE9;&#x4E2D;&#x4E0A;&#xFF0C;&#x521A;&#x597D;&#x5361;&#x5728;&#x52C9;&#x5F3A;&#x80FD;&#x62FF;&#x4E2A;&#x5B66;&#x4E1A;&#x4F18;&#x79C0;&#x5956;&#xFF1B;&#x4FEE;&#x53CC;&#x5B66;&#x4F4D;&#x65F6;&#x72B9;&#x8C6B;&#x4E86;&#xFF0C;&#x7ED3;&#x679C;&#x6750;&#x6599;&#x6CA1;&#x4EA4;&#x9F50;&#x843D;&#x9009;&#x4E86;&#xFF1B;&#x505A;&#x793E;&#x5DE5;&#xFF0C;&#x5B66;&#x751F;&#x4F1A;&#x6DF7;&#x4E86;&#x4E00;&#x5E74;&#xFF0C;&#x793E;&#x56E2;&#x6DF7;&#x4E86;&#x4E24;&#x5E74;&#xFF0C;&#x88AB;&#x95EE;&#x8981;&#x4E0D;&#x8981;&#x63A5;&#x793E;&#x957F;&#x65F6;&#x6211;&#x72B9;&#x8C6B;&#x540E;&#x9000;&#x4E86;&#xFF1B;&#x60F3;&#x5B66;&#x7684;&#x8FD0;&#x52A8;&#x548C;&#x821E;&#x8E48;&#xFF0C;&#x4E5F;&#x90FD;&#x6D45;&#x5C1D;&#x8F84;&#x6B62;&#xFF1B;&#x6CA1;&#x90A3;&#x4E48;&#x559C;&#x6B22;&#x79D1;&#x7814;&#xFF0C;&#x5728;&#x591A;&#x4E2A;&#x5B9E;&#x9A8C;&#x5BA4;&#x53CD;&#x590D;&#x6A2A;&#x8DF3;&#xFF0C;&#x6700;&#x540E;&#x6570;&#x7B97;&#x4E00;&#x4E0B;&#x76F8;&#x5F53;&#x4E8E;&#x4EC0;&#x4E48;&#x90FD;&#x6CA1;&#x505A;&#x3002;</span><br><span class="line">&#x4E00;&#x76F4;&#x60F3;&#x8BC4;&#x6210;&#x7EE9;&#x7A33;&#x624E;&#x7A33;&#x6253;&#x60F3;&#x6DF7;&#x4E2A;&#x4FDD;&#x7814;&#xFF0C;&#x5927;&#x4E09;&#x6691;&#x7814;&#x51B2;&#x52A8;&#x4E86;&#xFF0C;&#x51B3;&#x5B9A;&#x51FA;&#x56FD;&#x800C;&#x653E;&#x5F03;&#x4E86;&#x4FDD;&#x7814;&#xFF0C;&#x7136;&#x540E;&#x73B0;&#x5728;&#x6BD5;&#x4E1A;GAP&#x4E86;&#x3002;&#x9519;&#x8FC7;&#x4E86;&#x4FDD;&#x7814;&#x73ED;&#x8F66;&#xFF0C;cls&#x90FD;&#x4E24;&#x6B21;&#x6CA1;&#x8FC7;&#xFF0C;&#x79D1;&#x7814;&#x5C65;&#x5386;&#x7684;&#x6591;&#x9A73;&#xFF0C;&#x624D;&#x7EC8;&#x4E8E;&#x8BA9;&#x6211;&#x610F;&#x8BC6;&#x5230;&#x6211;&#x6D6A;&#x8D39;&#x4E86;&#x56DB;&#x5E74;&#x6E05;&#x534E;&#x7684;&#x6559;&#x80B2;&#x8D44;&#x6E90;&#xFF0C;&#x7EC8;&#x5F52;&#x53EA;&#x662F;&#x4E2A;&#x8BEF;&#x5165;&#x6E05;&#x534E;&#x56ED;&#x7684;&#x201C;&#x5E78;&#x8FD0;&#x513F;&#x201D;&#xFF0C;&#x54EA;&#x6015;&#x6210;&#x529F;&#x7559;&#x6821;&#x8BFB;&#x535A;&#xFF0C;&#x4E5F;&#x53EA;&#x662F;&#x591A;&#x8E49;&#x8DCE;&#x4E94;&#x516D;&#x5E74;&#x3002;&#x5E73;&#x65E5;&#x8BF4;&#x5F97;&#x5F88;&#x8F7B;&#x677E;&#x4EC0;&#x4E48;&#x4E0D;&#x884C;&#x5C31;&#x51FA;&#x56FD;&#xFF0C;&#x5B9E;&#x9645;&#x4E0A;&#x6258;&#x798F;&#x90FD;&#x5361;&#x6211;&#x5361;&#x5F97;&#x6B7B;&#x6B7B;&#x7684;&#x3002;</span><br><span class="line">&#x65F6;&#x81F3;&#x4ECA;&#x65E5;&#xFF0C;&#x6BD4;&#x8D77;&#x79D1;&#x7814;&#x4F9D;&#x65E7;&#x66F4;&#x559C;&#x6B22;&#x5199;&#x6587;&#x7AE0;&#xFF0C;&#x559C;&#x6B22;&#x7F16;&#x5267;&#xFF0C;&#x559C;&#x6B22;&#x52A8;&#x753B;&#xFF0C;&#x559C;&#x6B22;&#x6E38;&#x620F;&#x5236;&#x4F5C;&#xFF0C;&#x559C;&#x6B22;&#x66F4;&#x6709;&#x6D3B;&#x529B;&#x7684;&#x5DE5;&#x4F5C;&#x3002;</span><br><span class="line">&#x672A;&#x6765;&#x6CA1;&#x6709;&#x7740;&#x843D;&#x3002;</span><br></pre></td></tr></table></figure>
<p>18&#x5929;&#x4E4B;&#x524D; <a href="https://closed.social/ordinary/?page=5&amp;per_page=20&amp;sort_by=time##"> 25</a></p>
<p>No. 55</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#x672C;&#x6765;&#x60F3;&#x7740;&#x62A5;&#x540D;&#x53C2;&#x4E0E;&#x4E50;&#x5475;&#x4E00;&#x628A;&#xFF0C;&#x8FD8;&#x505A;&#x4E86;&#x4E00;&#x70B9;&#x62FF;&#x5230;&#x6587;&#x5316;&#x886B;&#x7684;&#x5E7B;&#x60F3;&#x3002;&#x7ED3;&#x679C;&#x70B9;&#x8FDB;&#x6765;&#x53D1;&#x73B0;&#x5927;&#x5BB6;&#x90FD;&#x5199;&#x4E86;&#x597D;&#x591A;&#x3002;&#x5F88;&#x666E;&#x901A;&#x7684;&#x5C31;&#x6B64;&#x653E;&#x5F03;&#x4ECB;&#x7ECD;&#x81EA;&#x5DF1;&#x4E86;&#xFF0C;&#xFF08;&#x4F46;&#x662F;&#x4E3A;&#x4E86;&#x660E;&#x4FE1;&#x7247;&#x8FD8;&#x662F;&#x586B;&#x4E00;&#x4E0B;</span><br></pre></td></tr></table></figure>
<p>18&#x5929;&#x4E4B;&#x524D; <a href="https://closed.social/ordinary/?page=5&amp;per_page=20&amp;sort_by=time##"> 33</a></p>
<p>No. 54</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#x5E95;&#x5C42;&#x9662;&#x7CFB;&#x7684;&#x7406;&#x5DE5;&#x7537;&#xFF0C;&#x672C;&#x79D1;&#x7684;&#x65F6;&#x5019;&#x4E00;&#x76F4;&#x7FA1;&#x6155;&#x90A3;&#x4E9B;&#x6709;&#x5973;&#x670B;&#x53CB;&#x7684;&#x4EBA;&#x3002;</span><br><span class="line">&#x61D2;&#x5F97;&#x53BB;&#x793E;&#x4EA4;&#x5E7F;&#x6492;&#x7F51;&#xFF0C;&#x5C31;&#x5F00;&#x59CB;&#x8FFD;&#x719F;&#x8BC6;&#x7684;&#x5973;&#x751F;&#x3002;&#x52AA;&#x529B;&#x53BB;&#x8FFD;&#xFF0C;&#x5374;&#x4E5F;&#x6CA1;&#x90A3;&#x4E9B;pua&#x5927;&#x5E08;&#x7684;&#x672C;&#x4E8B;&#xFF0C;&#x53EA;&#x80FD;&#x5F53;&#x4E2A;&#x597D;&#x4EBA;&#x3002;&#x5E2E;&#x7740;&#x5199;&#x4F5C;&#x4E1A;&#xFF0C;&#x8FC7;&#x8282;&#x5403;&#x5403;&#x996D;&#xFF0C;&#x5E73;&#x65F6;&#x968F;&#x53EB;&#x968F;&#x5230;&#x8001;&#x5DE5;&#x5177;&#x4EBA;&#x4E86;&#x3002;&#x4E34;&#x5230;&#x8868;&#x767D;&#x7684;&#x65F6;&#x5019;&#xFF0C;&#x5973;&#x751F;&#x5F88;&#x60CA;&#x8BB6;&#xFF1A;&#x6211;&#x4E00;&#x76F4;&#x628A;&#x4F60;&#x5F53;&#x7238;&#x7238;&#x3002;</span><br><span class="line">&#x884C;&#x5427;&#xFF0C;&#x90A3;&#x5C31;&#x7B97;&#x4E86;&#x5427;&#x3002;&#x8FD9;&#x65F6;&#x5019;&#x5973;&#x751F;&#x7A81;&#x7136;&#x4E3B;&#x52A8;&#x8D77;&#x6765;&#xFF0C;&#x65F6;&#x4E0D;&#x65F6;&#x627E;&#x6211;&#x4E92;&#x52A8;&#x4E00;&#x4E0B;&#xFF0C;&#x4EE5;&#x4E3A;&#x662F;&#x56DE;&#x5FC3;&#x8F6C;&#x610F;&#x4E86;&#xFF0C;&#x7ED3;&#x679C;&#x662F;&#x5E0C;&#x671B;&#x4FDD;&#x7559;&#x4E00;&#x4E0B;&#x5DE5;&#x5177;&#x4EBA;&#x7684;&#x4F7F;&#x7528;&#x6743;&#x529B;&#x3002;</span><br><span class="line">&#x666E;&#x901A;&#x7684;&#x8FC7;&#x4E86;&#x56DB;&#x5E74;&#xFF0C;&#x5973;&#x670B;&#x53CB;&#x6CA1;&#x627E;&#x5230;&#xFF0C;&#x597D;&#x4EBA;&#x5361;&#x53D1;&#x4E86;&#x4E24;&#x4E09;&#x5F20;&#xFF0C;&#x6BD5;&#x4E1A;&#x7684;&#x65F6;&#x5019;&#x9080;&#x8BF7;&#x62CD;&#x6BD5;&#x4E1A;&#x7167;&#x4E00;&#x4E2A;&#x4E5F;&#x6CA1;&#x6709;&#x6765;&#x3002;&#x4E00;&#x8D77;&#x5F00;&#x9ED1;&#x7684;&#x5144;&#x5F1F;&#x5012;&#x662F;&#x6765;&#x4E86;&#x4E0D;&#x5C11;&#x3002;</span><br></pre></td></tr></table></figure>
<p>18&#x5929;&#x4E4B;&#x524D; <a href="https://closed.social/ordinary/?page=5&amp;per_page=20&amp;sort_by=time##"> 18</a></p>
<p>No. 53</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#x4E3A;&#x4EC0;&#x4E48;&#x81EA;&#x8350;&#x7279;&#x666E;&#x901A;&#x5956;&#x5462;&#xFF1F;&#x5927;&#x62B5;&#x662F;&#x5728;&#x6B7B;&#x5BC2;&#x7684;&#x55A7;&#x54D7;&#x91CC;&#x770B;&#x5230;&#x4E86;&#x4E00;&#x675F;&#x666E;&#x901A;&#x7684;&#x5149;&#x4EAE;&#x5427;&#x3002;</span><br><span class="line">&#x6211;&#x666E;&#x901A;&#xFF0C;&#x4E0D;&#x662F;&#x56E0;&#x4E3A;&#x6211;&#x591A;&#x4E48;&#x4E0D;&#x884C;&#xFF0C;&#x53EA;&#x662F;&#x56E0;&#x4E3A;&#x6211;&#x5728;&#x538B;&#x6291;&#x4E2D;&#x5BFB;&#x627E;&#x5FEB;&#x4E50;&#xFF0C;&#x5728;&#x7EDD;&#x671B;&#x4E2D;&#x5BFB;&#x627E;&#x5E0C;&#x671B;&#xFF0C;&#x5728;&#x6E05;&#x534E;&#x91CC;&#xFF0C;&#x60F3;&#x8981;&#x505A;&#x81EA;&#x5DF1;&#x3002;</span><br><span class="line">&#x4ECE;&#x67D0;&#x4E9B;&#x65B9;&#x9762;&#x6765;&#x8BF4;&#xFF0C;&#x6211;&#x4E0D;&#x666E;&#x901A;&#xFF0C;&#x62FF;&#x7740;&#x5E74;&#x7EA7;8%&#x7684;GPA&#x201C;&#x8C08;&#x7B11;&#x98CE;&#x751F;&#x201D;&#xFF0C;&#x5728;&#x540C;&#x5B66;&#x4EEC;&#x4E3A;&#x4FDD;&#x7814;&#x53D1;&#x6101;&#x7684;&#x65F6;&#x5019;&#xFF0C;&#x6BCF;&#x5929;&#x60F3;&#x7740;&#x81EA;&#x5DF1;&#x80FD;&#x4E0D;&#x80FD;&#x505A;&#x81EA;&#x5DF1;&#x771F;&#x6B63;&#x70ED;&#x7231;&#x7684;&#x4E8B;&#xFF1B;&#x5F53;&#x540C;&#x5B66;&#x4EEC;&#x90FD;&#x5728;&#x8D76;DDL&#x7684;&#x65F6;&#x5019;&#xFF0C;&#x53EA;&#x60F3;&#x7740;&#x600E;&#x6837;&#x62E5;&#x6709;&#x826F;&#x597D;&#x7684;&#x7761;&#x7720;&#x3002;</span><br><span class="line">&#x4F46;&#x662F;&#xFF0C;&#x6210;&#x7EE9;&#x597D;&#xFF0C;&#x6548;&#x7387;&#x9AD8;&#xFF0C;&#x5C31;&#x4E0D;&#x666E;&#x901A;&#x4E86;&#x5417;&#xFF1F;&#x6211;&#x8FC7;&#x7740;&#x666E;&#x901A;&#x7684;&#x751F;&#x6D3B;&#xFF0C;&#x6211;&#x6CA1;&#x6709;&#x53C2;&#x52A0;&#x793E;&#x5DE5;&#xFF0C;&#x505A;&#x4E00;&#x4E2A;&#x5E73;&#x5E73;&#x65E0;&#x5947;&#x7684;&#x73ED;&#x59D4;&#xFF0C;&#x6211;&#x540C;&#x6837;&#x7126;&#x8651;&#xFF0C;&#x540C;&#x6837;&#x5F77;&#x5FA8;&#x3002;&#x6211;&#x53EA;&#x662F;&#x60F3;&#x7740;&#x5728;&#x8FD9;&#x6837;&#x7684;&#x73AF;&#x5883;&#x91CC;&#x5982;&#x4F55;&#x627E;&#x5230;&#x4EBA;&#x751F;&#x7684;&#x65B9;&#x5411;&#xFF0C;&#x6211;&#x53EA;&#x662F;&#x60F3;&#x7740;&#x5728;&#x8FD9;&#x55A7;&#x56A3;&#x7684;&#x73AF;&#x5883;&#x4E2D;&#x5982;&#x4F55;&#x8C03;&#x8282;&#x81EA;&#x5DF1;&#x7684;&#x7126;&#x8651;&#x75C7;&#xFF0C;&#x5B89;&#x7A33;&#x5730;&#x7761;&#x4E0A;&#x4E00;&#x89C9;&#x3002;&#x6211;&#x4E5F;&#x4F1A;&#x52C9;&#x52B1;&#x81EA;&#x5DF1;&#xFF0C;&#x5BFB;&#x627E;&#x77E5;&#x5FC3;&#x7684;&#x670B;&#x53CB;&#xFF0C;&#x5C3D;&#x91CF;&#x5728;&#x7EE9;&#x70B9;&#x62DC;&#x7269;&#x6559;&#x7684;&#x73AF;&#x5883;&#x91CC;&#x5BFB;&#x627E;&#x5185;&#x5FC3;&#x7684;&#x5B89;&#x5B81;&#xFF0C;&#x5728;&#x8FDE;&#x7EED;&#x5931;&#x7720;&#x4E24;&#x5468;&#xFF0C;&#x5FEB;&#x8981;&#x6291;&#x90C1;&#x5230;&#x5403;&#x4E0D;&#x4E0B;&#x996D;&#x7684;&#x65F6;&#x5019;&#x5F3A;&#x8FEB;&#x81EA;&#x5DF1;&#x541E;&#x4E0B;&#x53BB;&#x3002;&#x5927;&#x4E00;&#x4E3A;&#x4E86;&#x4FEE;&#x5B8C;&#x5FC5;&#x9650;&#x6CA1;&#x6709;&#x9009;&#x62E9;&#x81EA;&#x5DF1;&#x60F3;&#x8981;&#x63A2;&#x7D22;&#x7684;&#x5B66;&#x79D1;&#xFF0C;&#x5728;&#x5927;&#x4E8C;&#x65C1;&#x542C;&#x8BFE;&#x7A0B;&#xFF0C;&#x8BE2;&#x95EE;&#x8001;&#x5E08;&#x4E4B;&#x540E;&#x51B3;&#x5B9A;&#x8F6C;&#x7CFB;&#xFF0C;&#x90A3;&#x4E00;&#x5929;&#x6211;&#x9000;&#x4E86;4&#x95E8;&#x8BFE;&#xFF0C;&#x6211;&#x610F;&#x8BC6;&#x5230;&#x4E86;&#x5728;&#x8FD9;&#x6837;&#x7684;&#x73AF;&#x5883;&#x91CC;&#xFF0C;&#x60F3;&#x8981;&#x505A;&#x81EA;&#x5DF1;&#xFF0C;&#x52AA;&#x529B;&#x505A;&#x81EA;&#x5DF1;&#xFF0C;&#x624D;&#x662F;&#x6700;&#x666E;&#x901A;&#xFF0C;&#x53C8;&#x6700;&#x4E0D;&#x666E;&#x901A;&#x7684;&#x884C;&#x4E3A;&#x3002;</span><br></pre></td></tr></table></figure>
<p>18&#x5929;&#x4E4B;&#x524D; <a href="https://closed.social/ordinary/?page=5&amp;per_page=20&amp;sort_by=time##"> 14</a></p>
<p>No. 52</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#x6765;&#x81EA;&#x897F;&#x90E8;&#x5C0F;&#x9547;&#x7684;&#x5C0F;&#x83DC;&#x9E21;&#x4E00;&#x679A;&#x3002;</span><br><span class="line">&#x4E0A;&#x5927;&#x5B66;&#x4E4B;&#x524D;&#x5B8C;&#x5168;&#x5BF9;&#x4E13;&#x4E1A;&#x4E0D;&#x4E86;&#x89E3;&#xFF0C;&#x6765;&#x4E4B;&#x524D;&#x6000;&#x7740;&#x68A6;&#x60F3;&#x89C9;&#x5F97;&#x6211;&#x53EF;&#x4EE5;&#x4E00;&#x76F4;&#x4F18;&#x79C0;&#x4E00;&#x76F4;&#x95EA;&#x5149;&#xFF0C;&#x7136;&#x800C;&#x5374;&#x53D1;&#x73B0;&#x539F;&#x6765;&#x5927;&#x4E00;&#x671F;&#x4E2D;&#x4E13;&#x4E1A;&#x8BFE;&#x5C31;&#x53EF;&#x4EE5;&#x6302;&#x6389;&#x3002;&#x53D1;&#x73B0;&#x81EA;&#x5DF1;&#x8DD1;&#x6B65;&#x597D;&#x6162;&#x5440;&#xFF0C;&#x6BCF;&#x5929;&#x5F3A;&#x8FEB;&#x81EA;&#x5DF1;&#x8DD1;&#x8D77;&#x6765;&#xFF0C;&#x770B;&#x7740;&#x540C;&#x5B66;&#x4EEC;&#x8F7B;&#x8F7B;&#x677E;&#x677E;&#x5730;&#x8DD1;&#x7740;1500&#x81EA;&#x5DF1;&#x5FCD;&#x7740;&#x773C;&#x6CEA;&#x8BF4;&#x6CA1;&#x4E8B;&#x6211;&#x4E5F;&#x8981;&#x575A;&#x6301;&#x3002;</span><br><span class="line">&#x5B66;&#x4E0D;&#x597D;&#x4E13;&#x4E1A;&#x8BFE;&#xFF0C;&#x71AC;&#x591C;&#x6210;&#x4E86;&#x65E5;&#x5E38;&#xFF0C;&#x6E05;&#x695A;&#x5730;&#x8BB0;&#x7740;&#x4ECE;&#x90BA;&#x67B6;&#x8F69;&#x71AC;&#x591C;&#x56DE;&#x6765;&#xFF0C;&#x5B66;&#x5802;&#x8DEF;&#x4E0A;&#x5C31;&#x6211;&#x4E00;&#x4E2A;&#x4EBA;&#x9A91;&#x7740;&#x8F66;&#x8F66;&#xFF0C;&#x545C;&#x54BD;&#x7740;&#x54ED;&#x3002;</span><br><span class="line">&#x7FA1;&#x6155;&#x522B;&#x4EBA;&#x4E24;&#x4E09;&#x4E2A;&#x5C0F;&#x65F6;&#x5C31;&#x5199;&#x5B8C;&#x6211;&#x4E00;&#x4E24;&#x5929;&#x5F04;&#x4E0D;&#x61C2;&#x7684;&#x6570;&#x5B66;&#x9898;&#xFF0C;&#x4E00;&#x8FB9;&#x5199;&#x9898;&#x4E00;&#x8FB9;&#x54ED;&#xFF0C;&#x6253;&#x7535;&#x8BDD;&#x544A;&#x8BC9;&#x7238;&#x7238;&#x5988;&#x5988;&#x6211;&#x4ECA;&#x665A;&#x53C8;&#x8981;&#x71AC;&#x591C;&#x5566;&#x4F5C;&#x4E1A;&#x5199;&#x4E0D;&#x5B8C;&#x5566;&#x3002;</span><br><span class="line">&#x4E00;&#x904D;&#x4E00;&#x904D;&#x770B;&#x7740;&#x7B14;&#x8BB0;&#xFF0C;&#x5374;&#x8FD8;&#x662F;&#x4E0D;&#x61C2;&#x3002;&#x4E00;&#x8FB9;&#x7ED9;&#x81EA;&#x5DF1;&#x6253;&#x6C14;&#x4E00;&#x8FB9;&#x4F24;&#x5FC3;&#x3002;&#x8FD8;&#x597D;&#xFF0C;&#x8FD8;&#x597D;&#xFF0C;&#x6211;&#x6700;&#x7EC8;&#x8FD8;&#x662F;&#x6CA1;&#x6709;&#x6302;&#x79D1;&#x3002;</span><br><span class="line">&#x5927;&#x4E8C;&#x5566;&#xFF0C;&#x611F;&#x89C9;&#x597D;&#x5F88;&#x591A;&#x3002;&#x867D;&#x7136;&#x8FD8;&#x662F;&#x4F1A;&#x4E3A;&#x4E0D;&#x4F1A;&#x7684;&#x4F5C;&#x4E1A;&#x5931;&#x843D;&#xFF0C;&#x5374;&#x5B66;&#x4F1A;&#x4E86;&#x544A;&#x8BC9;&#x81EA;&#x5DF1;&#x6CA1;&#x4E8B;&#x4F60;&#x5DF2;&#x7ECF;&#x8FDB;&#x6B65;&#x5566;&#xFF0C;&#x6211;&#x4EEC;&#x4E0D;&#x6302;&#x79D1;&#xFF0C;&#x987A;&#x987A;&#x5229;&#x5229;&#x6BD5;&#x4E1A;&#x5C31;&#x5F88;&#x68D2;&#x4E86;&#x3002;&#x5076;&#x5C14;&#x8FD8;&#x662F;&#x4F1A;&#x60F3;&#x8D77;&#x5927;&#x4E00;&#x90A3;&#x4E2A;&#x71AC;&#x591C;&#x7740;&#x7684;&#x81EA;&#x5DF1;&#xFF0C;&#x90A3;&#x4E2A;&#x51AC;&#x5929;&#x51BB;&#x7684;&#x624B;&#x811A;&#x51B0;&#x51C9;&#x8FD8;&#x62C5;&#x5FE7;&#x7740;&#x4F1A;&#x4E0D;&#x4F1A;&#x6302;&#x6389;&#x7684;&#x81EA;&#x5DF1;&#xFF0C;&#x54ED;&#x7684;&#x7A00;&#x91CC;&#x54D7;&#x5566;&#x3002;</span><br><span class="line">&#x4F46;&#x662F;&#x4E00;&#x5207;&#x8FD8;&#x662F;&#x5728;&#x8FDB;&#x6B65;&#x5440;&#xFF0C;&#x4E00;&#x5207;&#x90FD;&#x4F1A;&#x53D8;&#x597D;&#x7684;&#xFF0C;&#x6211;&#x8DD1;&#x6B65;&#x6BD4;&#x539F;&#x6765;&#x597D;&#x592A;&#x591A;&#x5566;&#xFF0C;&#x4F5C;&#x4E1A;&#x4F1A;&#x505A;&#x7684;&#x4E5F;&#x6162;&#x6162;&#x591A;&#x4E86;&#xFF0C;&#x8BFE;&#x4E5F;&#x80FD;&#x542C;&#x61C2;&#x5566;&#xFF0C;&#x867D;&#x7136;&#x4E0D;&#x77E5;&#x9053;&#x8003;&#x8BD5;&#x6210;&#x7EE9;&#x4F1A;&#x600E;&#x4E48;&#x6837;&#xFF0C;&#x4F46;&#x53C8;&#x6709;&#x4EC0;&#x4E48;&#x5462;&#x3002;</span><br><span class="line">&#x4E5F;&#x4F1A;&#x7FA1;&#x6155;&#x540C;&#x5B66;&#x7684;&#x4F18;&#x79C0;&#xFF0C;&#x6210;&#x7EE9;&#x597D;&#x8FD8;&#x53C2;&#x52A0;&#x8BB8;&#x8BB8;&#x591A;&#x591A;&#x6D3B;&#x52A8;&#xFF0C;&#x4EBA;&#x7F18;&#x597D;&#xFF0C;&#x7279;&#x957F;&#x597D;&#x3002;&#x4E0D;&#x8FC7;&#xFF0C;&#x6211;&#x4E5F;&#x4E0D;&#x8D56;&#x53ED;&#xFF0C;&#x81F3;&#x5C11;&#x6211;&#x4E5F;&#x4E00;&#x6837;&#x5E72;&#x51C0;&#x6E29;&#x67D4;&#xFF0C;&#x4E0A;&#x8FDB;&#x79EF;&#x6781;&#x3002;</span><br><span class="line">&#x53EA;&#x662F;&#x53EA;&#x662F;&#xFF0C;&#x6211;&#x771F;&#x7684;&#x597D;&#x5E0C;&#x671B;&#x81EA;&#x5DF1;&#x5B66;&#x4E60;&#x4F1A;&#x53D8;&#x597D;&#x5440;&#x3002;</span><br></pre></td></tr></table></figure>
<p>18&#x5929;&#x4E4B;&#x524D; <a href="https://closed.social/ordinary/?page=5&amp;per_page=20&amp;sort_by=time##"> 50</a></p>
<p>No. 51</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#x5173;&#x4E8E;&#x201C;&#x666E;&#x901A;&#x201D;&#x8FD9;&#x4EF6;&#x4E8B;&#xFF0C;&#x4ECE;&#x6211;&#x4E0A;&#x5927;&#x5B66;&#x4EE5;&#x6765;&#x4E00;&#x76F4;&#x5728;&#x601D;&#x8003;&#x3002;</span><br><span class="line">&#x4EE5;&#x793E;&#x4F1A;&#x3001;&#x4E43;&#x81F3;&#x5B66;&#x6821;&#x5185;&#x90E8;&#x5BF9;&#x4E8E;&#x201C;&#x4F18;&#x79C0;&#x201D;&#x7684;&#x6807;&#x51C6;&#xFF0C;&#x6211;&#x90FD;&#x5DEE;&#x5F97;&#x8FDC;&#x4E86;&#x3002;</span><br><span class="line">&#x60F3;&#x5728;&#x7B80;&#x5386;&#x5199;&#x70B9;&#x5389;&#x5BB3;&#x7684;&#x7ECF;&#x5386;&#xFF0C;&#x6216;&#x5F00;&#x4E2A;&#x4EBA;&#x7F51;&#x7AD9;&#x4ECB;&#x7ECD;&#x4E00;&#x4E0B;&#x81EA;&#x5DF1;&#xFF0C;&#x7F57;&#x5217;&#x81EA;&#x5DF1;&#x7684;&#x4F1F;&#x5927;&#x529F;&#x7EE9;&#xFF0C;&#x4F46;&#x662F;...&#x4EC0;&#x4E48;&#x90FD;&#x6CA1;&#x6709;&#x3002;</span><br><span class="line">&#x4E5F;&#x6CA1;&#x6709;&#x4EC0;&#x4E48;&#x7279;&#x522B;&#x6709;&#x6DF1;&#x5EA6;&#x7684;&#x7231;&#x597D;&#xFF0C;&#x6216;&#x4E0E;&#x4F17;&#x4E0D;&#x540C;&#x7684;&#x4F1F;&#x5927;&#x5FD7;&#x4E1A;&#x3002;</span><br><span class="line"></span><br><span class="line">&#x6211;&#x5F88;&#x559C;&#x6B22;&#x7684;&#x5C0F;&#x8BF4;&#x91CC;&#x9762;&#xFF0C;&#x4E3B;&#x89D2;&#x8FF7;&#x5931;&#x5728;&#x9B54;&#x529B;&#x7684;&#x6D2A;&#x6D41;&#x4E2D;&#x65F6;&#xFF0C;&#x6709;&#x4EBA;&#x6307;&#x5BFC;&#x4ED6;&#x8981;&#x5BFB;&#x627E;&#x81EA;&#x5DF1;&#x7684;&#x201C;&#x951A;&#x70B9;&#x201D;&#xFF0C;&#x76F4;&#x6307;&#x81EA;&#x6211;&#x7684;&#x4EFB;&#x4F55;&#x4E8B;&#x7269;&#x3002;</span><br><span class="line">&#x800C;&#x793E;&#x4F1A;&#x79D1;&#x5B66;&#x7684;&#x76F8;&#x5173;&#x8BFE;&#x7A0B;&#x4E2D;&#xFF0C;&#x6211;&#x5F97;&#x77E5;&#x6709;&#x4E9B;&#x793E;&#x4F1A;&#x5B66;&#x7684;&#x8BFE;&#x4E0A;&#xFF0C;&#x8001;&#x5E08;&#x4F1A;&#x8BA9;&#x540C;&#x5B66;&#x5728;&#x9ED1;&#x677F;&#x4E0A;&#x4EE5;&#x201C;&#x6211;&#x662F;...&#x201D;&#x4E3A;&#x5F00;&#x5934;&#xFF0C;&#x5199;&#x4E0A;10&#x4E2A;&#x201C;&#x6211;&#x662F;&#x8C01;&#x201D;&#x3002;</span><br><span class="line">&#x4E8E;&#x662F;&#x6211;&#x5F00;&#x59CB;&#x601D;&#x8003;&#xFF0C;&#x6211;&#x7684;&#x951A;&#x70B9;&#x7A76;&#x7ADF;&#x662F;&#x4EC0;&#x4E48;&#x5462;&#xFF1F;&#x5982;&#x679C;&#x8BA9;&#x6211;&#x5199;10&#x4E2A;&#x201C;&#x6211;&#x662F;&#x8C01;&#x201D;&#xFF0C;&#x6211;&#x4F1A;&#x5199;&#x4E9B;&#x4EC0;&#x4E48;&#x5462;&#xFF1F;</span><br><span class="line"></span><br><span class="line">&#x201C;&#x6211;&#x662F;&#x6E05;&#x534E;&#x5927;&#x5B66;&#x7684;&#x5B66;&#x751F;&#x201D;</span><br><span class="line">&#x8FD9;&#x4E2A;&#x6807;&#x7B7E;&#xFF0C;&#x4F7F;&#x6211;&#x6253;&#x4ECE;&#x5FC3;&#x5E95;&#x611F;&#x5230;&#x4E0D;&#x8E0F;&#x5B9E;&#x3002;</span><br><span class="line"></span><br><span class="line">&#x201C;&#x6211;&#x662F;&#x4ECE;XX&#x6765;&#x7684;&#x201D;</span><br><span class="line">&#x597D;&#x5427;&#xFF0C;&#x4ECE;XX&#x6765;&#x7684;&#x4EBA;&#x5728;&#x6E05;&#x534E;&#x786E;&#x5B9E;&#x4E0D;&#x591A;&#xFF0C;&#x662F;&#x6211;&#x6CA1;&#x9519;&#x4E86;&#x3002;</span><br><span class="line"></span><br><span class="line">&#x201C;&#x6211;&#x662F;YY&#x7CFB;&#x7684;&#x5973;&#x751F;&#x201D;</span><br><span class="line">&#x914D;&#x5408;&#x4E0A;&#x4E00;&#x6761;&#xFF0C;&#x7F29;&#x5C0F;&#x5230;&#x4E86;&#x5C48;&#x6307;&#x53EF;&#x6570;&#x3002;</span><br><span class="line"></span><br><span class="line">&#x201C;&#x6211;&#x662F;&#x4E2A;&#x7F51;&#x7EDC;&#x5C0F;&#x8BF4;&#x7231;&#x597D;&#x8005;&#x201D;</span><br><span class="line">&#x90A3;&#x5C31;&#x53EA;&#x6709;&#x6211;&#x4E86;&#x3002;</span><br><span class="line"></span><br><span class="line">&#x6BCF;&#x4E2A;&#x6807;&#x7B7E;&#x80CC;&#x540E;&#xFF0C;&#x90FD;&#x662F;&#x5F88;&#x957F;&#x7684;&#x6545;&#x4E8B;&#x3002;</span><br><span class="line">&#x6BCF;&#x4E00;&#x4E2A;&#x6545;&#x4E8B;&#xFF0C;&#x5C3D;&#x7BA1;&#x90FD;&#x662F;&#x5E73;&#x5E73;&#x65E0;&#x5947;&#x7684;struggle&#xFF0C;&#x6CA1;&#x6709;&#x591A;&#x5F69;&#x591A;&#x59FF;&#x7684;&#x4E30;&#x5BCC;&#x60C5;&#x8282;&#xFF0C;&#x4E5F;&#x6CA1;&#x6709;&#x98CE;&#x5149;&#x65E0;&#x9650;&#x6216;&#x51C4;&#x51C9;&#x65E0;&#x6BD4;&#x7684;&#x7ED3;&#x5C40;&#xFF0C;&#x5C31;&#x662F;&#x666E;&#x666E;&#x901A;&#x901A;&#x7684;&#x4EBA;&#x751F;&#x3002;</span><br><span class="line">&#x6211;&#x5374;&#x89C9;&#x5F97;&#x81EA;&#x5DF1;&#x4E0D;&#x666E;&#x901A;&#x4E86;&#x3002;&#x6211;&#x6709;&#x8FD9;&#x4E48;&#x591A;&#x6545;&#x4E8B;&#x53EF;&#x4EE5;&#x8BF4;&#x5462;&#xFF01;&#x90A3;&#x6211;&#x4E3A;&#x4EC0;&#x4E48;&#x8FD8;&#x6765;&#x81EA;&#x8350;&#x7279;&#x666E;&#x901A;&#x5956;&#x5462;&#xFF1F;</span><br><span class="line">&#x8FD9;&#x90FD;&#x9760;&#x540C;&#x884C;&#x886C;&#x6258;&#x554A;&#xFF01;&#x4F60;&#x4EEC;&#x54EA;&#xFF0C;&#x7A76;&#x7ADF;&#x54EA;&#x4E00;&#x4E2A;&#x666E;&#x901A;&#x4E86;&#x3002;</span><br><span class="line">&#x6216;&#x8BB8;&#x4F60;&#x4EEC;&#x5728;&#x67D0;&#x79CD;&#x4E16;&#x4FD7;&#x7684;&#x5C3A;&#x5EA6;&#x4E0A;&#x89C9;&#x5F97;&#x81EA;&#x5DF1;&#x201D;&#x666E;&#x901A;&#x201C;&#xFF0C;&#x6216;&#x8BB8;&#x4F60;&#x4EEC;&#x89C9;&#x5F97;&#x81EA;&#x5DF1;&#x7684;&#x7ECF;&#x5386;&#x5E76;&#x975E;&#x72EC;&#x4E00;&#x65E0;&#x4E8C;&#x3002;&#x5F15;&#x4EE5;&#x4E3A;&#x50B2;&#x7684;&#x4EFB;&#x4F55;&#x4E00;&#x65B9;&#x9762;&#xFF0C;&#x603B;&#x80FD;&#x627E;&#x5230;&#x522B;&#x4EBA;&#x6BD4;&#x81EA;&#x5DF1;&#x597D;&#x5F97;&#x591A;&#x3002;&#xFF08;&#x5F00;&#x73A9;&#x7B11;&#xFF0C;&#x6211;&#x8FD8;&#x89C9;&#x5F97;&#x81EA;&#x5DF1;&#x662F;&#x7F16;&#x7A0B;&#x5C0F;&#x5929;&#x624D;&#xFF01;&#xFF09;</span><br><span class="line">&#x793E;&#x4F1A;&#x5316;&#x7684;&#x8FC7;&#x7A0B;&#x4E2D;&#xFF0C;&#x6211;&#x4EEC;&#x96BE;&#x4EE5;&#x907F;&#x514D;&#x5730;&#x5728;&#x4EF7;&#x503C;&#x89C2;&#x4E0A;&#x88AB;&#x540C;&#x5316;&#x4E86;&#x3002;&#x548C;&#x4ED6;&#x4EBA;&#x6709;&#x4E00;&#x6837;&#x7684;&#x8FFD;&#x6C42;&#xFF08;&#x6216;&#x4E00;&#x6837;&#x7684;&#x4E0D;&#x8FFD;&#x6C42;&#xFF09;&#xFF0C;&#x6709;&#x4E86;&#x76F8;&#x4F3C;&#x7684;&#x8BC4;&#x4EF7;&#x6807;&#x51C6;&#x3002;</span><br><span class="line">&#x4F46;&#x662F;&#xFF0C;&#x8BF4;&#x5F97;&#x9E21;&#x6C64;&#x4E00;&#x70B9;&#xFF0C;&#x6BCF;&#x4E00;&#x4E2A;&#x4EBA;&#x7684;&#x6545;&#x4E8B;&#x8FD8;&#x771F;&#x7684;&#x4E0D;&#x4E00;&#x6837;&#x3002;&#x518D;&#x76F8;&#x4F3C;&#x7684;&#x751F;&#x547D;&#x5386;&#x7A0B;&#xFF0C;&#x4E0D;&#x540C;&#x7684;&#x4EBA;&#x7684;&#x8BE0;&#x91CA;&#x65B9;&#x5F0F;&#x4E5F;&#x4E0D;&#x4E00;&#x6837;&#x3002;</span><br><span class="line">&#x518D;&#x591A;&#x503E;&#x542C;&#x81EA;&#x5DF1;&#x5185;&#x5FC3;&#x7684;&#x58F0;&#x97F3;&#xFF0C;&#x6210;&#x4E3A;&#x81EA;&#x5DF1;&#x7684;&#x8BB0;&#x5F55;&#x8005;&#x5427;&#x3002;&#x660E;&#x660E;&#x7279;&#x522B;&#x5F97;&#x5F88;&#x5462;&#xFF01;</span><br></pre></td></tr></table></figure>
<p>18&#x5929;&#x4E4B;&#x524D; <a href="https://closed.social/ordinary/?page=5&amp;per_page=20&amp;sort_by=time##"> 18</a></p>
<p>No. 50</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#x5178;&#x578B;&#x7684;&#x5C0F;&#x9547;&#x505A;&#x9898;&#x5BB6;&#xFF0C;&#x7406;&#x60F3;&#x4E3B;&#x4E49;&#x8005;&#x3002;&#x7B80;&#x5355;&#x5730;&#x987A;&#x4ECE;&#x81EA;&#x5DF1;&#x7684;&#x5174;&#x8DA3;&#x9009;&#x4E13;&#x4E1A;&#x3002;</span><br><span class="line">&#x5927;&#x4E00;&#x7684;&#x65F6;&#x5019;&#xFF0C;&#x5468;&#x56F4;&#x4E0D;&#x4E4F;&#x7ADE;&#x8D5B;&#x751F;&#xFF0C;&#x867D;&#x7136;&#x5E73;&#x65E5;&#x548C;&#x540C;&#x5B66;&#x4EEC;&#x819C;&#x6765;&#x819C;&#x53BB;&#xFF0C;&#x4F46;&#x5FC3;&#x5E95;&#x91CC;&#x8FD8;&#x662F;&#x4E0D;&#x514D;&#x6709;&#x4E9B;&#x5351;&#x5FAE;&#x3002;</span><br><span class="line">&#x8DDF;&#x522B;&#x4EBA;&#x4EA4;&#x6D41;&#x65F6;&#xFF0C;&#x5E38;&#x542C;&#x4ED6;&#x4EEC;&#x8C08;&#x53CA;&#x672A;&#x6765;&#x7684;&#x89C4;&#x5212;&#xFF0C;&#x5728;&#x4EC0;&#x4E48;&#x9636;&#x6BB5;&#xFF0C;&#x8981;&#x5982;&#x4F55;&#x5982;&#x4F55;&#x3002;&#x5BF9;&#x6B64;&#xFF0C;&#x6211;&#x662F;&#x5168;&#x7136;&#x4E0D;&#x77E5;&#xFF0C;&#x53EA;&#x4F1A;&#x6309;&#x90E8;&#x5C31;&#x73ED;&#xFF0C;&#x53EA;&#x4F1A;&#x5B66;&#x6570;&#x5B66;&#x3001;&#x5B66;&#x7269;&#x7406;&#x3002;&#x7EE9;&#x70B9;&#x80FD;&#x6392;&#x5230;&#x4E2D;&#x4E0A;&#x7B49;&#xFF0C;&#x4F46;&#x9664;&#x6B64;&#x4E4B;&#x5916;&#xFF0C;&#x6211;&#x4E0D;&#x77E5;&#x9053;&#x8BE5;&#x505A;&#x4EC0;&#x4E48;&#x3002;</span><br><span class="line">&#x5982;&#x540C;&#x767D;&#x7EB8;&#x822C;&#x7684;&#x751F;&#x6D3B;&#x4E00;&#x76F4;&#x6301;&#x7EED;&#x5230;&#x4E86;&#x73B0;&#x5728;&#x3002;&#x4E09;&#x5E74;&#x591A;&#x7684;&#x65F6;&#x95F4;&#x91CC;&#xFF0C;&#x6211;&#x666E;&#x901A;&#x5730;&#x5206;&#x6D41;&#x5230;&#x4E86;&#x73B0;&#x5728;&#x7684;&#x7CFB;&#xFF0C;&#x5B66;&#x66F4;&#x591A;&#x7684;&#x4E13;&#x4E1A;&#x8BFE;&#xFF0C;&#x627E;&#x5230;&#x4E86;&#x5BFC;&#x5E08;&#xFF1B;&#x79D1;&#x7814;&#x8D77;&#x6B65;&#x665A;&#xFF0C;&#x5E38;&#x5E74;&#x6478;&#x9C7C;&#x6CA1;&#x505A;&#x51FA;&#x4EC0;&#x4E48;&#x6210;&#x679C;&#xFF0C;&#x4F46;&#x5BFC;&#x5E08;&#x4EBA;&#x633A;&#x597D;&#xFF0C;&#x7ECF;&#x5E38;&#x7167;&#x987E;&#x6211;&#x4EEC;&#xFF1B;&#x5230;&#x540E;&#x6765;&#xFF0C;&#x5E86;&#x5E78;&#x5730;&#xFF0C;&#x6211;&#x6210;&#x529F;&#x4FDD;&#x7814;&#x3002;</span><br><span class="line">&#x4E0D;&#x50CF;&#x8EAB;&#x8FB9;&#x7684;&#x4F18;&#x79C0;&#x8005;&#x90A3;&#x6837;&#xFF0C;&#x53EF;&#x4EE5;&#x9009;&#x62E9;&#x81EA;&#x5DF1;&#x7684;&#x9053;&#x8DEF;&#xFF0C;&#x9009;&#x62E9;&#x81EA;&#x5DF1;&#x7684;&#x6210;&#x529F;&#xFF1B;&#x81EA;&#x59CB;&#x81F3;&#x7EC8;&#xFF0C;&#x6211;&#x90FD;&#x6CA1;&#x505A;&#x4EC0;&#x4E48;&#x9009;&#x62E9;&#xFF0C;&#x4E5F;&#x4E0D;&#x77E5;&#x8BE5;&#x505A;&#x4EC0;&#x4E48;&#x9009;&#x62E9;&#x3002;&#x4E5F;&#x8BB8;&#x662F;&#x9ED8;&#x8BB8;&#x4E86;&#x81EA;&#x5DF1;&#x7684;&#x5351;&#x5FAE;&#xFF0C;&#x6211;&#x627E;&#x4E0D;&#x5230;&#x52A8;&#x529B;&#x53BB;&#x652F;&#x6491;&#x81EA;&#x5DF1;&#x594B;&#x6597;&#xFF0C;&#x53EA;&#x662F;&#x4F5B;&#x7CFB;&#x5EA6;&#x8FC7;&#x6BCF;&#x4E00;&#x5929;&#xFF0C;&#x6253;&#x6E38;&#x620F;&#x7684;&#x65F6;&#x95F4;&#x4E5F;&#x8D8A;&#x6765;&#x8D8A;&#x591A;&#x3002;&#x5BF9;&#x81EA;&#x5DF1;&#x7684;&#x7814;&#x7A76;&#x751F;&#x65B9;&#x5411;&#xFF0C;&#x8C08;&#x4E0D;&#x4E0A;&#x6CA1;&#x5174;&#x8DA3;&#xFF0C;&#x4F46;&#x5C31;&#x662F;&#x4E0D;&#x77E5;&#x4ECE;&#x54EA;&#x513F;&#x5207;&#x5165;&#xFF0C;&#x600E;&#x4E48;&#x8BA9;&#x81EA;&#x5DF1;&#x6C89;&#x6D78;&#x5176;&#x4E2D;&#x3002;</span><br><span class="line">&#x548C;&#x5F88;&#x591A;&#x540C;&#x7EA7;&#x751F;&#x4E00;&#x6837;&#xFF0C;&#x90FD;&#x559C;&#x6B22;&#x8C03;&#x4F83;&#x81EA;&#x5DF1;&#x662F;&#x96F6;&#x5E74;&#x7EA7;&#x5B66;&#x751F;&#xFF08;&#x7814;&#x7A76;&#x751F;&#xFF09;&#x3002;&#x6BCF;&#x5F53;&#x8FD9;&#x4E48;&#x8BF4;&#x65F6;&#xFF0C;&#x603B;&#x89C9;&#x5F97;&#x81EA;&#x5DF1;&#x4E0D;&#x914D;&#xFF0C;&#x56E0;&#x4E3A;&#x6211;&#x4E0D;&#x66FE;&#x62E5;&#x6709;&#x4E00;&#x4E2A;&#x5B8C;&#x6574;&#x7684;&#x672C;&#x79D1;&#x751F;&#x751F;&#x6DAF;&#xFF1A;&#x6CA1;&#x6709;&#x5145;&#x5B9E;&#x7684;&#x793E;&#x56E2;&#x3001;&#x793E;&#x5DE5;&#x7ECF;&#x5386;&#xFF0C;&#x6CA1;&#x6709;&#x6D3B;&#x8DC3;&#x7684;&#x793E;&#x4EA4;&#x548C;&#x4EBA;&#x8109;&#xFF0C;&#x6CA1;&#x6709;&#x5927;&#x8D5B;&#x83B7;&#x5956;&#x7ECF;&#x5386;&#xFF0C;&#x6CA1;&#x6709;&#x79D1;&#x7814;&#x6210;&#x679C;&#xFF0C;&#x66F4;&#x4E0D;&#x4F1A;&#x6709;&#x7F72;&#x81EA;&#x5DF1;&#x540D;&#x5B57;&#x7684;&#x8BBA;&#x6587;&#x3002;</span><br><span class="line">&#x60F3;&#x8D77;&#x521D;&#x4E2D;&#x73ED;&#x4E3B;&#x4EFB;&#x5728;&#x6211;&#x4F4E;&#x843D;&#x7684;&#x65F6;&#x5019;&#x9001;&#x6211;&#x7684;&#x56DB;&#x4E2A;&#x5B57;&#xFF1A;&#x6C38;&#x8446;&#x70ED;&#x60C5;&#x3002;&#x5728;&#x8BA4;&#x6E05;&#x4E8B;&#x5B9E;&#x540E;&#xFF0C;&#x4FDD;&#x6301;&#x6700;&#x521D;&#x7684;&#x51B3;&#x5FC3;&#x548C;&#x611F;&#x52A8;&#xFF0C;&#x4E5F;&#x8BB8;&#x8FD9;&#x5C31;&#x662F;&#x6211;&#x5E0C;&#x671B;&#x8FBE;&#x5230;&#x7684;&#x5883;&#x754C;&#x5427;&#x3002;&#x5728;&#x8FD9;&#x91CC;&#x628A;&#x8FD9;&#x56DB;&#x4E2A;&#x5B57;&#x9001;&#x7ED9;&#x6BCF;&#x4E2A;&#x4EBA;&#xFF1A;&#x6C38;&#x8446;&#x70ED;&#x60C5;&#x3002;</span><br></pre></td></tr></table></figure>
<p>18&#x5929;&#x4E4B;&#x524D; <a href="https://closed.social/ordinary/?page=5&amp;per_page=20&amp;sort_by=time##"> 21</a></p>
<p>No. 49</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#x6CA1;&#x6302;&#x8FC7;&#x79D1;&#xFF0C;&#x4E5F;&#x6CA1;&#x62FF;&#x8FC7;A+&#xFF0C;&#x6210;&#x7EE9;&#x5355;&#x4E0A;&#x6700;&#x591A;&#x7684;&#x662F;B+&#x3002;</span><br><span class="line">&#x6CA1;&#x6709;&#x793E;&#x5DE5;&#xFF0C;&#x6CA1;&#x6709;&#x793E;&#x56E2;&#xFF0C;&#x6CA1;&#x6709;&#x79D1;&#x7814;&#xFF0C;&#x6CA1;&#x6709;&#x5B9E;&#x8DF5;&#x3002;</span><br><span class="line">&#x552F;&#x4E00;&#x5F97;&#x8FC7;&#x7684;&#x5956;&#x5B66;&#x91D1;&#x662F;&#x5B66;&#x4E60;&#x8FDB;&#x6B65;&#x5956;&#x3002;</span><br><span class="line">&#x6CA1;&#x4EC0;&#x4E48;&#x670B;&#x53CB;&#xFF0C;&#x6700;&#x719F;&#x6089;&#x7684;&#x4EBA;&#x662F;&#x5BA4;&#x53CB;&#x3002;&#x5BA4;&#x53CB;&#x8131;&#x5355;&#x4E4B;&#x540E;&#x60F3;&#x7EA6;&#x4EBA;&#x5403;&#x996D;&#x90FD;&#x4E0D;&#x77E5;&#x9053;&#x7EA6;&#x8C01;&#x3002;</span><br><span class="line">&#x6CA1;&#x6709;&#x7279;&#x957F;&#xFF0C;&#x66FE;&#x7ECF;&#x4F1A;&#x5199;&#x70B9;&#x4E66;&#x6CD5;&#xFF0C;&#x4E0A;&#x5927;&#x5B66;&#x540E;&#x6162;&#x6162;&#x5C31;&#x8352;&#x5E9F;&#x4E86;&#x3002;</span><br><span class="line">&#x505A;&#x8FC7;&#x4E24;&#x6B21;&#x5546;&#x8D5B;&#xFF0C;&#x6CA1;&#x6709;&#x6210;&#x679C;&#x3002;</span><br><span class="line">&#x505A;&#x8FC7;&#x4E24;&#x6BB5;&#x5B9E;&#x4E60;&#xFF0C;&#x6CA1;&#x6709;&#x6536;&#x83B7;&#x3002;</span><br><span class="line">&#x4EA4;&#x5F80;&#x4E94;&#x5E74;&#x7684;&#x7537;&#x670B;&#x53CB;&#x4FDD;&#x7814;&#x9694;&#x58C1;&#x4E86;&#xFF0C;&#x7EC8;&#x4E8E;&#x53EF;&#x4EE5;&#x7ED3;&#x675F;&#x5F02;&#x5730;&#x4ED6;&#x5374;&#x63D0;&#x4E86;&#x5206;&#x624B;&#x3002;</span><br><span class="line">&#x73B0;&#x5728;&#x8FDE;&#x7537;&#x670B;&#x53CB;&#x4E5F;&#x6CA1;&#x6709;&#x4E86;&#x3002;</span><br></pre></td></tr></table></figure>
<p>18&#x5929;&#x4E4B;&#x524D; <a href="https://closed.social/ordinary/?page=5&amp;per_page=20&amp;sort_by=time##"> 139</a></p>
<p>No. 48</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#x666E;&#x901A;&#x7684;&#x5927;&#x56DB;&#x5DE5;&#x79D1;&#x540C;&#x5B66;&#x4E00;&#x4E2A;&#xFF0C;&#x4FDD;&#x535A;&#x4E86;&#xFF0C;&#x5728;&#x522B;&#x4EBA;&#x773C;&#x91CC;&#x72B6;&#x51B5;&#x5927;&#x6982;&#x8FD8;&#x4E0D;&#x9519;&#xFF0C;&#x81F3;&#x5C11;&#x6CA1;&#x6709;&#x5F88;&#x591A;&#x540C;&#x5B66;&#x90A3;&#x4E48;&#x714E;&#x71AC;&#xFF0C;&#x4E2A;&#x4EBA;&#x5FC3;&#x6001;&#x4E00;&#x76F4;&#x5F88;&#x597D;&#x3002;</span><br><span class="line"></span><br><span class="line">&#x4E0A;&#x5927;&#x5B66;&#x4E4B;&#x524D;&#x6765;&#x5317;&#x4EAC;&#x73A9;&#x8FC7;&#x81F3;&#x5C11;&#x56DB;&#x56DE;&#xFF0C;&#x4ECE;&#x6CA1;&#x60F3;&#x7740;&#x6765;&#x6E05;&#x534E;&#x770B;&#x770B;&#xFF0C;&#x5FC3;&#x60F3;&#x53BB;&#x5B66;&#x6821;&#x54EA;&#x91CC;&#x6709;&#x53BB;&#x79D1;&#x6280;&#x9986;&#x597D;&#x73A9;&#x3002;</span><br><span class="line"></span><br><span class="line">&#x5927;&#x4E00;&#x7684;&#x65F6;&#x5019;&#x5B8C;&#x5168;&#x5B66;&#x4E0D;&#x4F1A;&#x5FAE;&#x79EF;&#x5206;&#xFF0C;&#x522B;&#x4EBA;&#x505A;&#x4E24;&#x4E09;&#x4E2A;&#x5C0F;&#x65F6;&#x7684;&#x4F5C;&#x4E1A;&#x6211;&#x505A;&#x4E00;&#x5929;&#xFF0C;&#x597D;&#x5728;&#x671F;&#x672B;&#x6B7B;&#x547D;&#x5730;&#x5B66;&#x554A;&#x5B66;&#xFF0C;&#x6700;&#x540E;&#x52C9;&#x5F3A;&#x8FC7;&#x5173;&#x3002;&#x5927;&#x4E00;&#x4E0B;&#x5F00;&#x59CB;&#x968F;&#x6CE2;&#x9010;&#x6D41;&#x505A;&#x793E;&#x5DE5;&#xFF0C;&#x5F00;&#x59CB;&#x7684;&#x4E00;&#x5E74;&#x5F88;&#x6709;&#x70ED;&#x60C5;&#xFF0C;&#x8FD8;&#x548C;&#x4E0D;&#x540C;&#x7684;&#x5927;&#x5BB6;&#x4E00;&#x8D77;&#x641E;&#x4E86;&#x4E00;&#x4E9B;&#x201C;&#x5927;&#x201D;&#x4E8B;&#x60C5;&#x3002;&#x5927;&#x4E00;&#x5927;&#x4E8C;&#x591A;&#x5C11;&#x90FD;&#x62FF;&#x4E86;&#x70B9;&#x96F6;&#x788E;&#x7684;&#x5956;&#x5B66;&#x91D1;&#xFF0C;&#x81EA;&#x5DF1;&#x7684;&#x52AA;&#x529B;&#x5F97;&#x5230;&#x4E86;&#x4E00;&#x70B9;&#x8BA4;&#x53EF;&#xFF08;&#x635E;&#x4E86;&#x94B1;&#xFF09;&#x662F;&#x5F00;&#x5FC3;&#x7684;&#x3002;&#x5927;&#x4E00;&#x8FD8;&#x53C2;&#x52A0;&#x8FC7;&#x793E;&#x56E2;&#xFF0C;&#x4F46;&#x662F;&#x540E;&#x6765;&#x6CA1;&#x65F6;&#x95F4;&#x9042;&#x9000;&#x51FA;&#x3002;</span><br><span class="line"></span><br><span class="line">&#x5927;&#x4E8C;&#x5927;&#x4E09;&#x4E24;&#x5E74;&#x6211;&#x4E2A;&#x4EBA;&#x53D8;&#x5316;&#x5F88;&#x5927;&#x3002;</span><br><span class="line">&#x5927;&#x4E8C;&#x5F00;&#x59CB;&#x610F;&#x8BC6;&#x5230;&#x7ADE;&#x4E89;&#x662F;&#x5B58;&#x5728;&#x7684;&#xFF0C;&#x4E8E;&#x662F;&#x5F00;&#x59CB;&#x4E3A;&#x51FA;&#x56FD;/&#x793E;&#x5DE5;/&#x4FDD;&#x7814;&#x4FDD;&#x535A;&#x505A;&#x4E09;&#x9009;&#x4E00;&#x7684;&#x51C6;&#x5907;&#xFF0C;&#x5927;&#x4E8C;&#x5F00;&#x59CB;&#x627E;&#x8001;&#x5E08;&#x3002;&#x5927;&#x4E8C;&#x7684;&#x793E;&#x5DE5;&#x78B0;&#x5230;&#x4E86;&#x4E00;&#x4E9B;&#x4E0D;&#x5F00;&#x5FC3;&#x7684;&#x4E8B;&#xFF0C;&#x70ED;&#x60C5;&#x88AB;&#x4E00;&#x4E9B;&#x4E0D;&#x559C;&#x6B22;&#x7684;&#x4EBA;&#x548C;&#x4E8B;&#x78E8;&#x6CA1;&#x4E86;&#xFF0C;&#x5927;&#x4E09;&#x5C31;&#x6CA1;&#x505A;&#x4E86;&#xFF0C;&#x81EA;&#x5DF1;&#x7684;&#x6027;&#x5B50;&#x4E5F;&#x786E;&#x5B9E;&#x4E0D;&#x9002;&#x5408;&#x505A;&#x793E;&#x5DE5;&#x3002;</span><br><span class="line">&#x5927;&#x4E09;&#x4E0A;&#x653E;&#x5F03;&#x4E86;&#x793E;&#x5DE5;&#xFF0C;&#x5927;&#x4E09;&#x4E0B;&#x653E;&#x5F03;&#x4E86;&#x51FA;&#x56FD;&#xFF0C;&#x5728;&#x5BB6;&#x51B3;&#x5B9A;&#x4E86;&#x8981;&#x4FDD;&#x535A;&#xFF0C;&#x4E00;&#x5207;&#x987A;&#x9042;&#x3002;</span><br><span class="line"></span><br><span class="line">&#x73B0;&#x5728;&#x5927;&#x56DB;&#x4E86;&#xFF0C;&#x4EBA;&#x8FD8;&#x662F;&#x7565;&#x5FD9;&#xFF0C;&#x8001;&#x5E08;&#x5F88;&#x597D;&#xFF0C;&#x6B63;&#x5728;&#x505A;&#x6BD5;&#x8BBE;&#xFF0C;&#x8C08;&#x604B;&#x7231;&#xFF0C;&#x597D;&#x597D;&#x6062;&#x590D;&#x8FC7;&#x53BB;&#x4E09;&#x5E74;&#x88AB;&#x6467;&#x6B8B;&#x5230;&#x6EE1;&#x76EE;&#x75AE;&#x75CD;&#x7684;&#x4F18;&#x79C0;&#x8EAB;&#x4F53;&#x3002;&#x8003;&#x8651;&#x5230;&#x4E4B;&#x540E;&#x5728;&#x5B66;&#x6821;&#x5F97;&#x518D;&#x5F85;&#x516D;&#x4E03;&#x5E74;&#xFF0C;&#x73B0;&#x5728;&#x60F3;&#x4E70;&#x7535;&#x52A8;&#x8F66;&#x3002;</span><br><span class="line"></span><br><span class="line">&#x73B0;&#x5728;&#x4E0D;&#x6BD4;&#x4EE5;&#x524D;&#xFF0C;&#x611F;&#x89C9;&#x5DF2;&#x7ECF;&#x6CA1;&#x6CD5;&#x62FF;&#x547D;&#x5B66;&#x4E86;&#xFF0C;&#x4F46;&#x662F;&#x770B;&#x5F97;&#x66F4;&#x5F00;&#x4E86;&#xFF0C;&#x81F3;&#x5C11;&#x6211;&#x8FD8;&#x7B97;&#x633A;&#x52AA;&#x529B;&#xFF0C;&#x4EE5;&#x540E;&#x600E;&#x4E48;&#x6837;&#x4E5F;&#x6CA1;&#x90A3;&#x4E48;&#x95F9;&#x5FC3;&#x4E86;&#xFF0C;&#x8EAB;&#x4F53;&#x548C;&#x5FC3;&#x60C5;&#x6BD4;&#x4EC0;&#x4E48;&#x90FD;&#x91CD;&#x8981;&#x3002;</span><br><span class="line"></span><br><span class="line">&#x8FD9;&#x5927;&#x6982;&#x8FD8;&#x7B97;&#x666E;&#x901A;&#x5427;&#xFF1F;</span><br></pre></td></tr></table></figure>
<p>18&#x5929;&#x4E4B;&#x524D; <a href="https://closed.social/ordinary/?page=5&amp;per_page=20&amp;sort_by=time##"> 16</a></p>
<p>No. 47</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#x54C7;&#xFF0C;&#x53EF;&#x5FC3;&#x771F;&#x662F;&#x592A;&#x666E;&#x901A;&#x4E86;&#xFF01;</span><br><span class="line">&#x4E0D;&#x4F1A;&#x6709;&#x4EBA;&#x89C9;&#x5F97;&#x8FD9;&#x4E48;&#x53EF;&#x7231;&#x7684;&#x6C88;&#x53EF;&#x5FC3;&#x4E0D;&#x591F;&#x666E;&#x901A;&#x5427;&#xFF01;</span><br></pre></td></tr></table></figure>]]></content>
  </entry>
  <entry>
    <title>leetcode-621. Task Scheduler</title>
    <url>/2020/11/16/leetcode-621-Task-Scheduler/</url>
    <content><![CDATA[<h4 id="621-Task-Scheduler"><a href="https://leetcode-cn.com/problems/task-scheduler/">621. Task Scheduler</a></h4>
<a id="more"></a>
<p>&#x96BE;&#x5EA6;&#x4E2D;&#x7B49;423</p>
<p>Given a characters array <code>tasks</code>, representing the tasks a CPU needs to do, where each letter represents a different task. Tasks could be done in any order. Each task is done in one unit of time. For each unit of time, the CPU could complete either one task or just be idle.</p>
<p>However, there is a non-negative integer <code>n</code> that represents the cooldown period between two <strong>same tasks</strong> (the same letter in the array), that is that there must be at least <code>n</code> units of time between any two same tasks.</p>
<p>Return <em>the least number of units of times that the CPU will take to finish all the given tasks</em>.</p>
<p><strong>Example 1:</strong></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Input: tasks = [&quot;A&quot;,&quot;A&quot;,&quot;A&quot;,&quot;B&quot;,&quot;B&quot;,&quot;B&quot;], n = 2</span><br><span class="line">Output: 8</span><br><span class="line">Explanation: </span><br><span class="line">A -&gt; B -&gt; idle -&gt; A -&gt; B -&gt; idle -&gt; A -&gt; B</span><br><span class="line">There is at least 2 units of time between any two same tasks.</span><br></pre></td></tr></table></figure>
<p><strong>Example 2:</strong></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Input: tasks = [&quot;A&quot;,&quot;A&quot;,&quot;A&quot;,&quot;B&quot;,&quot;B&quot;,&quot;B&quot;], n = 0</span><br><span class="line">Output: 6</span><br><span class="line">Explanation: On this case any permutation of size 6 would work since n = 0.</span><br><span class="line">[&quot;A&quot;,&quot;A&quot;,&quot;A&quot;,&quot;B&quot;,&quot;B&quot;,&quot;B&quot;]</span><br><span class="line">[&quot;A&quot;,&quot;B&quot;,&quot;A&quot;,&quot;B&quot;,&quot;A&quot;,&quot;B&quot;]</span><br><span class="line">[&quot;B&quot;,&quot;B&quot;,&quot;B&quot;,&quot;A&quot;,&quot;A&quot;,&quot;A&quot;]</span><br><span class="line">...</span><br><span class="line">And so on.</span><br></pre></td></tr></table></figure>
<p><strong>Example 3:</strong></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Input: tasks = [&quot;A&quot;,&quot;A&quot;,&quot;A&quot;,&quot;A&quot;,&quot;A&quot;,&quot;A&quot;,&quot;B&quot;,&quot;C&quot;,&quot;D&quot;,&quot;E&quot;,&quot;F&quot;,&quot;G&quot;], n = 2</span><br><span class="line">Output: 16</span><br><span class="line">Explanation: </span><br><span class="line">One possible solution is</span><br><span class="line">A -&gt; B -&gt; C -&gt; A -&gt; D -&gt; E -&gt; A -&gt; F -&gt; G -&gt; A -&gt; idle -&gt; idle -&gt; A -&gt; idle -&gt; idle -&gt; A</span><br></pre></td></tr></table></figure>
<p><strong>Constraints:</strong></p>
<ul>
<li><code>1 &lt;= task.length &lt;= 104</code></li>
<li><code>tasks[i]</code> is upper-case English letter.</li>
<li>The integer <code>n</code> is in the range <code>[0, 100]</code>.</li>
</ul>
<h4 id="solution">solution</h4>
<p>&#x6211;&#x7684;&#x83DC;&#x9E21;&#x505A;&#x6CD5;&#xFF0C;&#x4E00;&#x4E2A;&#x4E00;&#x4E2A;&#x7684;&#x6A21;&#x62DF;&#x51FA;&#x6765;</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">leastInterval</span>(<span class="params">self, tasks: List[str], n: int</span>) -&gt; int:</span></span><br><span class="line">        ans=<span class="number">0</span></span><br><span class="line">        <span class="keyword">if</span> <span class="keyword">not</span> n: <span class="keyword">return</span> len(tasks) </span><br><span class="line">        lastappear=[<span class="number">-1</span> <span class="keyword">for</span> _ <span class="keyword">in</span> range(<span class="number">0</span>,<span class="number">26</span>)]</span><br><span class="line">        cnt_task=[[_,<span class="number">0</span>] <span class="keyword">for</span> _ <span class="keyword">in</span> range(<span class="number">0</span>,<span class="number">26</span>)]</span><br><span class="line">        <span class="keyword">for</span> x <span class="keyword">in</span> tasks:</span><br><span class="line">            cnt_task[ord(x)-ord(<span class="string">&apos;A&apos;</span>)][<span class="number">-1</span>]+=<span class="number">1</span></span><br><span class="line">        cnt_task=sorted(cnt_task,key=<span class="keyword">lambda</span> x: -x[<span class="number">-1</span>])</span><br><span class="line">        <span class="keyword">while</span> cnt_task[<span class="number">-1</span>][<span class="number">-1</span>] ==<span class="number">0</span>:</span><br><span class="line">            cnt_task.pop()</span><br><span class="line">        i=<span class="number">0</span></span><br><span class="line">        <span class="keyword">while</span> cnt_task <span class="keyword">and</span> cnt_task[<span class="number">0</span>][<span class="number">1</span>]&gt;<span class="number">1</span>:</span><br><span class="line">            <span class="comment"># print(cnt_task)</span></span><br><span class="line">            <span class="comment"># print(&quot;ans&quot;,ans, len(cnt_task))</span></span><br><span class="line">            <span class="keyword">if</span> n &gt;= len(cnt_task)<span class="number">-1</span>:</span><br><span class="line">                ans+=n-len(cnt_task)+<span class="number">1</span></span><br><span class="line">                i=<span class="number">0</span></span><br><span class="line">                <span class="keyword">for</span> i <span class="keyword">in</span> cnt_task:</span><br><span class="line">                    i[<span class="number">-1</span>]-=<span class="number">1</span></span><br><span class="line">                <span class="keyword">while</span> cnt_task <span class="keyword">and</span> cnt_task[<span class="number">-1</span>][<span class="number">-1</span>]==<span class="number">0</span>:</span><br><span class="line">                    cnt_task.pop()</span><br><span class="line">            <span class="keyword">else</span> :</span><br><span class="line">                <span class="keyword">for</span> i <span class="keyword">in</span> range(len(cnt_task)):</span><br><span class="line">                    <span class="keyword">if</span> i &lt;=n:</span><br><span class="line">                     cnt_task[i][<span class="number">1</span>]-=<span class="number">1</span></span><br><span class="line">                    <span class="keyword">elif</span> cnt_task[i][<span class="number">1</span>] &lt;= cnt_task[<span class="number">0</span>][<span class="number">1</span>]:</span><br><span class="line">                        <span class="keyword">break</span></span><br><span class="line">                cnt_task=sorted(cnt_task,key=<span class="keyword">lambda</span> x: -x[<span class="number">-1</span>])</span><br><span class="line">                <span class="comment"># print(cnt_task)</span></span><br><span class="line">                <span class="keyword">while</span> cnt_task[<span class="number">-1</span>][<span class="number">-1</span>] ==<span class="number">0</span>:</span><br><span class="line">                    cnt_task.pop()</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> ans+len(tasks)</span><br></pre></td></tr></table></figure>
<p>&#x5927;&#x4F6C;&#x7684;&#x505A;&#x6CD5;&#xFF0C;&#x6876;&#x601D;&#x60F3;</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">leastInterval</span><span class="params">(<span class="built_in">vector</span>&lt;<span class="keyword">char</span>&gt;&amp; tasks, <span class="keyword">int</span> n)</span> </span>{</span><br><span class="line">        <span class="keyword">int</span> len=tasks.size();</span><br><span class="line">        <span class="function"><span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; <span class="title">vec</span><span class="params">(<span class="number">26</span>)</span></span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">char</span> c:tasks) ++vec[c-<span class="string">&apos;A&apos;</span>];</span><br><span class="line">        sort(vec.begin(),vec.end(),[](<span class="keyword">int</span>&amp; x,<span class="keyword">int</span>&amp;y){<span class="keyword">return</span> x&gt;y;});</span><br><span class="line">        <span class="keyword">int</span> cnt=<span class="number">1</span>;</span><br><span class="line">        <span class="keyword">while</span>(cnt&lt;vec.size()&amp;&amp;vec[cnt]==vec[<span class="number">0</span>]) cnt++;</span><br><span class="line">        <span class="keyword">return</span> max(len,cnt+(n+<span class="number">1</span>)*(vec[<span class="number">0</span>]<span class="number">-1</span>) );</span><br><span class="line">    }</span><br></pre></td></tr></table></figure>
<pre><code>
&#x4F5C;&#x8005;&#xFF1A;popopop
&#x94FE;&#x63A5;&#xFF1A;https://leetcode-cn.com/problems/task-scheduler/solution/tong-zi-by-popopop/
&#x6765;&#x6E90;&#xFF1A;&#x529B;&#x6263;&#xFF08;LeetCode&#xFF09;
&#x8457;&#x4F5C;&#x6743;&#x5F52;&#x4F5C;&#x8005;&#x6240;&#x6709;&#x3002;&#x5546;&#x4E1A;&#x8F6C;&#x8F7D;&#x8BF7;&#x8054;&#x7CFB;&#x4F5C;&#x8005;&#x83B7;&#x5F97;&#x6388;&#x6743;&#xFF0C;&#x975E;&#x5546;&#x4E1A;&#x8F6C;&#x8F7D;&#x8BF7;&#x6CE8;&#x660E;&#x51FA;&#x5904;&#x3002;</code></pre>
]]></content>
      <categories>
        <category>leetcode</category>
      </categories>
      <tags>
        <tag>贪心</tag>
        <tag>好题</tag>
      </tags>
  </entry>
  <entry>
    <title>leetcode-452. Minimum Number of Arrows to Burst Balloons</title>
    <url>/2020/11/15/leetcode-452-Minimum-Number-of-Arrows-to-Burst-Balloons/</url>
    <content><![CDATA[<h4 id="452-Minimum-Number-of-Arrows-to-Burst-Balloons"><a href="https://leetcode-cn.com/problems/minimum-number-of-arrows-to-burst-balloons/">452. Minimum Number of Arrows to Burst Balloons</a></h4>
<a id="more"></a>
<p>&#x96BE;&#x5EA6;&#x4E2D;&#x7B49;203</p>
<p>There are some spherical balloons spread in two-dimensional space. For each balloon, provided input is the start and end coordinates of the horizontal diameter. Since it&#x2019;s horizontal, y-coordinates don&#x2019;t matter, and hence the x-coordinates of start and end of the diameter suffice. The start is always smaller than the end.</p>
<p>An arrow can be shot up exactly vertically from different points along the x-axis. A balloon with <code>xstart</code> and <code>xend</code> bursts by an arrow shot at <code>x</code> if <code>xstart &#x2264; x &#x2264; xend</code>. There is no limit to the number of arrows that can be shot. An arrow once shot keeps traveling up infinitely.</p>
<p>Given an array <code>points</code> where <code>points[i] = [xstart, xend]</code>, return <em>the minimum number of arrows that must be shot to burst all balloons</em>.</p>
<p><strong>Example 1:</strong></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Input: points = [[10,16],[2,8],[1,6],[7,12]]</span><br><span class="line">Output: 2</span><br><span class="line">Explanation: One way is to shoot one arrow for example at x = 6 (bursting the balloons [2,8] and [1,6]) and another arrow at x = 11 (bursting the other two balloons).</span><br></pre></td></tr></table></figure>
<p><strong>Example 2:</strong></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Input: points = [[1,2],[3,4],[5,6],[7,8]]</span><br><span class="line">Output: 4</span><br></pre></td></tr></table></figure>
<p><strong>Example 3:</strong></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Input: points = [[1,2],[2,3],[3,4],[4,5]]</span><br><span class="line">Output: 2</span><br></pre></td></tr></table></figure>
<p><strong>Example 4:</strong></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Input: points = [[1,2]]</span><br><span class="line">Output: 1</span><br></pre></td></tr></table></figure>
<p><strong>Example 5:</strong></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Input: points = [[2,3],[2,3]]</span><br><span class="line">Output: 1</span><br></pre></td></tr></table></figure>
<p><strong>Constraints:</strong></p>
<ul>
<li><code>0 &lt;= points.length &lt;= 104</code></li>
<li><code>points[i].length == 2</code></li>
<li><code>-2^31 &lt;= xstart &lt; xend &lt;= 231 - 1</code></li>
</ul>
<h4 id="solution">solution</h4>
<p>&#x8D2A;&#x5FC3; &#xFF0C;&#x628A;&#x56FE;&#x753B;&#x51FA;&#x6765;&#x5C31;&#x884C;</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">findMinArrowShots</span>(<span class="params">self, points: List[List[int]]</span>) -&gt; int:</span></span><br><span class="line">        points=sorted(points,key=<span class="keyword">lambda</span> x:(x[<span class="number">0</span>],x[<span class="number">-1</span>]))</span><br><span class="line">        cnt,i=<span class="number">0</span>,<span class="number">0</span></span><br><span class="line">        <span class="keyword">while</span> i &lt; len(points):</span><br><span class="line">            imin=points[i][<span class="number">-1</span>]</span><br><span class="line">            cnt+=<span class="number">1</span></span><br><span class="line">            j=i+<span class="number">1</span></span><br><span class="line">            <span class="keyword">while</span> j&lt;len(points):</span><br><span class="line">                <span class="keyword">if</span> points[j][<span class="number">0</span>] &lt;= imin:</span><br><span class="line">                    imin=min(imin,points[j][<span class="number">1</span>])</span><br><span class="line">                    j+=<span class="number">1</span></span><br><span class="line">                <span class="keyword">else</span> :</span><br><span class="line">                    <span class="keyword">break</span> </span><br><span class="line">            i=j</span><br><span class="line">           </span><br><span class="line">        <span class="keyword">return</span> cnt</span><br></pre></td></tr></table></figure>
]]></content>
      <tags>
        <tag>贪心</tag>
      </tags>
  </entry>
  <entry>
    <title>leetcode-321. Create Maximum Number</title>
    <url>/2020/11/12/leetcode-321-Create-Maximum-Number/</url>
    <content><![CDATA[<h4 id="321-Create-Maximum-Number"><a href="https://leetcode-cn.com/problems/create-maximum-number/">321. Create Maximum Number</a></h4>
<a id="more"></a>
<h4 id="&#x7C7B;&#x4F3C;&#x7684;&#x9898;">&#x7C7B;&#x4F3C;&#x7684;&#x9898;</h4>
<h4 id="316-Remove-Duplicate-Letters"><a href="https://leetcode-cn.com/problems/remove-duplicate-letters/">316. Remove Duplicate Letters</a></h4>
<p><a href="https://leetcode-cn.com/problems/remove-k-digits/"> #402 &#x79FB;&#x6389;K&#x4F4D;&#x6570;&#x5B57;</a></p>
<p>&#x96BE;&#x5EA6;&#x56F0;&#x96BE;163</p>
<p>Given two arrays of length <code>m</code> and <code>n</code> with digits <code>0-9</code> representing two numbers. Create the maximum number of length <code>k &lt;= m + n</code> from digits of the two. The relative order of the digits from the same array must be preserved. Return an array of the <code>k</code> digits.</p>
<p><strong>Note:</strong> You should try to optimize your time and space complexity.</p>
<p><strong>Example 1:</strong></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Input:</span><br><span class="line">nums1 = [3, 4, 6, 5]</span><br><span class="line">nums2 = [9, 1, 2, 5, 8, 3]</span><br><span class="line">k = 5</span><br><span class="line">Output:</span><br><span class="line">[9, 8, 6, 5, 3]</span><br></pre></td></tr></table></figure>
<p><strong>Example 2:</strong></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Input:</span><br><span class="line">nums1 = [6, 7]</span><br><span class="line">nums2 = [6, 0, 4]</span><br><span class="line">k = 5</span><br><span class="line">Output:</span><br><span class="line">[6, 7, 6, 0, 4]</span><br></pre></td></tr></table></figure>
<p><strong>Example 3:</strong></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Input:</span><br><span class="line">nums1 = [3, 9]</span><br><span class="line">nums2 = [8, 9]</span><br><span class="line">k = 3</span><br><span class="line">Output:</span><br><span class="line">[9, 8, 9]</span><br></pre></td></tr></table></figure>
<p>&#x901A;&#x8FC7;&#x6B21;&#x6570;5,784</p>
<p>&#x63D0;&#x4EA4;&#x6B21;&#x6570;17,990</p>
<h4 id="font-color-red-solution-font"><font color="red">solution</font></h4>
<p>&#x770B;&#x6765;&#x522B;&#x4EBA;&#x7684;&#x9898;&#x89E3;&#xFF0C;&#x539F;&#x6765;&#x5C31;&#x662F;&#x66B4;&#x529B;&#x7684;&#x679A;&#x4E3E;&#x6765;&#x4E2A;&#x6570;&#x7EC4;&#x5206;&#x522B;&#x53EF;&#x4EE5;&#x5F39;&#x51FA;&#x591A;&#x5C11;&#x4E2A;&#xFF0C;&#x7136;&#x540E;&#x627E;&#x5230;&#x90A3;&#x4E2A;&#x6700;&#x5927;&#x7684;</p>
<p>&#x6709;&#x4E2A;stl&#x51FD;&#x6570;</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line">lexicographical_compare(ans.begin(),ans.end(),res.begin(),res.end())</span><br><span class="line"> &#x6309;&#x5B57;&#x5178;&#x5E8F;&#x5BF9;&#x4FE9;&#x4E2A;&#x5E8F;&#x5217;&#x8FDB;&#x884C;&#x6BD4;&#x8F83;</span><br><span class="line"> &#x5982;&#x679C;ans&lt;res&#xFF0C;<span class="keyword">return</span> <span class="literal">true</span></span><br><span class="line">    &#x53EF;&#x4EE5;&#x4ECE;&#x6574;&#x4E2A;&#x5E8F;&#x5217;&#x7684;&#x4EFB;&#x610F;&#x4F4D;&#x7F6E;&#x5F00;&#x59CB;</span><br></pre></td></tr></table></figure>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> {</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; <span class="title">maxNumber</span><span class="params">(<span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt;&amp; nums1, <span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt;&amp; nums2, <span class="keyword">int</span> k)</span> </span>{</span><br><span class="line">       <span class="keyword">int</span> n=nums1.size(),m=nums2.size();</span><br><span class="line">       <span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt;ans;</span><br><span class="line">       <span class="keyword">for</span>(<span class="keyword">int</span> s=max(k-m,<span class="number">0</span>);s&lt;=min(k,n);++s)</span><br><span class="line">       {</span><br><span class="line">            <span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt;tmp1=fun(nums1,s);</span><br><span class="line">            <span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt;tmp2=fun(nums2,k-s);</span><br><span class="line">            <span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt;res;</span><br><span class="line">            <span class="keyword">auto</span> it=tmp1.begin(),it2=tmp2.begin();</span><br><span class="line">            <span class="keyword">while</span>(it!=tmp1.end()||it2!=tmp2.end())</span><br><span class="line">            {</span><br><span class="line">                res.push_back(lexicographical_compare(it,tmp1.end(),it2,tmp2.end())?*it2++:*it++);</span><br><span class="line">            }</span><br><span class="line">            ans=lexicographical_compare(ans.begin(),ans.end(),res.begin(),res.end())?res:ans;</span><br><span class="line">       } </span><br><span class="line">       <span class="keyword">return</span> ans;</span><br><span class="line">    }</span><br><span class="line">    <span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt;fun(<span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt;&amp;v,<span class="keyword">int</span> k)</span><br><span class="line">    {</span><br><span class="line">        <span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt;ans;</span><br><span class="line">        <span class="keyword">int</span> pop=v.size()-k;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;v.size();i++)</span><br><span class="line">        {</span><br><span class="line">            <span class="keyword">while</span>(!ans.empty()&amp;&amp;ans.back()&lt;v[i]&amp;&amp;pop&gt;<span class="number">0</span>)</span><br><span class="line">            {</span><br><span class="line">                ans.pop_back();</span><br><span class="line">                pop--;</span><br><span class="line">            }</span><br><span class="line">            ans.push_back(v[i]);</span><br><span class="line">        }</span><br><span class="line">        ans.resize(k);</span><br><span class="line">        <span class="keyword">return</span> ans;</span><br><span class="line">    }</span><br><span class="line">};</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>leetcode</category>
      </categories>
      <tags>
        <tag>贪心</tag>
        <tag>好题</tag>
        <tag>单调栈</tag>
      </tags>
  </entry>
  <entry>
    <title>leetcode-316. Remove Duplicate Letters</title>
    <url>/2020/11/12/leetcode-316-Remove-Duplicate-Letters/</url>
    <content><![CDATA[<h4 id="316-Remove-Duplicate-Letters"><a href="https://leetcode-cn.com/problems/remove-duplicate-letters/">316. Remove Duplicate Letters</a></h4>
<a id="more"></a>
<h4 id="&#x7C7B;&#x4F3C;&#x7684;&#x9898;">&#x7C7B;&#x4F3C;&#x7684;&#x9898;</h4>
<p><a href="https://leetcode-cn.com/problems/create-maximum-number/"> #321 &#x62FC;&#x63A5;&#x6700;&#x5927;&#x6570;</a></p>
<p><a href="https://leetcode-cn.com/problems/remove-k-digits/"> #402 &#x79FB;&#x6389;K&#x4F4D;&#x6570;&#x5B57;</a></p>
<p>&#x96BE;&#x5EA6;&#x4E2D;&#x7B49;265</p>
<p>Given a string <code>s</code>, remove duplicate letters so that every letter appears once and only once. You must make sure your result is <strong>the smallest in lexicographical order</strong> among all possible results.</p>
<p><strong>Note:</strong> This question is the same as 1081: <a href="https://leetcode.com/problems/smallest-subsequence-of-distinct-characters/">https://leetcode.com/problems/smallest-subsequence-of-distinct-characters/</a></p>
<p><strong>Example 1:</strong></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Input: s = &quot;bcabc&quot;</span><br><span class="line">Output: &quot;abc&quot;</span><br></pre></td></tr></table></figure>
<p><strong>Example 2:</strong></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Input: s = &quot;cbacdcbc&quot;</span><br><span class="line">Output: &quot;acdb&quot;</span><br></pre></td></tr></table></figure>
<p><strong>Constraints:</strong></p>
<ul>
<li><code>1 &lt;= s.length &lt;= 104</code></li>
<li><code>s</code> consists of lowercase English letters.</li>
</ul>
<h4 id="font-color-red-solution-font"><font color="red">solution</font></h4>
<p>&#x4F7F;&#x7528;&#x5355;&#x8C03;&#x6808;&#x601D;&#x60F3;&#xFF0C;string&#x53EF;&#x4EE5;&#x6309;&#x505A;&#x4E00;&#x4E2A;&#x5355;&#x8C03;&#x6808;&#x5566;</p>
<p>&#x9996;&#x5148;&#x904D;&#x5386;&#x4E00;&#x904D;&#xFF0C;&#x8BB0;&#x5F55;&#x6BCF;&#x4E2A;&#x5B57;&#x7B26;&#x51FA;&#x73B0;&#x7684;&#x6B21;&#x6570;</p>
<p><code>vector&lt;bool&gt;instack</code>&#x8868;&#x793A;&#x8BE5;&#x5B57;&#x7B26;&#x662F;&#x4E0D;&#x662F;&#x5DF2;&#x7ECF;&#x51FA;&#x73B0;&#x5728;&#x4E86;&#x6808;&#x91CC;&#x9762;&#xFF0C;&#x4E5F;&#x5C31;&#x662F;&#x8BF4;&#x524D;&#x9762;&#x6CA1;&#x6709;&#x820D;&#x5F03;&#xFF0C;&#x6240;&#x4EE5;&#x8FD9;&#x4E2A;&#x4F4D;&#x7F6E;&#x7684;&#x8BE5;&#x5B57;&#x7B26;&#x5FC5;&#x987B;&#x820D;&#x5F03;&#xFF0C;&#x5E76;&#x4E14;<code>cnt[x]--</code></p>
<p>&#x6240;&#x4EE5;&#x5728;&#x6574;&#x4E2A;&#x6808;&#x7684;&#x5F39;&#x51FA;&#x548C;&#x538B;&#x5165;&#x8FC7;&#x7A0B;&#x4E2D;&#x90FD;&#x8981;&#x7EF4;&#x62A4; <code>instack</code>&#x548C;<code>cnt</code></p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> {</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="built_in">string</span> <span class="title">removeDuplicateLetters</span><span class="params">(<span class="built_in">string</span> s)</span> </span>{</span><br><span class="line">        <span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt;cnt(<span class="number">26</span>,<span class="number">0</span>);</span><br><span class="line">        <span class="built_in">vector</span>&lt;<span class="keyword">bool</span>&gt;instack(<span class="number">26</span>,<span class="number">0</span>);</span><br><span class="line">        <span class="built_in">string</span> ans=<span class="string">&quot;&quot;</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">auto</span> x:s) cnt[x-<span class="string">&apos;a&apos;</span>]++;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;s.size();++i)</span><br><span class="line">        {</span><br><span class="line">            <span class="keyword">while</span>(!instack[s[i]-<span class="string">&apos;a&apos;</span>]&amp;&amp;!ans.empty()&amp;&amp;ans.back()&gt;s[i]&amp;&amp;cnt[ans.back()-<span class="string">&apos;a&apos;</span>]&gt;<span class="number">1</span>)</span><br><span class="line">            {</span><br><span class="line">                cnt[ans.back()-<span class="string">&apos;a&apos;</span>]--;</span><br><span class="line">                instack[ans.back()-<span class="string">&apos;a&apos;</span>]=<span class="literal">false</span>;</span><br><span class="line">                ans.pop_back();</span><br><span class="line">            }</span><br><span class="line">            <span class="keyword">if</span>(!instack[s[i]-<span class="string">&apos;a&apos;</span>])</span><br><span class="line">            {</span><br><span class="line">                ans.push_back(s[i]);</span><br><span class="line">                instack[s[i]-<span class="string">&apos;a&apos;</span>]=<span class="literal">true</span>;</span><br><span class="line">            }</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">                cnt[s[i]-<span class="string">&apos;a&apos;</span>]--;</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">return</span> ans;</span><br><span class="line">    }</span><br><span class="line">};</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>leetcode</category>
      </categories>
      <tags>
        <tag>贪心</tag>
        <tag>好题</tag>
        <tag>单调栈</tag>
      </tags>
  </entry>
  <entry>
    <title>leetcode-376. Wiggle Subsequence</title>
    <url>/2020/11/12/leetcode-376-Wiggle-Subsequence/</url>
    <content><![CDATA[<h4 id="376-Wiggle-Subsequence"><a href="https://leetcode-cn.com/problems/wiggle-subsequence/">376. Wiggle Subsequence</a></h4>
<a id="more"></a>
<p>&#x96BE;&#x5EA6;&#x4E2D;&#x7B49;264</p>
<p>A sequence of numbers is called a <strong>wiggle sequence</strong> if the differences between successive numbers strictly alternate between positive and negative. The first difference (if one exists) may be either positive or negative. A sequence with fewer than two elements is trivially a wiggle sequence.</p>
<p>For example, <code>[1,7,4,9,2,5]</code> is a wiggle sequence because the differences <code>(6,-3,5,-7,3)</code> are alternately positive and negative. In contrast, <code>[1,4,7,2,5]</code> and <code>[1,7,4,5,5]</code> are not wiggle sequences, the first because its first two differences are positive and the second because its last difference is zero.</p>
<p>Given a sequence of integers, return the length of the longest subsequence that is a wiggle sequence. A subsequence is obtained by deleting some number of elements (eventually, also zero) from the original sequence, leaving the remaining elements in their original order.</p>
<p><strong>Example 1:</strong></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Input: [1,7,4,9,2,5]</span><br><span class="line">Output: 6</span><br><span class="line">Explanation: The entire sequence is a wiggle sequence.</span><br></pre></td></tr></table></figure>
<p><strong>Example 2:</strong></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Input: [1,17,5,10,13,15,10,5,16,8]</span><br><span class="line">Output: 7</span><br><span class="line">Explanation: There are several subsequences that achieve this length. One is [1,17,10,13,10,16,8].</span><br></pre></td></tr></table></figure>
<p><strong>Example 3:</strong></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Input: [1,2,3,4,5,6,7,8,9]</span><br><span class="line">Output: 2</span><br></pre></td></tr></table></figure>
<p><strong>Follow up:</strong><br>
Can you do it in O(<em>n</em>) time?</p>
<p><font color="red">solution</font></p>
<p>&#x8D2A;&#x5FC3;&#xFF0C;&#x5728;&#x4FDD;&#x8BC1;&#x8FD9;&#x5BF9;&#x6570;&#x636E;&#x548C;&#x4E0A;&#x4E00;&#x5BF9;&#x6570;&#x636E;&#x5F02;&#x53F7;&#x7684;&#x60C5;&#x51B5;&#x4E0B;&#xFF0C;&#x5C3D;&#x91CF;&#x8BA9;<code>abs(num[index]-num[i])</code>&#x5927;&#xFF0C;&#x8FD9;&#x6837;<code>num[nextindex]-num[index]*(num[index]-num[i])</code>&#x5F02;&#x53F7;&#x7684;&#x53EF;&#x80FD;&#x6027;&#x8D8A;&#x5927;&#x3002;&#x5C31;&#x662F;&#x8BA9;index&#x5904;&#x4E8E;&#x5C40;&#x90E8;&#x533A;&#x95F4;&#x7684;&#x6781;&#x503C;&#xFF08;&#x53EF;&#x4EE5;&#x7406;&#x89E3;&#x4E3A;&#x5C71;&#x5CF0;&#x6216;&#x8005;&#x5C71;&#x8C37;&#xFF09;</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#x4F8B;</span><br><span class="line">[1,17,5,10,13,15,10,5,16,8]</span><br><span class="line">step1 :[1,17] +</span><br><span class="line">step2 :[-,12[abs(5-17)] [-,7[abs(10-17)]]&#x6240;&#x4EE5;&#x9009;&#x62E9;5&#x5165;&#x961F; [1,17,5] -</span><br><span class="line">step3 :[+,5[abs(10-5)] [-,8[abs(13-5)]]  [-,10[abs(15-5)]]&#x6240;&#x4EE5;&#x9009;&#x62E9;15&#x5165;&#x961F;[1,17,5,15]+</span><br><span class="line">step4: &#x9009;&#x62E9;5&#x5165;&#x961F;[1,17,5,15,5]</span><br><span class="line">step5: &#x9009;&#x62E9;16&#x5165;&#x961F;[1,17,5,15,5,16]</span><br><span class="line">step6: &#x9009;&#x62E9;8&#x5165;&#x961F;[1,17,5,15,5,16,8]</span><br></pre></td></tr></table></figure>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> {</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="keyword">int</span> <span class="title">wiggleMaxLength</span><span class="params">(<span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt;&amp; nums)</span> </span>{</span><br><span class="line">        <span class="keyword">if</span>(nums.size()&lt;<span class="number">2</span>)<span class="keyword">return</span> nums.size();</span><br><span class="line">        <span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt;ans;</span><br><span class="line">        ans.push_back(nums[<span class="number">0</span>]);</span><br><span class="line">        <span class="keyword">int</span> i=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span>( i=<span class="number">0</span>;i&lt;nums.size()<span class="number">-1</span>;)</span><br><span class="line">        {</span><br><span class="line">            </span><br><span class="line">            <span class="keyword">int</span> index=i+<span class="number">1</span>,val;</span><br><span class="line">            <span class="keyword">int</span> flag=nums[index]&gt;nums[i]?<span class="number">1</span>:<span class="number">-1</span>;</span><br><span class="line">            val=<span class="built_in">abs</span>(nums[index]-nums[i]);</span><br><span class="line">            <span class="keyword">if</span>(val==<span class="number">0</span>){i=index;<span class="keyword">continue</span>;}<span class="comment">//ifnum[index]==nums[i]&#x76F4;&#x63A5;&#x8DF3;&#x8FC7;</span></span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> j=index;j&lt;nums.size();++j)</span><br><span class="line">            {</span><br><span class="line">                <span class="keyword">if</span>((nums[j]-nums[i]) *flag&gt;<span class="number">0</span>&amp;&amp;<span class="built_in">abs</span>(nums[j]-nums[i])&gt;=val)</span><br><span class="line">                {</span><br><span class="line">                    index=j;val=<span class="built_in">abs</span>(nums[j]-nums[i]);</span><br><span class="line">                }</span><br><span class="line">                <span class="keyword">else</span></span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">            }</span><br><span class="line">             ans.push_back(nums[index]);</span><br><span class="line">            i=index;</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">return</span> ans.size();</span><br><span class="line">    }</span><br><span class="line">};</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>leetcode</category>
      </categories>
      <tags>
        <tag>贪心</tag>
        <tag>好题</tag>
      </tags>
  </entry>
  <entry>
    <title>leetcode-210. Course Schedule II</title>
    <url>/2020/11/12/leetcode-210-Course-Schedule-II/</url>
    <content><![CDATA[<h4 id="210-Course-Schedule-II"><a href="https://leetcode-cn.com/problems/course-schedule-ii/">210. Course Schedule II</a></h4>
<a id="more"></a>
<p>&#x96BE;&#x5EA6;&#x4E2D;&#x7B49;300</p>
<p>There are a total of <code>n</code> courses you have to take labelled from <code>0</code> to <code>n - 1</code>.</p>
<p>Some courses may have <code>prerequisites</code>, for example, if <code>prerequisites[i] = [ai, bi]</code> this means you must take the course <code>bi</code>before the course <code>ai</code>.</p>
<p>Given the total number of courses <code>numCourses</code> and a list of the <code>prerequisite</code> pairs, return the ordering of courses you should take to finish all courses.</p>
<p>If there are many valid answers, return <strong>any</strong> of them. If it is impossible to finish all courses, return <strong>an empty array</strong>.</p>
<p><strong>Example 1:</strong></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Input: numCourses = 2, prerequisites = [[1,0]]</span><br><span class="line">Output: [0,1]</span><br><span class="line">Explanation: There are a total of 2 courses to take. To take course 1 you should have finished course 0. So the correct course order is [0,1].</span><br></pre></td></tr></table></figure>
<p><strong>Example 2:</strong></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Input: numCourses = 4, prerequisites = [[1,0],[2,0],[3,1],[3,2]]</span><br><span class="line">Output: [0,2,1,3]</span><br><span class="line">Explanation: There are a total of 4 courses to take. To take course 3 you should have finished both courses 1 and 2. Both courses 1 and 2 should be taken after you finished course 0.</span><br><span class="line">So one correct course order is [0,1,2,3]. Another correct ordering is [0,2,1,3].</span><br></pre></td></tr></table></figure>
<p><strong>Example 3:</strong></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Input: numCourses = 1, prerequisites = []</span><br><span class="line">Output: [0]</span><br></pre></td></tr></table></figure>
<p><strong>Constraints:</strong></p>
<ul>
<li><code>1 &lt;= numCourses &lt;= 2000</code></li>
<li><code>0 &lt;= prerequisites.length &lt;= numCourses * (numCourses - 1)</code></li>
<li><code>prerequisites[i].length == 2</code></li>
<li><code>0 &lt;= ai, bi &lt; numCourses</code></li>
<li><code>ai != bi</code></li>
<li>All the pairs <code>[ai, bi]</code> are <strong>distinct</strong>.</li>
</ul>
<h4 id="font-color-red-solution-font"><font color="red">solution</font></h4>
<h4 id="207-Course-Schedule&#x5728;&#x8FD9;&#x9053;&#x9898;&#x7684;&#x57FA;&#x7840;&#x4E0A;&#x6539;&#x4E00;&#x6539;"><a href="https://leetcode-cn.com/problems/course-schedule/">207. Course Schedule</a>&#x5728;&#x8FD9;&#x9053;&#x9898;&#x7684;&#x57FA;&#x7840;&#x4E0A;&#x6539;&#x4E00;&#x6539;</h4>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> {</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; <span class="title">findOrder</span><span class="params">(<span class="keyword">int</span> numCourses, <span class="built_in">vector</span>&lt;<span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt;&gt;&amp; prerequisites)</span> </span>{</span><br><span class="line">        <span class="keyword">int</span> finish=<span class="number">0</span>;</span><br><span class="line">        <span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt;precnt(numCourses,<span class="number">0</span>);</span><br><span class="line">        <span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt;G[numCourses];</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">auto</span> x:prerequisites)</span><br><span class="line">        {</span><br><span class="line">            G[x[<span class="number">1</span>]].push_back(x[<span class="number">0</span>]);</span><br><span class="line">            precnt[x[<span class="number">0</span>]]++;</span><br><span class="line">        }</span><br><span class="line">        <span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt;root,ans,emp;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;precnt.size();++i)</span><br><span class="line">            <span class="keyword">if</span>(precnt[i]==<span class="number">0</span>)</span><br><span class="line">            {   </span><br><span class="line">                finish++;</span><br><span class="line">                root.push_back(i);</span><br><span class="line">                ans.push_back(i);</span><br><span class="line">            }</span><br><span class="line">        <span class="keyword">while</span>(!root.empty())</span><br><span class="line">        {</span><br><span class="line">            <span class="keyword">int</span> index=root.back();root.pop_back();</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">auto</span> x:G[index])</span><br><span class="line">                <span class="keyword">if</span>(--precnt[x]==<span class="number">0</span>)</span><br><span class="line">                {</span><br><span class="line">                    root.push_back(x);</span><br><span class="line">                    ans.push_back(x);</span><br><span class="line">                    <span class="keyword">if</span>(++finish==numCourses)<span class="keyword">return</span> ans;</span><br><span class="line">                }</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">return</span> finish==numCourses?ans:emp;</span><br><span class="line">    }</span><br><span class="line">};</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>leetcode</category>
      </categories>
      <tags>
        <tag>图</tag>
        <tag>拓扑排序</tag>
      </tags>
  </entry>
  <entry>
    <title>leetcode-207. Course Schedule</title>
    <url>/2020/11/12/leetcode-207-Course-Schedule/</url>
    <content><![CDATA[<h4 id="207-Course-Schedule"><a href="https://leetcode-cn.com/problems/course-schedule/">207. Course Schedule</a></h4>
<a id="more"></a>
<p>&#x96BE;&#x5EA6;&#x4E2D;&#x7B49;625</p>
<p>There are a total of <code>numCourses</code> courses you have to take, labeled from <code>0</code>to <code>numCourses-1</code>.</p>
<p>Some courses may have prerequisites, for example to take course 0 you have to first take course 1, which is expressed as a pair: <code>[0,1]</code></p>
<p>Given the total number of courses and a list of prerequisite <strong>pairs</strong>, is it possible for you to finish all courses?</p>
<p><strong>Example 1:</strong></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Input: numCourses = 2, prerequisites = [[1,0]]</span><br><span class="line">Output: true</span><br><span class="line">Explanation: There are a total of 2 courses to take. </span><br><span class="line">             To take course 1 you should have finished course 0. So it is possible.</span><br></pre></td></tr></table></figure>
<p><strong>Example 2:</strong></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Input: numCourses = 2, prerequisites = [[1,0],[0,1]]</span><br><span class="line">Output: false</span><br><span class="line">Explanation: There are a total of 2 courses to take. </span><br><span class="line">             To take course 1 you should have finished course 0, and to take course 0 you should</span><br><span class="line">             also have finished course 1. So it is impossible.</span><br></pre></td></tr></table></figure>
<p><strong>Constraints:</strong></p>
<ul>
<li>The input prerequisites is a graph represented by <strong>a list of edges</strong>, not adjacency matrices. Read more about <a href="https://www.khanacademy.org/computing/computer-science/algorithms/graph-representation/a/representing-graphs">how a graph is represented</a>.</li>
<li>You may assume that there are no duplicate edges in the input prerequisites.</li>
<li><code>1 &lt;= numCourses &lt;= 10^5</code></li>
</ul>
<h4 id="font-color-red-solution-font"><font color="red">solution</font></h4>
<p>&#x62D3;&#x6251;&#x6392;&#x5E8F; &#x6A21;&#x677F;&#x9898;</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> {</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">bool</span> <span class="title">canFinish</span><span class="params">(<span class="keyword">int</span> numCourses, <span class="built_in">vector</span>&lt;<span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt;&gt;&amp; prerequisites)</span> </span>{</span><br><span class="line">        <span class="keyword">int</span> finish=<span class="number">0</span>;</span><br><span class="line">        <span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt;precnt(numCourses,<span class="number">0</span>);</span><br><span class="line">        <span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt;G[numCourses];</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">auto</span> x:prerequisites)</span><br><span class="line">        {</span><br><span class="line">            G[x[<span class="number">1</span>]].push_back(x[<span class="number">0</span>]);</span><br><span class="line">            precnt[x[<span class="number">0</span>]]++;</span><br><span class="line">        }</span><br><span class="line">        <span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt;root;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;precnt.size();++i)</span><br><span class="line">            <span class="keyword">if</span>(precnt[i]==<span class="number">0</span>)</span><br><span class="line">            {   </span><br><span class="line">                finish++;</span><br><span class="line">                root.push_back(i);</span><br><span class="line">            }</span><br><span class="line">        <span class="keyword">while</span>(!root.empty())</span><br><span class="line">        {</span><br><span class="line">            <span class="keyword">int</span> index=root.back();root.pop_back();</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">auto</span> x:G[index])</span><br><span class="line">                <span class="keyword">if</span>(--precnt[x]==<span class="number">0</span>)</span><br><span class="line">                {</span><br><span class="line">                    root.push_back(x);</span><br><span class="line">                    <span class="keyword">if</span>(++finish==numCourses)<span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">                }</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">return</span> finish==numCourses?<span class="number">1</span>:<span class="number">0</span>;</span><br><span class="line">    }</span><br><span class="line">};</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>leetcode</category>
      </categories>
      <tags>
        <tag>图</tag>
        <tag>拓扑排序</tag>
      </tags>
  </entry>
  <entry>
    <title>leetcode-5562. Minimum Deletions to Make Character Frequencies Unique</title>
    <url>/2020/11/08/leetcode-5562-Minimum-Deletions-to-Make-Character-Frequencies-Unique/</url>
    <content><![CDATA[<h4 id="5562-Minimum-Deletions-to-Make-Character-Frequencies-Unique"><a href="https://leetcode-cn.com/problems/minimum-deletions-to-make-character-frequencies-unique/">5562. Minimum Deletions to Make Character Frequencies Unique</a></h4>
<a id="more"></a>
<p>&#x96BE;&#x5EA6;&#x4E2D;&#x7B49;8</p>
<p>A string <code>s</code> is called <strong>good</strong> if there are no two different characters in <code>s</code>that have the same <strong>frequency</strong>.</p>
<p>Given a string <code>s</code>, return <em>the <strong>minimum</strong> number of characters you need to delete to make</em> <code>s</code> <em><strong>good</strong>.</em></p>
<p>The <strong>frequency</strong> of a character in a string is the number of times it appears in the string. For example, in the string <code>&quot;aab&quot;</code>, the <strong>frequency</strong> of <code>&apos;a&apos;</code> is <code>2</code>, while the <strong>frequency</strong> of <code>&apos;b&apos;</code> is <code>1</code>.</p>
<p><strong>Example 1:</strong></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Input: s = &quot;aab&quot;</span><br><span class="line">Output: 0</span><br><span class="line">Explanation: s is already good.</span><br></pre></td></tr></table></figure>
<p><strong>Example 2:</strong></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Input: s = &quot;aaabbbcc&quot;</span><br><span class="line">Output: 2</span><br><span class="line">Explanation: You can delete two &apos;b&apos;s resulting in the good string &quot;aaabcc&quot;.</span><br><span class="line">Another way it to delete one &apos;b&apos; and one &apos;c&apos; resulting in the good string &quot;aaabbc&quot;.</span><br></pre></td></tr></table></figure>
<p><strong>Example 3:</strong></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Input: s = &quot;ceabaacb&quot;</span><br><span class="line">Output: 2</span><br><span class="line">Explanation: You can delete both &apos;c&apos;s resulting in the good string &quot;eabaab&quot;.</span><br><span class="line">Note that we only care about characters that are still in the string at the end (i.e. frequency of 0 is ignored).</span><br></pre></td></tr></table></figure>
<p><strong>Constraints:</strong></p>
<ul>
<li>
<p><code>1 &lt;= s.length &lt;= 105</code></p>
</li>
<li>
<p><code>s</code> contains only lowercase English letters.</p>
<h3 id="font-color-blue-solution-font"><font color="blue">solution</font></h3>
<p>&#x7528; <code>unordered_map&lt;int,int&gt;um;</code>&#x8BB0;&#x5F55;&#x9891;&#x6570;&#x7684;&#x4E2A;&#x6570;</p>
<p>&#x53BB;&#x91CD;&#x64CD;&#x4F5C;&#x662F;&#xFF0C;&#x5982;&#x679C;<code>um[x]</code>&gt;1,&#x5219;&#x5F80;&#x540E;&#x627E;&#x4E00;&#x4E2A;<code>um[y]==0</code>&#x7684;&#x5730;&#x65B9;&#xFF0C;&#x628A;x&#x585E;&#x8FDB;&#x53BB;&#xFF0C;&#x7136;&#x540E;<code>um[y]=1</code></p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> {</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="built_in">unordered_map</span>&lt;<span class="keyword">int</span>,<span class="keyword">int</span>&gt;um;</span><br><span class="line">    <span class="function"><span class="keyword">int</span> <span class="title">minDeletions</span><span class="params">(<span class="built_in">string</span> s)</span> </span>{</span><br><span class="line">        <span class="keyword">int</span> q=<span class="number">0</span>;</span><br><span class="line">         <span class="keyword">int</span> cnt[<span class="number">26</span>];</span><br><span class="line">        fill(cnt,cnt+<span class="number">26</span>,<span class="number">0</span>);</span><br><span class="line">        <span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt;v;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;s.size();++i)</span><br><span class="line">            cnt[s[i]-<span class="string">&apos;a&apos;</span>]++;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;<span class="number">26</span>;i++)</span><br><span class="line">            <span class="keyword">if</span>(cnt[i]!=<span class="number">0</span>)</span><br><span class="line">            {</span><br><span class="line">                v.push_back(cnt[i]);</span><br><span class="line">                um[cnt[i]]++;</span><br><span class="line">            }</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">auto</span> x:v)</span><br><span class="line">        {</span><br><span class="line">            <span class="keyword">while</span>(um[x]&gt;<span class="number">1</span>)</span><br><span class="line">            {</span><br><span class="line">                <span class="keyword">int</span> y=x;</span><br><span class="line">                <span class="keyword">while</span>(y--)</span><br><span class="line">                {</span><br><span class="line">                    q++;</span><br><span class="line">                    <span class="keyword">if</span>(um[y]==<span class="number">0</span>){um[y]=<span class="number">1</span>;<span class="keyword">break</span>;}</span><br><span class="line">                }</span><br><span class="line">                um[x]--;</span><br><span class="line">            }</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">return</span> q;</span><br><span class="line">    }</span><br><span class="line">};</span><br></pre></td></tr></table></figure>
</li>
</ul>
]]></content>
      <categories>
        <category>leetcode</category>
      </categories>
  </entry>
  <entry>
    <title>leetcode-5561. Get Maximum in Generated Array</title>
    <url>/2020/11/08/leetcode-5561-Get-Maximum-in-Generated-Array/</url>
    <content><![CDATA[<h4 id="5561-Get-Maximum-in-Generated-Array"><a href="https://leetcode-cn.com/problems/get-maximum-in-generated-array/">5561. Get Maximum in Generated Array</a></h4>
<a id="more"></a>
<p>&#x96BE;&#x5EA6;&#x7B80;&#x5355;3</p>
<p>You are given an integer <code>n</code>. An array <code>nums</code> of length <code>n + 1</code> is generated in the following way:</p>
<ul>
<li><code>nums[0] = 0</code></li>
<li><code>nums[1] = 1</code></li>
<li><code>nums[2 * i] = nums[i]</code> when <code>2 &lt;= 2 * i &lt;= n</code></li>
<li><code>nums[2 * i + 1] = nums[i] + nums[i + 1]</code> when <code>2 &lt;= 2 * i + 1 &lt;= n</code></li>
</ul>
<p>Return <em>the <strong>maximum</strong> integer in the array</em> <code>nums</code>.</p>
<p><strong>Example 1:</strong></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Input: n = 7</span><br><span class="line">Output: 3</span><br><span class="line">Explanation: According to the given rules:</span><br><span class="line">  nums[0] = 0</span><br><span class="line">  nums[1] = 1</span><br><span class="line">  nums[(1 * 2) = 2] = nums[1] = 1</span><br><span class="line">  nums[(1 * 2) + 1 = 3] = nums[1] + nums[2] = 1 + 1 = 2</span><br><span class="line">  nums[(2 * 2) = 4] = nums[2] = 1</span><br><span class="line">  nums[(2 * 2) + 1 = 5] = nums[2] + nums[3] = 1 + 2 = 3</span><br><span class="line">  nums[(3 * 2) = 6] = nums[3] = 2</span><br><span class="line">  nums[(3 * 2) + 1 = 7] = nums[3] + nums[4] = 2 + 1 = 3</span><br><span class="line">Hence, nums = [0,1,1,2,1,3,2,3], and the maximum is 3.</span><br></pre></td></tr></table></figure>
<p><strong>Example 2:</strong></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Input: n = 2</span><br><span class="line">Output: 1</span><br><span class="line">Explanation: According to the given rules, the maximum between nums[0], nums[1], and nums[2] is 1.</span><br></pre></td></tr></table></figure>
<p><strong>Example 3:</strong></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Input: n = 3</span><br><span class="line">Output: 2</span><br><span class="line">Explanation: According to the given rules, the maximum between nums[0], nums[1], nums[2], and nums[3] is 2.</span><br></pre></td></tr></table></figure>
<p><strong>Constraints:</strong></p>
<ul>
<li>
<p><code>0 &lt;= n &lt;= 100</code></p>
<h4 id="my-solution">my solution</h4>
<p>&#x6C34;&#x9898;</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> {</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="keyword">int</span> <span class="title">getMaximumGenerated</span><span class="params">(<span class="keyword">int</span> n)</span> </span>{</span><br><span class="line">        <span class="keyword">if</span>(n==<span class="number">0</span>)<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">int</span> v[n+<span class="number">1</span>],imax=INT_MIN;</span><br><span class="line">        v[<span class="number">0</span>]=<span class="number">0</span>;</span><br><span class="line">        v[<span class="number">1</span>]=<span class="number">1</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">2</span>;i&lt;=n;i+=<span class="number">2</span>)</span><br><span class="line">        {</span><br><span class="line">            v[i]=v[i/<span class="number">2</span>];</span><br><span class="line">            <span class="keyword">if</span>(i&lt;n)</span><br><span class="line">            v[i+<span class="number">1</span>]=v[(i+<span class="number">1</span>)/<span class="number">2</span>]+v[(i+<span class="number">1</span>)/<span class="number">2</span>+<span class="number">1</span>];</span><br><span class="line">        }</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;=n;++i)</span><br><span class="line">        	{</span><br><span class="line">        		<span class="built_in">cout</span>&lt;&lt;v[i]&lt;&lt;<span class="string">&quot; &quot;</span>;</span><br><span class="line">        		imax=max(imax,v[i]);</span><br><span class="line">           	}</span><br><span class="line">         <span class="keyword">return</span> imax;</span><br><span class="line">    }</span><br><span class="line">   </span><br><span class="line">};</span><br></pre></td></tr></table></figure>
</li>
</ul>
]]></content>
      <categories>
        <category>leetcode</category>
      </categories>
  </entry>
  <entry>
    <title>leetcode-122. Best Time to Buy and Sell Stock II</title>
    <url>/2020/11/07/leetcode-122-Best-Time-to-Buy-and-Sell-Stock-II/</url>
    <content><![CDATA[<h4 id="122-Best-Time-to-Buy-and-Sell-Stock-II"><a href="https://leetcode-cn.com/problems/best-time-to-buy-and-sell-stock-ii/">122. Best Time to Buy and Sell Stock II</a></h4>
<a id="more"></a>
<p>&#x96BE;&#x5EA6;&#x7B80;&#x5355;911</p>
<p>Say you have an array <code>prices</code> for which the <em>i</em>th element is the price of a given stock on day <em>i</em>.</p>
<p>Design an algorithm to find the maximum profit. You may complete as many transactions as you like (i.e., buy one and sell one share of the stock multiple times).</p>
<p><strong>Note:</strong> You may not engage in multiple transactions at the same time (i.e., you must sell the stock before you buy again).</p>
<p><strong>Example 1:</strong></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Input: [7,1,5,3,6,4]</span><br><span class="line">Output: 7</span><br><span class="line">Explanation: Buy on day 2 (price = 1) and sell on day 3 (price = 5), profit = 5-1 = 4.</span><br><span class="line">             Then buy on day 4 (price = 3) and sell on day 5 (price = 6), profit = 6-3 = 3.</span><br></pre></td></tr></table></figure>
<p><strong>Example 2:</strong></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Input: [1,2,3,4,5]</span><br><span class="line">Output: 4</span><br><span class="line">Explanation: Buy on day 1 (price = 1) and sell on day 5 (price = 5), profit = 5-1 = 4.</span><br><span class="line">             Note that you cannot buy on day 1, buy on day 2 and sell them later, as you are</span><br><span class="line">             engaging multiple transactions at the same time. You must sell before buying again.</span><br></pre></td></tr></table></figure>
<p><strong>Example 3:</strong></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Input: [7,6,4,3,1]</span><br><span class="line">Output: 0</span><br><span class="line">Explanation: In this case, no transaction is done, i.e. max profit = 0.</span><br></pre></td></tr></table></figure>
<h4 id="font-color-red-solution-font"><font color="red">solution</font></h4>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> {</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="keyword">int</span> <span class="title">maxProfit</span><span class="params">(<span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt;&amp; prices)</span> </span>{</span><br><span class="line">        <span class="keyword">int</span> index=<span class="number">0</span>,cnt=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">while</span>(index&lt;prices.size()<span class="number">-1</span>)</span><br><span class="line">        {</span><br><span class="line">            <span class="keyword">int</span> imin=INT_MAX;</span><br><span class="line">            <span class="comment">//buy when cheapest in a continuous interval</span></span><br><span class="line">            <span class="keyword">while</span>(index&lt;prices.size()&amp;&amp;prices[index]&lt;imin)  </span><br><span class="line">            {</span><br><span class="line">                imin=prices[index];</span><br><span class="line">                index++;</span><br><span class="line">            }</span><br><span class="line">            <span class="keyword">if</span>(index==prices.size())<span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">int</span> imax=imin;</span><br><span class="line">             <span class="comment">//sell when most expensive in a continuous interval</span></span><br><span class="line">            <span class="keyword">while</span>(index&lt;prices.size()&amp;&amp;prices[index]&gt;imax)</span><br><span class="line">            {</span><br><span class="line">                imax=prices[index];</span><br><span class="line">                index++;</span><br><span class="line">            }</span><br><span class="line">            cnt+=(imax-imin);</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">return</span> cnt;</span><br><span class="line">    }</span><br><span class="line">};</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>leetcode</category>
      </categories>
      <tags>
        <tag>贪心</tag>
      </tags>
  </entry>
  <entry>
    <title>134. Gas Station</title>
    <url>/2020/11/07/leetcode-134-Gas-Station/</url>
    <content><![CDATA[<h4 id="134-Gas-Station"><a href="https://leetcode-cn.com/problems/gas-station/">134. Gas Station</a></h4>
<a id="more"></a>
<p>There are N gas stations along a circular route, where the amount of gas at station i is gas[i].</p>
<p>You have a car with an unlimited gas tank and it costs cost[i] of gas to travel from station i to its next station (i+1). You begin the journey with an empty tank at one of the gas stations.</p>
<p>Return the starting gas station&#x2019;s index if you can travel around the circuit once in the clockwise direction, otherwise return -1.</p>
<p>Note:</p>
<p>If there exists a solution, it is guaranteed to be unique.<br>
Both input arrays are non-empty and have the same length.<br>
Each element in the input arrays is a non-negative integer.<br>
Example 1:</p>
<p>Input:<br>
gas  = [1,2,3,4,5]<br>
cost = [3,4,5,1,2]</p>
<p>Output: 3</p>
<p>Explanation:<br>
Start at station 3 (index 3) and fill up with 4 unit of gas. Your tank = 0 + 4 = 4<br>
Travel to station 4. Your tank = 4 - 1 + 5 = 8<br>
Travel to station 0. Your tank = 8 - 2 + 1 = 7<br>
Travel to station 1. Your tank = 7 - 3 + 2 = 6<br>
Travel to station 2. Your tank = 6 - 4 + 3 = 5<br>
Travel to station 3. The cost is 5. Your gas is just enough to travel back to station 3.<br>
Therefore, return 3 as the starting index.<br>
Example 2:</p>
<p>Input:<br>
gas  = [2,3,4]<br>
cost = [3,4,3]</p>
<p>Output: -1</p>
<p>Explanation:<br>
You can&#x2019;t start at station 0 or 1, as there is not enough gas to travel to the next station.<br>
Let&#x2019;s start at station 2 and fill up with 4 unit of gas. Your tank = 0 + 4 = 4<br>
Travel to station 0. Your tank = 4 - 3 + 2 = 3<br>
Travel to station 1. Your tank = 3 - 3 + 3 = 3<br>
You cannot travel back to station 2, as it requires 4 unit of gas but you only have 3.<br>
Therefore, you can&#x2019;t travel around the circuit once no matter where you start.</p>
<h4 id="solution">solution</h4>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> {</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="keyword">int</span> <span class="title">canCompleteCircuit</span><span class="params">(<span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt;&amp; gas, <span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt;&amp; cost)</span> </span>{</span><br><span class="line">        <span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt;newcost;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;gas.size();++i)newcost.push_back(gas[i]-cost[i]);</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;gas.size();++i)newcost.push_back(gas[i]-cost[i]);</span><br><span class="line">        <span class="keyword">int</span> index=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">while</span>(index&lt;gas.size())</span><br><span class="line">        {</span><br><span class="line">            <span class="keyword">while</span>(newcost[index]&lt;<span class="number">0</span>){index++;<span class="keyword">if</span>(index==gas.size())<span class="keyword">return</span> <span class="number">-1</span>;}</span><br><span class="line">            <span class="keyword">int</span> i=index,sum=<span class="number">0</span>;</span><br><span class="line">            <span class="keyword">while</span>(sum&gt;=<span class="number">0</span>)</span><br><span class="line">            {</span><br><span class="line">                sum+=newcost[i],i++;</span><br><span class="line">                <span class="keyword">if</span>(i-index==gas.size()&amp;&amp;sum&gt;=<span class="number">0</span>)<span class="keyword">return</span> index;</span><br><span class="line">            }</span><br><span class="line">            index++;</span><br><span class="line">            </span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line"></span><br><span class="line">    }</span><br><span class="line">};<span class="class"><span class="keyword">class</span> <span class="title">Solution</span> {</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="keyword">int</span> <span class="title">canCompleteCircuit</span><span class="params">(<span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt;&amp; gas, <span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt;&amp; cost)</span> </span>{</span><br><span class="line">        <span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt;newcost;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;gas.size();++i)newcost.push_back(gas[i]-cost[i]);</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;gas.size();++i)newcost.push_back(gas[i]-cost[i]);</span><br><span class="line">        <span class="keyword">int</span> index=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">while</span>(index&lt;gas.size())</span><br><span class="line">        {</span><br><span class="line">            <span class="keyword">while</span>(newcost[index]&lt;<span class="number">0</span>){index++;<span class="keyword">if</span>(index==gas.size())<span class="keyword">return</span> <span class="number">-1</span>;}</span><br><span class="line">            <span class="keyword">int</span> i=index,sum=<span class="number">0</span>;</span><br><span class="line">            <span class="keyword">while</span>(sum&gt;=<span class="number">0</span>)</span><br><span class="line">            {</span><br><span class="line">                sum+=newcost[i],i++;</span><br><span class="line">                <span class="keyword">if</span>(i-index==gas.size()&amp;&amp;sum&gt;=<span class="number">0</span>)<span class="keyword">return</span> index;</span><br><span class="line">            }</span><br><span class="line">            index++;</span><br><span class="line">            </span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line"></span><br><span class="line">    }</span><br><span class="line">};</span><br></pre></td></tr></table></figure>
]]></content>
      <tags>
        <tag>贪心</tag>
      </tags>
  </entry>
  <entry>
    <title>leetcode-45. Jump Game II</title>
    <url>/2020/11/06/leetcode-45-Jump-Game-II/</url>
    <content><![CDATA[<h4 id="45-Jump-Game-II"><a href="https://leetcode-cn.com/problems/jump-game-ii/">45. Jump Game II</a></h4>
<a id="more"></a>
<p>&#x96BE;&#x5EA6;&#x56F0;&#x96BE;740</p>
<p>Given an array of non-negative integers <code>nums</code>, you are initially positioned at the first index of the array.</p>
<p>Each element in the array represents your maximum jump length at that position.</p>
<p>Your goal is to reach the last index in the minimum number of jumps.</p>
<p>You can assume that you can always reach the last index.</p>
<p><strong>Example 1:</strong></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Input: nums = [2,3,1,1,4]</span><br><span class="line">Output: 2</span><br><span class="line">Explanation: The minimum number of jumps to reach the last index is 2. Jump 1 step from index 0 to 1, then 3 steps to the last index.</span><br></pre></td></tr></table></figure>
<p><strong>Example 2:</strong></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Input: nums = [2,3,0,1,4]</span><br><span class="line">Output: 2</span><br></pre></td></tr></table></figure>
<p><strong>Constraints:</strong></p>
<ul>
<li><code>1 &lt;= nums.length &lt;= 3 * 104</code></li>
<li><code>0 &lt;= nums[i] &lt;= 105</code></li>
</ul>
<h4 id="font-color-red-solution-font"><font color="red">solution</font></h4>
<p>&#x53C8;&#x662F;&#x4E00;&#x9053;&#x4E0D;&#x600E;&#x4E48;&#x96BE;&#x7684;<code>hard</code>&#xFF0C;&#x57FA;&#x672C;&#x4E0A;&#x53EF;&#x4EE5;&#x590D;&#x7528; <code>55.Jump Game</code>&#x7684;code</p>
<p><font color="green"> &#x9700;&#x8981;&#x6CE8;&#x610F;&#x7684;&#x4E00;&#x70B9;&#x662F;&#xFF0C;&#x5982;&#x679C;&#x8FD9;&#x4E00;&#x8DF3;&#x80FD;&#x5230;&#x8FBE;&#x7EC8;&#x70B9;&#xFF0C;&#x8981;&#x7279;&#x6B8A;&#x5224;&#x65AD;&#x4E00;&#x4E0B;</font></p>
<p><code>if(i+nums[i]&gt;=nums.size()-1)break;</code></p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> {</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="keyword">int</span> <span class="title">jump</span><span class="params">(<span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt;&amp; nums)</span> </span>{</span><br><span class="line">        <span class="keyword">if</span>(nums.size()==<span class="number">1</span>)<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">int</span> i=<span class="number">0</span>,cnt=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">while</span>(i&lt;nums.size()<span class="number">-1</span>)</span><br><span class="line">        {</span><br><span class="line">            cnt++;</span><br><span class="line">            <span class="keyword">if</span>(i+nums[i]&gt;=nums.size()<span class="number">-1</span>)<span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">int</span> imax=<span class="number">0</span>,index=<span class="number">-1</span>;</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> j=i+<span class="number">1</span>;j&lt;=i+nums[i]&amp;&amp;j&lt;nums.size();j++)</span><br><span class="line">                <span class="keyword">if</span>(j+nums[j]&gt;=imax)</span><br><span class="line">                {</span><br><span class="line">                    imax=j+nums[j];</span><br><span class="line">                    index=j;</span><br><span class="line">                }</span><br><span class="line">            i=index;</span><br><span class="line">            <span class="built_in">cout</span>&lt;&lt;index&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">return</span> cnt;</span><br><span class="line">    }</span><br><span class="line">};</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>leetcode</category>
      </categories>
      <tags>
        <tag>贪心</tag>
      </tags>
  </entry>
  <entry>
    <title>leetcode-55. Jump Game</title>
    <url>/2020/11/06/leetcode-55-Jump-Game/</url>
    <content><![CDATA[<h4 id="55-Jump-Game"><a href="https://leetcode-cn.com/problems/jump-game/">55. Jump Game</a></h4>
<a id="more"></a>
<p>&#x96BE;&#x5EA6;&#x4E2D;&#x7B49;906</p>
<p>Given an array of non-negative integers, you are initially positioned at the first index of the array.</p>
<p>Each element in the array represents your maximum jump length at that position.</p>
<p>Determine if you are able to reach the last index.</p>
<p><strong>Example 1:</strong></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Input: nums = [2,3,1,1,4]</span><br><span class="line">Output: true</span><br><span class="line">Explanation: Jump 1 step from index 0 to 1, then 3 steps to the last index.</span><br></pre></td></tr></table></figure>
<p><strong>Example 2:</strong></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Input: nums = [3,2,1,0,4]</span><br><span class="line">Output: false</span><br><span class="line">Explanation: You will always arrive at index 3 no matter what. Its maximum jump length is 0, which makes it impossible to reach the last index.</span><br></pre></td></tr></table></figure>
<p><strong>Constraints:</strong></p>
<ul>
<li><code>1 &lt;= nums.length &lt;= 3 * 10^4</code></li>
<li><code>0 &lt;= nums[i][j] &lt;= 10^5</code></li>
</ul>
<h4 id="font-color-red-solution-font"><font color="red">solution</font></h4>
<p>&#x8D2A;&#x5FC3;</p>
<p>&#x5728;&#x4E0B;&#x4E00;&#x6B65;&#x80FD;&#x8DF3;&#x5230;&#x533A;&#x57DF;&#x4E2D;&#x9009;&#x62E9;&#x4E00;&#x4E2A;&#x6700;&#x4F73;&#x7684;<code>index</code>&#x8DF3;&#x8DC3;&#xFF0C;&#x9009;&#x62E9;&#x65B9;&#x6CD5;&#x662F;&#x4F7F;&#x5F97;<code>(index+nums[index])</code>&#x6700;&#x5927;</p>
<p>&#x6CE8;&#x610F;&#x7684;&#x5751;</p>
<ol>
<li>
<p>[0]</p>
</li>
<li>
<p>[1,0]</p>
</li>
<li>
<p>[0,1]</p>
<p>&#x8FD9;&#x4E9B;&#x90FD;&#x53EF;&#x4EE5;&#x901A;&#x8FC7;&#x63D0;&#x524D;&#x5224;&#x65AD;&#x6765;&#x6392;&#x9664;</p>
</li>
</ol>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> {</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="keyword">bool</span> <span class="title">canJump</span><span class="params">(<span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt;&amp; nums)</span> </span>{</span><br><span class="line">        <span class="keyword">if</span>(find(nums.begin(),nums.end(),<span class="number">0</span>)==nums.end()||nums.size()==<span class="number">1</span>)<span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">        <span class="keyword">if</span>(nums[<span class="number">0</span>]==<span class="number">0</span>)<span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">        <span class="keyword">int</span> i=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">while</span>(i&lt;nums.size())</span><br><span class="line">        {</span><br><span class="line">            <span class="keyword">int</span> imax=<span class="number">0</span>,index=<span class="number">-1</span>;</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> j=i+<span class="number">1</span>;j&lt;=i+nums[i]&amp;&amp;j&lt;nums.size();j++)</span><br><span class="line">                <span class="keyword">if</span>(j+nums[j]&gt;=imax)</span><br><span class="line">                {</span><br><span class="line">                    imax=j+nums[j];</span><br><span class="line">                    index=j;</span><br><span class="line">                }</span><br><span class="line">            i=index;</span><br><span class="line">            <span class="keyword">if</span>(imax-index==<span class="number">0</span>&amp;&amp;index!=nums.size()<span class="number">-1</span>)</span><br><span class="line">                <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">    }</span><br><span class="line">};</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>leetcode</category>
      </categories>
      <tags>
        <tag>贪心</tag>
      </tags>
  </entry>
  <entry>
    <title>leetcode-1356. Sort Integers by The Number of 1 Bits</title>
    <url>/2020/11/06/leetcode-1356-Sort-Integers-by-The-Number-of-1-Bits/</url>
    <content><![CDATA[<h4 id="1356-Sort-Integers-by-The-Number-of-1-Bits"><a href="https://leetcode-cn.com/problems/sort-integers-by-the-number-of-1-bits/">1356. Sort Integers by The Number of 1 Bits</a></h4>
<a id="more"></a>
<p>&#x96BE;&#x5EA6;&#x7B80;&#x5355;45</p>
<p>Given an integer array <code>arr</code>. You have to sort the integers in the array in ascending order by the number of <strong>1&#x2019;s</strong> in their binary representation and in case of two or more integers have the same number of <strong>1&#x2019;s</strong> you have to sort them in ascending order.</p>
<p>Return <em>the sorted array</em>.</p>
<p><strong>Example 1:</strong></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Input: arr = [0,1,2,3,4,5,6,7,8]</span><br><span class="line">Output: [0,1,2,4,8,3,5,6,7]</span><br><span class="line">Explantion: [0] is the only integer with 0 bits.</span><br><span class="line">[1,2,4,8] all have 1 bit.</span><br><span class="line">[3,5,6] have 2 bits.</span><br><span class="line">[7] has 3 bits.</span><br><span class="line">The sorted array by bits is [0,1,2,4,8,3,5,6,7]</span><br></pre></td></tr></table></figure>
<p><strong>Example 2:</strong></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Input: arr = [1024,512,256,128,64,32,16,8,4,2,1]</span><br><span class="line">Output: [1,2,4,8,16,32,64,128,256,512,1024]</span><br><span class="line">Explantion: All integers have 1 bit in the binary representation, you should just sort them in ascending order.</span><br></pre></td></tr></table></figure>
<p><strong>Example 3:</strong></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Input: arr = [10000,10000]</span><br><span class="line">Output: [10000,10000]</span><br></pre></td></tr></table></figure>
<p><strong>Example 4:</strong></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Input: arr = [2,3,5,7,11,13,17,19]</span><br><span class="line">Output: [2,3,5,17,7,11,13,19]</span><br></pre></td></tr></table></figure>
<p><strong>Example 5:</strong></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Input: arr = [10,100,1000,10000]</span><br><span class="line">Output: [10,100,10000,1000]</span><br></pre></td></tr></table></figure>
<p><strong>Constraints:</strong></p>
<ul>
<li><code>1 &lt;= arr.length &lt;= 500</code></li>
<li><code>0 &lt;= arr[i] &lt;= 10^4</code></li>
</ul>
<p><font color="red">solution</font></p>
<p>&#x5927;&#x6C34;&#x9898; &#x81EA;&#x5B9A;&#x4E49;&#x6392;&#x5E8F;</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> {</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; <span class="title">sortByBits</span><span class="params">(<span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt;&amp; arr)</span> </span>{</span><br><span class="line">        <span class="built_in">vector</span>&lt;<span class="built_in">pair</span>&lt;<span class="keyword">int</span>,<span class="keyword">int</span>&gt;&gt;vec;</span><br><span class="line">        <span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt;ans;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">auto</span> x:arr)</span><br><span class="line">            vec.push_back({x,fun(x)});</span><br><span class="line">        sort(vec.begin(),vec.end(),cmp);</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">auto</span> x:vec)</span><br><span class="line">            ans.push_back(x.first);</span><br><span class="line">        <span class="keyword">return</span> ans;</span><br><span class="line">    }</span><br><span class="line">    <span class="function"><span class="keyword">int</span> <span class="title">fun</span><span class="params">(<span class="keyword">int</span> x)</span></span></span><br><span class="line"><span class="function">    </span>{</span><br><span class="line">        <span class="keyword">int</span> num=<span class="number">0</span>;</span><br><span class="line">        <span class="comment">//</span></span><br><span class="line">        <span class="keyword">do</span></span><br><span class="line">        {</span><br><span class="line">            num+=(x%<span class="number">2</span>);</span><br><span class="line">            x/=<span class="number">2</span>;</span><br><span class="line">        }<span class="keyword">while</span>(x!=<span class="number">0</span>);</span><br><span class="line">        <span class="keyword">return</span> num;</span><br><span class="line">    }</span><br><span class="line">    <span class="function"><span class="keyword">static</span> <span class="keyword">bool</span> <span class="title">cmp</span><span class="params">(<span class="built_in">pair</span>&lt;<span class="keyword">int</span>,<span class="keyword">int</span>&gt;a,<span class="built_in">pair</span>&lt;<span class="keyword">int</span>,<span class="keyword">int</span>&gt;b)</span></span></span><br><span class="line"><span class="function">    </span>{</span><br><span class="line">        <span class="keyword">if</span>(a.second==b.second)</span><br><span class="line">            <span class="keyword">return</span> a.first&lt;b.first;</span><br><span class="line">        <span class="keyword">return</span> a.second&lt;b.second;</span><br><span class="line">    }</span><br><span class="line">};</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>leetcode</category>
      </categories>
      <tags>
        <tag>排序</tag>
      </tags>
  </entry>
  <entry>
    <title>leetcode-127. Word Ladder</title>
    <url>/2020/11/05/leetcode-127-Word-Ladder/</url>
    <content><![CDATA[<h4 id="127-Word-Ladder"><a href="https://leetcode-cn.com/problems/word-ladder/">127. Word Ladder</a></h4>
<a id="more"></a>
<p>&#x96BE;&#x5EA6;&#x4E2D;&#x7B49;529</p>
<p>Given two words (<em>beginWord</em> and <em>endWord</em>), and a dictionary&#x2019;s word list, find the length of shortest transformation sequence from <em>beginWord</em> to <em>endWord</em>, such that:</p>
<ol>
<li>Only one letter can be changed at a time.</li>
<li>Each transformed word must exist in the word list.</li>
</ol>
<p><strong>Note:</strong></p>
<ul>
<li>Return 0 if there is no such transformation sequence.</li>
<li>All words have the same length.</li>
<li>All words contain only lowercase alphabetic characters.</li>
<li>You may assume no duplicates in the word list.</li>
<li>You may assume <em>beginWord</em> and <em>endWord</em> are non-empty and are not the same.</li>
</ul>
<p><strong>Example 1:</strong></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Input:</span><br><span class="line">beginWord = &quot;hit&quot;,</span><br><span class="line">endWord = &quot;cog&quot;,</span><br><span class="line">wordList = [&quot;hot&quot;,&quot;dot&quot;,&quot;dog&quot;,&quot;lot&quot;,&quot;log&quot;,&quot;cog&quot;]</span><br><span class="line"></span><br><span class="line">Output: 5</span><br><span class="line"></span><br><span class="line">Explanation: As one shortest transformation is &quot;hit&quot; -&gt; &quot;hot&quot; -&gt; &quot;dot&quot; -&gt; &quot;dog&quot; -&gt; &quot;cog&quot;,</span><br><span class="line">return its length 5.</span><br></pre></td></tr></table></figure>
<p><strong>Example 2:</strong></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Input:</span><br><span class="line">beginWord = &quot;hit&quot;</span><br><span class="line">endWord = &quot;cog&quot;</span><br><span class="line">wordList = [&quot;hot&quot;,&quot;dot&quot;,&quot;dog&quot;,&quot;lot&quot;,&quot;log&quot;]</span><br><span class="line"></span><br><span class="line">Output: 0</span><br><span class="line"></span><br><span class="line">Explanation: The endWord &quot;cog&quot; is not in wordList, therefore no possible transformation.</span><br></pre></td></tr></table></figure>
<h4 id="font-color-blue-my-solution-font"><font color="blue">my solution </font></h4>
<p><code>bfs</code>&#x5DEE;&#x70B9;&#x8D85;&#x65F6;</p>
<p>&#x9996;&#x5148;<code>find</code>&#x770B;&#x770B;<code>endword</code>&#x5728;&#x4E0D;&#x5728;list&#x4E2D;&#xFF0C;&#x4E0D;&#x5728;&#x8FD4;&#x56DE;<code>0</code></p>
<p>&#x628A;&#x6240;&#x6709;&#x5DEE;&#x4E00;&#x4E2A;&#x5B57;&#x6BCD;&#x7684;&#x5355;&#x8BCD;&#x653E;&#x5230;&#x961F;&#x5217;&#x91CC;&#xFF0C;&#x7136;&#x540E;bfs&#xFF0C;&#x8FD9;&#x6837;&#x65F6;&#x95F4;&#x590D;&#x6742;&#x5EA6;&#x8F83;&#x4F4E;&#xFF0C;&#x53EF;&#x4EE5;&#x7A7A;&#x95F4;&#x6362;&#x65F6;&#x95F4;&#xFF0C;&#x56E0;&#x4E3A;&#x4ED6;&#x8BF4;&#x6BCF;&#x4E2A;&#x5355;&#x8BCD;&#x662F;&#x552F;&#x4E00;&#x7684;&#xFF0C;&#x6240;&#x4EE5;&#x653E;&#x5165;&#x5230;map&#x4E2D;,pop&#x51FA;&#x6765;&#x7684;&#x5355;&#x8BCD;&#x7684;&#x6BCF;&#x4E2A;&#x4F4D;&#x7F6E;&#x4ECE;<code>a~z</code>&#x679A;&#x4E3E;&#x4E00;&#x904D;&#xFF0C;&#x5982;&#x679C;<code>wordlist</code>&#x4E2D;&#x6709;&#x4E0E;&#x5176;&#x4E00;&#x81F4;&#x7684;&#x5355;&#x8BCD;&#x5219;&#x5165;&#x5217;</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> {</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="keyword">int</span> <span class="title">ladderLength</span><span class="params">(<span class="built_in">string</span> beginWord, <span class="built_in">string</span> endWord, <span class="built_in">vector</span>&lt;<span class="built_in">string</span>&gt;&amp; wordList)</span> </span>{</span><br><span class="line">        <span class="keyword">int</span> len=wordList.size();</span><br><span class="line">        <span class="keyword">if</span>(find(wordList.begin(),wordList.end(),endWord)==wordList.end())<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">bool</span> visited [len];</span><br><span class="line">        fill(visited,visited+len,<span class="literal">false</span>);</span><br><span class="line">        <span class="built_in">queue</span>&lt;<span class="built_in">pair</span>&lt;<span class="built_in">string</span>,<span class="keyword">int</span>&gt;&gt;que;</span><br><span class="line">        que.push({beginWord,<span class="number">1</span>});</span><br><span class="line">        <span class="keyword">while</span>(!que.empty())</span><br><span class="line">        {</span><br><span class="line">            <span class="built_in">string</span> stmp=que.front().first;</span><br><span class="line">            <span class="keyword">int</span> step=que.front().second;</span><br><span class="line">            que.pop();</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;wordList.size();++i)</span><br><span class="line">            {</span><br><span class="line">                <span class="keyword">if</span>(!visited[i]&amp;&amp;cmp(wordList[i],stmp))</span><br><span class="line">                {</span><br><span class="line">                    visited[i]=<span class="number">1</span>;</span><br><span class="line">                    <span class="keyword">if</span>(wordList[i]==endWord)<span class="keyword">return</span> step+<span class="number">1</span>;</span><br><span class="line">                    que.push({wordList[i],step+<span class="number">1</span>});</span><br><span class="line">                }</span><br><span class="line">            }</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line">    <span class="function"><span class="keyword">bool</span> <span class="title">cmp</span><span class="params">(<span class="built_in">string</span> a,<span class="built_in">string</span> b)</span></span></span><br><span class="line"><span class="function">    </span>{</span><br><span class="line">        <span class="keyword">int</span> i=<span class="number">0</span>,j=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">while</span>(i&lt;a.size())</span><br><span class="line">        {</span><br><span class="line">            <span class="keyword">if</span>(a[i]!=b[i])</span><br><span class="line">                j++;</span><br><span class="line">            i++;</span><br><span class="line">            <span class="keyword">if</span>(j&gt;<span class="number">1</span>)<span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">if</span>(j==<span class="number">1</span>)</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">            <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    }</span><br><span class="line">};</span><br></pre></td></tr></table></figure>
<h4 id="font-color-red-Optimized-solution-font"><font color="red">Optimized solution</font></h4>
<p><img src="https://pic.leetcode-cn.com/38dc5897de2b554ea606a92c5eada14b0e0030195334e9fd65943ed6d0f77c1d-image.png" alt="img"></p>
<p>&#x53CC;&#x5411;bfs</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> {</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">int</span> <span class="title">ladderLength</span><span class="params">(<span class="built_in">string</span> beginWord, <span class="built_in">string</span> endWord, <span class="built_in">vector</span>&lt;<span class="built_in">string</span>&gt;&amp; wordList)</span> </span>{</span><br><span class="line">        <span class="built_in">unordered_set</span>&lt;<span class="built_in">string</span>&gt;bw;</span><br><span class="line">        <span class="built_in">unordered_set</span>&lt;<span class="built_in">string</span>&gt;ew;</span><br><span class="line">        <span class="built_in">unordered_map</span>&lt;<span class="built_in">string</span>,<span class="keyword">int</span>&gt;mp;</span><br><span class="line">        <span class="keyword">int</span> len=wordList.size();</span><br><span class="line">       <span class="keyword">if</span>(len==<span class="number">0</span>||find(wordList.begin(),wordList.end(),endWord)==wordList.end())<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">auto</span> x:wordList)</span><br><span class="line">            <span class="keyword">if</span>(x!=endWord&amp;&amp;x!=beginWord)</span><br><span class="line">                mp[x]=<span class="number">1</span>;</span><br><span class="line">        bw.insert(beginWord),ew.insert(endWord);</span><br><span class="line">        <span class="keyword">int</span> step=<span class="number">1</span>;</span><br><span class="line">        <span class="keyword">while</span>(!bw.empty()&amp;&amp;!ew.empty())</span><br><span class="line">        {</span><br><span class="line">            <span class="keyword">if</span>(bw.size()&gt;ew.size())</span><br><span class="line">            {</span><br><span class="line">                <span class="built_in">unordered_set</span>&lt;<span class="built_in">string</span>&gt;tmp=bw;</span><br><span class="line">                bw=ew;</span><br><span class="line">                ew=tmp;</span><br><span class="line">            }</span><br><span class="line">            <span class="built_in">unordered_set</span>&lt;<span class="built_in">string</span>&gt;newset;</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">auto</span> a:bw)</span><br><span class="line">            {</span><br><span class="line">                <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">0</span>;j&lt;a.size();++j)</span><br><span class="line">                {</span><br><span class="line">                    <span class="keyword">char</span> tp=a[j];</span><br><span class="line">                    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;<span class="number">26</span>;++i)</span><br><span class="line">                    {</span><br><span class="line">                        a[j]=<span class="string">&apos;a&apos;</span>+i;</span><br><span class="line">                        <span class="keyword">if</span>(mp[a]==<span class="number">1</span>)</span><br><span class="line">                        {</span><br><span class="line">                            newset.insert(a);</span><br><span class="line">                            mp[a]=<span class="number">0</span>;</span><br><span class="line">                        }</span><br><span class="line">                        <span class="keyword">if</span>(find(ew.begin(),ew.end(),a)!=ew.end())<span class="keyword">return</span> step+<span class="number">1</span>;</span><br><span class="line">                    }</span><br><span class="line">                    a[j]=tp;</span><br><span class="line">                }</span><br><span class="line">            }</span><br><span class="line">            bw=newset;</span><br><span class="line">            step++;</span><br><span class="line">        }</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    }</span><br><span class="line">};</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>leetcode</category>
      </categories>
      <tags>
        <tag>bfs</tag>
        <tag>双向bfs</tag>
        <tag>好题</tag>
      </tags>
  </entry>
  <entry>
    <title>leetcode-57. 插入区间</title>
    <url>/2020/11/04/leetcode-57-%E6%8F%92%E5%85%A5%E5%8C%BA%E9%97%B4/</url>
    <content><![CDATA[<h4 id="57-Insert-Interval"><a href="https://leetcode-cn.com/problems/insert-interval/">57. Insert Interval</a></h4>
<a id="more"></a>
<p>&#x96BE;&#x5EA6;&#x56F0;&#x96BE;246</p>
<p>Given a set of <em>non-overlapping</em> intervals, insert a new interval into the intervals (merge if necessary).</p>
<p>You may assume that the intervals were initially sorted according to their start times.</p>
<p><strong>Example 1:</strong></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Input: intervals = [[1,3],[6,9]], newInterval = [2,5]</span><br><span class="line">Output: [[1,5],[6,9]]</span><br></pre></td></tr></table></figure>
<p><strong>Example 2:</strong></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Input: intervals = [[1,2],[3,5],[6,7],[8,10],[12,16]], newInterval = [4,8]</span><br><span class="line">Output: [[1,2],[3,10],[12,16]]</span><br><span class="line">Explanation: Because the new interval [4,8] overlaps with [3,5],[6,7],[8,10].</span><br></pre></td></tr></table></figure>
<p><strong>Example 3:</strong></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Input: intervals = [], newInterval = [5,7]</span><br><span class="line">Output: [[5,7]]</span><br></pre></td></tr></table></figure>
<p><strong>Example 4:</strong></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Input: intervals = [[1,5]], newInterval = [2,3]</span><br><span class="line">Output: [[1,5]]</span><br></pre></td></tr></table></figure>
<p><strong>Example 5:</strong></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Input: intervals = [[1,5]], newInterval = [2,7]</span><br><span class="line">Output: [[1,7]]</span><br></pre></td></tr></table></figure>
<p><font color="red">solution </font></p>
<p>a&#x4E86;&#x4E00;&#x9053;hard&#x9898;&#xFF0C;&#x5F88;&#x8212;&#x670D;&#xFF0C;&#x611F;&#x89C9;&#x4E0D;&#x662F;&#x5F88;&#x96BE;</p>
<ol>
<li>
<p>&#x7B2C;&#x4E00;&#x6B65;&#x5148;&#x628A;<code>newInterval</code>&#x63D2;&#x5165;&#x5230;<code>intervals</code>&#x4E2D;&#xFF0C;&#x518D;&#x6309;&#x6BCF;&#x4E2A;&#x95F4;&#x9694;&#x7684;&#x8D77;&#x59CB;&#x70B9;&#x6709;&#x5C0F;&#x5230;&#x5927;&#x6392;&#x5E8F;</p>
</li>
<li>
<p>&#x7136;&#x540E;&#x8981;&#x6CE8;&#x610F;&#x7684;&#x4E00;&#x4E2A;&#x70B9;&#x662F;&#xFF0C;&#x5982;&#x679C;&#x8981;&#x878D;&#x5408;&#x591A;&#x4E2A;&#x533A;&#x95F4;&#xFF0C;&#x9700;&#x8981;&#x7528;&#x4E2A;<code>imax</code>&#x4FDD;&#x5B58;&#x8FD9;&#x51E0;&#x4E2A;&#x533A;&#x95F4;&#x4E2D;&#x6700;&#x5927;&#x7684;&#x7EC8;&#x70B9;</p>
<p>&#x4F8B;&#x5982; <code>[1,4] [3,10] [5,8]</code> &#x90A3;&#x4E48;imax=10</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> {</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="built_in">vector</span>&lt;<span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt;&gt; <span class="title">insert</span><span class="params">(<span class="built_in">vector</span>&lt;<span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt;&gt;&amp; intervals, <span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt;&amp; newInterval)</span> </span>{</span><br><span class="line"></span><br><span class="line">            <span class="built_in">vector</span>&lt;<span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt;&gt;tmp;</span><br><span class="line">            intervals.push_back(newInterval);</span><br><span class="line">            sort(intervals.begin(),intervals.end(),cmp);</span><br><span class="line">            <span class="keyword">bool</span> lastpush=<span class="literal">false</span>;</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;intervals.size()<span class="number">-1</span>;++i)</span><br><span class="line">            {</span><br><span class="line">                <span class="keyword">int</span> a=i;</span><br><span class="line">                <span class="keyword">int</span> imax=intervals[i][<span class="number">1</span>];</span><br><span class="line">                <span class="keyword">while</span>(i&lt;intervals.size()<span class="number">-1</span>&amp;&amp;imax&gt;=intervals[i+<span class="number">1</span>][<span class="number">0</span>])</span><br><span class="line">                {</span><br><span class="line">                    i++;</span><br><span class="line">                    imax=max(imax,intervals[i][<span class="number">1</span>]);</span><br><span class="line">                }</span><br><span class="line">                <span class="keyword">if</span>(i==intervals.size()<span class="number">-1</span>)lastpush=<span class="literal">true</span>;</span><br><span class="line">                tmp.push_back({intervals[a][<span class="number">0</span>],imax});</span><br><span class="line">            }</span><br><span class="line">            <span class="keyword">if</span>(lastpush==<span class="literal">false</span>)tmp.push_back(intervals[intervals.size()<span class="number">-1</span>]);</span><br><span class="line">            <span class="keyword">return</span> tmp;</span><br><span class="line">    }</span><br><span class="line">    <span class="function"><span class="keyword">static</span> <span class="keyword">bool</span> <span class="title">cmp</span><span class="params">(<span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt;a,<span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt;b)</span></span></span><br><span class="line"><span class="function">    </span>{</span><br><span class="line">        <span class="keyword">return</span> a[<span class="number">0</span>]&lt;b[<span class="number">0</span>];</span><br><span class="line">    }</span><br><span class="line">};</span><br></pre></td></tr></table></figure>
</li>
</ol>
]]></content>
      <categories>
        <category>leetcode</category>
      </categories>
      <tags>
        <tag>sort</tag>
      </tags>
  </entry>
  <entry>
    <title>洛谷-P1094 Souvenir Section</title>
    <url>/2020/11/03/%E6%B4%9B%E8%B0%B7-P1094-Souvenir-Section/</url>
    <content><![CDATA[<p><a href="https://www.luogu.com.cn/problem/P1094">P1094 &#x7EAA;&#x5FF5;&#x54C1;&#x5206;&#x7EC4;</a></p>
<a id="more"></a>
<h2 id="description">description</h2>
<p>&#x5143;&#x65E6;&#x5FEB;&#x5230;&#x4E86;&#xFF0C;&#x6821;&#x5B66;&#x751F;&#x4F1A;&#x8BA9;&#x4E50;&#x4E50;&#x8D1F;&#x8D23;&#x65B0;&#x5E74;&#x665A;&#x4F1A;&#x7684;&#x7EAA;&#x5FF5;&#x54C1;&#x53D1;&#x653E;&#x5DE5;&#x4F5C;&#x3002;&#x4E3A;&#x4F7F;&#x5F97;&#x53C2;&#x52A0;&#x665A;&#x4F1A;&#x7684;&#x540C;&#x5B66;&#x6240;&#x83B7;&#x5F97; &#x7684;&#x7EAA;&#x5FF5;&#x54C1;&#x4EF7;&#x503C;&#x76F8;&#x5BF9;&#x5747;&#x8861;&#xFF0C;&#x4ED6;&#x8981;&#x628A;&#x8D2D;&#x6765;&#x7684;&#x7EAA;&#x5FF5;&#x54C1;&#x6839;&#x636E;&#x4EF7;&#x683C;&#x8FDB;&#x884C;&#x5206;&#x7EC4;&#xFF0C;&#x4F46;&#x6BCF;&#x7EC4;&#x6700;&#x591A;&#x53EA;&#x80FD;&#x5305;&#x62EC;&#x4E24;&#x4EF6;&#x7EAA;&#x5FF5;&#x54C1;&#xFF0C; &#x5E76;&#x4E14;&#x6BCF;&#x7EC4;&#x7EAA;&#x5FF5;&#x54C1;&#x7684;&#x4EF7;&#x683C;&#x4E4B;&#x548C;&#x4E0D;&#x80FD;&#x8D85;&#x8FC7;&#x4E00;&#x4E2A;&#x7ED9;&#x5B9A;&#x7684;&#x6574;&#x6570;&#x3002;&#x4E3A;&#x4E86;&#x4FDD;&#x8BC1;&#x5728;&#x5C3D;&#x91CF;&#x77ED;&#x7684;&#x65F6;&#x95F4;&#x5185;&#x53D1;&#x5B8C;&#x6240;&#x6709;&#x7EAA;&#x5FF5;&#x54C1;&#xFF0C;&#x4E50;&#x4E50;&#x5E0C;&#x671B;&#x5206;&#x7EC4;&#x7684;&#x6570;&#x76EE;&#x6700;&#x5C11;&#x3002;</p>
<p>&#x4F60;&#x7684;&#x4EFB;&#x52A1;&#x662F;&#x5199;&#x4E00;&#x4E2A;&#x7A0B;&#x5E8F;&#xFF0C;&#x627E;&#x51FA;&#x6240;&#x6709;&#x5206;&#x7EC4;&#x65B9;&#x6848;&#x4E2D;&#x5206;&#x7EC4;&#x6570;&#x6700;&#x5C11;&#x7684;&#x4E00;&#x79CD;&#xFF0C;&#x8F93;&#x51FA;&#x6700;&#x5C11;&#x7684;&#x5206;&#x7EC4;&#x6570;&#x76EE;&#x3002;</p>
<h2 id="input">input</h2>
<p>&#x5171; n*+2 &#x884C;&#xFF1A;</p>
<p>&#x7B2C;&#x4E00;&#x884C;&#x5305;&#x62EC;&#x4E00;&#x4E2A;&#x6574;&#x6570; <em>w</em>&#xFF0C;&#x4E3A;&#x6BCF;&#x7EC4;&#x7EAA;&#x5FF5;&#x54C1;&#x4EF7;&#x683C;&#x4E4B;&#x548C;&#x7684;&#x4E0A;&#x9650;&#x3002;</p>
<p>&#x7B2C;&#x4E8C;&#x884C;&#x4E3A;&#x4E00;&#x4E2A;&#x6574;&#x6570; <em>n</em>&#xFF0C;&#x8868;&#x793A;&#x8D2D;&#x6765;&#x7684;&#x7EAA;&#x5FF5;&#x54C1;&#x7684;&#x603B;&#x4EF6;&#x6570; <em>G</em>&#x3002;</p>
<p>&#x7B2C; 3&#x223C;<em>n</em>+2 &#x884C;&#x6BCF;&#x884C;&#x5305;&#x542B;&#x4E00;&#x4E2A;&#x6B63;&#x6574;&#x6570; P_i &#x8868;&#x793A;&#x6240;&#x5BF9;&#x5E94;&#x7EAA;&#x5FF5;&#x54C1;&#x7684;&#x4EF7;&#x683C;&#x3002;</p>
<h2 id="output">output</h2>
<p>&#x4E00;&#x4E2A;&#x6574;&#x6570;&#xFF0C;&#x5373;&#x6700;&#x5C11;&#x7684;&#x5206;&#x7EC4;&#x6570;&#x76EE;&#x3002;</p>
<h2 id="sample">sample</h2>
<p><strong>&#x8F93;&#x5165; #1</strong>&#x590D;&#x5236;</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">100 </span><br><span class="line">9 </span><br><span class="line">90 </span><br><span class="line">20 </span><br><span class="line">20 </span><br><span class="line">30 </span><br><span class="line">50 </span><br><span class="line">60 </span><br><span class="line">70 </span><br><span class="line">80 </span><br><span class="line">90</span><br></pre></td></tr></table></figure>
<p><strong>&#x8F93;&#x51FA; #1</strong>&#x590D;&#x5236;</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">6</span><br></pre></td></tr></table></figure>
<h2 id="hint">hint</h2>
<p>50% &#x7684;&#x6570;&#x636E;&#x6EE1;&#x8DB3;&#xFF1A;1&#x2264;<em>n</em>&#x2264;15&#x3002;</p>
<p>100% &#x7684;&#x6570;&#x636E;&#x6EE1;&#x8DB3;&#xFF1A;1&#x2264;<em>n</em>&#x2264;3&#xD7;104&#xFF0C;80&#x2264;<em>w</em>&#x2264;200&#xFF0C;5&#x2264;<em>P**i</em>&#x2264;<em>w</em>&#x3002;</p>
<h3 id="solution">solution</h3>
<p>&#x8D2A;&#x5FC3;&#xFF0C;&#x800C;&#x4E14;&#x9700;&#x8981;&#x526A;&#x679D;&#xFF0C;&#x4E0D;&#x7136;&#x4F1A;&#x8D85;&#x65F6;</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">int</span> limit;</span><br><span class="line"><span class="keyword">int</span> n;</span><br><span class="line"><span class="built_in">std</span>::<span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; v;</span><br><span class="line"><span class="built_in">std</span>::<span class="built_in">vector</span>&lt;<span class="built_in">pair</span>&lt;<span class="keyword">int</span>,<span class="keyword">int</span>&gt;&gt; pa;</span><br><span class="line"><span class="keyword">int</span> cnt[<span class="number">205</span>];</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">int</span> argc, <span class="keyword">char</span> <span class="keyword">const</span> *argv[])</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">	<span class="built_in">cin</span>&gt;&gt;limit&gt;&gt;n;</span><br><span class="line">	<span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; ++i)</span><br><span class="line">	{</span><br><span class="line">		<span class="comment">/* code */</span></span><br><span class="line">		<span class="keyword">int</span> tmp;</span><br><span class="line">		<span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;tmp);</span><br><span class="line">		v.push_back(tmp);</span><br><span class="line">		cnt[tmp]++;</span><br><span class="line">	}</span><br><span class="line">	sort(v.begin(),v.end(),greater&lt;<span class="keyword">int</span>&gt;());</span><br><span class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;v.size()<span class="number">-1</span>;++i)</span><br><span class="line">	{</span><br><span class="line">		<span class="keyword">for</span>(<span class="keyword">int</span> j=i+<span class="number">1</span>;j&lt;v.size();j++)</span><br><span class="line">		{</span><br><span class="line">			<span class="keyword">if</span>(cnt[v[i]]==<span class="number">0</span>)<span class="keyword">break</span>;<span class="comment">//&#x526A;&#x679D;</span></span><br><span class="line">			<span class="keyword">if</span>(cnt[v[j]]==<span class="number">0</span>)<span class="keyword">continue</span>;</span><br><span class="line">			<span class="keyword">if</span>(v[i]+v[j]&lt;=limit&amp;&amp;((v[i]!=v[j])||(v[i]==v[j]&amp;&amp;cnt[v[j]]&gt;<span class="number">1</span>)))<span class="comment">//&#x53EF;&#x4EE5;&#x5408;&#x6210;&#x4E00;&#x5BF9;</span></span><br><span class="line">			{</span><br><span class="line">				n--;<span class="comment">//&#x5BF9;&#x6570;&#x51CF;&#x4E00;</span></span><br><span class="line">				cnt[v[i]]--;</span><br><span class="line">				cnt[v[j]]--;</span><br><span class="line">				</span><br><span class="line">			}</span><br><span class="line">		}</span><br><span class="line">	}</span><br><span class="line">	<span class="built_in">cout</span>&lt;&lt;n&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">}</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>洛谷</category>
      </categories>
      <tags>
        <tag>贪心</tag>
      </tags>
  </entry>
  <entry>
    <title>leetcode-941. Valid Mountain Array</title>
    <url>/2020/11/03/leetcode-941-Valid-Mountain-Array/</url>
    <content><![CDATA[<h4 id="941-Valid-Mountain-Array"><a href="https://leetcode-cn.com/problems/valid-mountain-array/">941. Valid Mountain Array</a></h4>
<a id="more"></a>
<p>&#x96BE;&#x5EA6;&#x7B80;&#x5355;79</p>
<p>Given an array <code>A</code> of integers, return <code>true</code> if and only if it is a <em>valid mountain array</em>.</p>
<p>Recall that A is a mountain array if and only if:</p>
<ul>
<li>
<p><code>A.length &gt;= 3</code></p>
</li>
<li>
<p>There exists some</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">i</span><br></pre></td></tr></table></figure>
<p>with</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">0 &lt; i &lt; A.length - 1</span><br></pre></td></tr></table></figure>
<p>such that:</p>
<ul>
<li><code>A[0] &lt; A[1] &lt; ... A[i-1] &lt; A[i]</code></li>
<li><code>A[i] &gt; A[i+1] &gt; ... &gt; A[A.length - 1]</code></li>
</ul>
</li>
</ul>
<p><img src="https://assets.leetcode.com/uploads/2019/10/20/hint_valid_mountain_array.png" alt="img"></p>
<p><strong>Example 1:</strong></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Input: [2,1]</span><br><span class="line">Output: false</span><br></pre></td></tr></table></figure>
<p><strong>Example 2:</strong></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Input: [3,5,5]</span><br><span class="line">Output: false</span><br></pre></td></tr></table></figure>
<p><strong>Example 3:</strong></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Input: [0,3,2,1]</span><br><span class="line">Output: true</span><br></pre></td></tr></table></figure>
<p><strong>Note:</strong></p>
<ol>
<li><code>0 &lt;= A.length &lt;= 10000</code></li>
<li><code>0 &lt;= A[i] &lt;= 10000 </code></li>
</ol>
<p><font color="red">solution</font></p>
<p>&#x6C34;&#x9898;</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> {</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="keyword">bool</span> <span class="title">validMountainArray</span><span class="params">(<span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt;&amp; A)</span> </span>{</span><br><span class="line">        <span class="keyword">if</span>(A.size()&lt;<span class="number">3</span>)<span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">        <span class="keyword">int</span> imax=INT_MIN,index=<span class="number">-1</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;A.size();++i)</span><br><span class="line">            <span class="keyword">if</span>(imax&lt;A[i])</span><br><span class="line">            {</span><br><span class="line">                imax=A[i];</span><br><span class="line">                index=i;</span><br><span class="line">            }</span><br><span class="line">        <span class="keyword">if</span>(index==<span class="number">0</span>||index==A.size()<span class="number">-1</span>)<span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;index;++i)</span><br><span class="line">            <span class="keyword">if</span>(A[i]&gt;=A[i+<span class="number">1</span>])</span><br><span class="line">                <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=A.size()<span class="number">-1</span>;i&gt;index;i--)</span><br><span class="line">            <span class="keyword">if</span>(A[i]&gt;=A[i<span class="number">-1</span>])</span><br><span class="line">                <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">        <span class="keyword">return</span>  <span class="literal">true</span>;</span><br><span class="line">    }</span><br><span class="line">};</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>leetcode</category>
      </categories>
  </entry>
  <entry>
    <title>PYTHON-CHAPTER 3</title>
    <url>/2020/11/02/CHAPTER-3/</url>
    <content><![CDATA[<blockquote class="blockquote-center">
            <i class="fa fa-quote-left"></i>
            <p>String</p>

            <i class="fa fa-quote-right"></i>
          </blockquote>
<a id="more"></a>
<h2 id="Basic-String-Operations">Basic String Operations</h2>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment">#python&#x4E2D;&#x5355;&#x5F15;&#x53F7;&#x548C;&#x53CC;&#x5F15;&#x53F7;&#x6CA1;&#x533A;&#x522B;</span></span><br><span class="line"><span class="string">&apos;&apos;&apos;</span></span><br><span class="line"><span class="string">%s&#x79F0;&#x4E3A;&#x8F6C;&#x6362;&#x8BF4;&#x660E;&#x7B26;&#xFF0C;&#x6307;&#x51FA;&#x4E86;&#x8981;&#x5C06;&#x503C;&#x63D2;&#x5165;&#x4EC0;&#x4E48;&#x5730;&#x65B9;&#x3002;s&#x610F;&#x5473;&#x7740;&#x5C06;&#x503C;&#x89C6;&#x4E3A;&#x5B57;</span></span><br><span class="line"><span class="string">&#x7B26;&#x4E32;&#x8FDB;&#x884C;&#x683C;&#x5F0F;&#x8BBE;&#x7F6E;&#x3002;&#x5982;&#x679C;&#x6307;&#x5B9A;&#x7684;&#x503C;&#x4E0D;&#x662F;&#x5B57;&#x7B26;&#x4E32;&#xFF0C;&#x5C06;&#x4F7F;&#x7528;str&#x5C06;&#x5176;&#x8F6C;&#x6362;&#x4E3A;&#x5B57;&#x7B26;&#x4E32;&#x3002;&#x5176;&#x4ED6;&#x8BF4;&#x660E;&#x7B26;&#x5C06;&#x5BFC;</span></span><br><span class="line"><span class="string">&#x81F4;&#x5176;&#x4ED6;&#x5F62;&#x5F0F;&#x7684;&#x8F6C;&#x6362;&#x3002;&#x4F8B;&#x5982;&#xFF0C;%.3f&#x5C06;&#x503C;&#x7684;&#x683C;&#x5F0F;&#x8BBE;&#x7F6E;&#x4E3A;&#x5305;&#x542B;3&#x4F4D;&#x5C0F;&#x6570;&#x7684;&#x6D6E;&#x70B9;&#x6570;&#x3002;</span></span><br><span class="line"><span class="string">&apos;&apos;&apos;</span></span><br><span class="line">format=<span class="string">&quot;hello ,%.1f.%s enough for ya&quot;</span></span><br><span class="line">values=(<span class="number">1.2345</span>,<span class="string">&apos;summer&apos;</span>)</span><br><span class="line">format%values</span><br></pre></td></tr></table></figure>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">print(<span class="string">&quot;{} hit {},{} call the police&quot;</span>.format(<span class="string">&quot;first&quot;</span>,<span class="string">&quot;second&quot;</span>,<span class="string">&quot;third&quot;</span>))</span><br><span class="line"><span class="comment">#The indices need not be in order like this, though.</span></span><br><span class="line">print(<span class="string">&quot;{2} hit {1},{2} call the police&quot;</span>.format(<span class="string">&quot;first&quot;</span>,<span class="string">&quot;second&quot;</span>,<span class="string">&quot;third&quot;</span>))</span><br></pre></td></tr></table></figure>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="string">&quot;{name} is {value}&quot;</span>.format(name=<span class="string">&apos;cozy&apos;</span>,value=<span class="string">&apos;s&apos;</span>)</span><br></pre></td></tr></table></figure>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="string">&quot;{n} is {m}&quot;</span>.format(n=<span class="string">&apos;cozy&apos;</span>,m=<span class="string">&apos;s&apos;</span>)</span><br></pre></td></tr></table></figure>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment">#&#x683C;&#x5F0F;&#x8BF4;&#x660E;&#x7B26;&#xFF1A;&#x8DDF;&#x5728;&#x5192;&#x53F7;&#x540E;&#x9762;&#x7684;&#x8868;&#x8FBE;&#x5F0F;</span></span><br><span class="line">print(<span class="string">&apos;{name:b}&apos;</span>.format(name=<span class="number">18</span>))<span class="comment">#binary</span></span><br><span class="line">print(<span class="string">&apos;{name:10}&apos;</span>.format(name=<span class="number">1</span>))</span><br><span class="line">print(<span class="string">&apos;{name:10}&apos;</span>.format(name=<span class="string">&quot;1&quot;</span>))</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<p><font color="red">&#x6570;&#x5B57;&#x548C;&#x5B57;&#x7B26;&#x4E32;&#x7684;&#x5BF9;&#x9F50;&#x65B9;&#x5F0F;&#x662F;&#x4E0D;&#x4E00;&#x6837;&#x7684;</font></p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="string">&apos;{:010.2f}&apos;</span>.format(<span class="number">3</span>)</span><br><span class="line"><span class="comment">#&#x5BBD;&#x5EA6;&#x4E3A;10&#xFF0C;&#x4E0D;&#x591F;&#x7684;&#x5728;&#x524D;&#x9762;&#x8865;&#x96F6;</span></span><br></pre></td></tr></table></figure>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">str=<span class="string">&quot;5&quot;</span></span><br><span class="line">str.zfill(<span class="number">4</span>)</span><br><span class="line"><span class="comment">#&#x540C;&#x6837;&#x662F;&#x5BBD;&#x5EA6;</span></span><br></pre></td></tr></table></figure>
<h2 id="string-method">string method</h2>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment">#center</span></span><br><span class="line"><span class="string">&quot;hhhhhhh&quot;</span>.center(<span class="number">40</span>,<span class="string">&apos;-&apos;</span>)</span><br></pre></td></tr></table></figure>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment">#find</span></span><br><span class="line"><span class="comment">#&#x65B9;&#x6CD5;find&#x5728;&#x5B57;&#x7B26;&#x4E32;&#x4E2D;&#x67E5;&#x627E;&#x5B50;&#x4E32;&#x3002;&#x5982;&#x679C;&#x627E;&#x5230;&#xFF0C;&#x5C31;&#x8FD4;&#x56DE;&#x5B50;&#x4E32;&#x7684;&#x7B2C;&#x4E00;&#x4E2A;&#x5B57;&#x7B26;&#x7684;&#x7D22;&#x5F15;&#xFF0C;&#x5426;&#x5219;&#x8FD4;&#x56DE;-1&#x3002;</span></span><br><span class="line"><span class="comment">#STR.find(str,x,y)x&#x8D77;&#x70B9;&#xFF0C;y&#x7EC8;&#x70B9; &#x53EF;&#x7F3A;&#x7701;</span></span><br><span class="line">print(<span class="string">&apos;With a moo-moo here, and a moo-moo there&apos;</span>.find(<span class="string">&apos;moo&apos;</span>))</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">str=<span class="string">&apos;With a moo-moo here, and a moo-moo there&apos;</span></span><br><span class="line">len(str)</span><br><span class="line">a=(<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>)</span><br><span class="line">len(a)</span><br><span class="line">index=<span class="number">0</span>+<span class="number">1</span></span><br><span class="line"><span class="keyword">while</span> index&lt;len(str):</span><br><span class="line">    tmp=(<span class="string">&apos;With a moo-moo here, and a moo-moo there&apos;</span>.find(<span class="string">&apos;moo&apos;</span>,index))</span><br><span class="line">    <span class="keyword">if</span>(int(tmp)&gt;=<span class="number">0</span>):</span><br><span class="line">        index=tmp+<span class="number">1</span></span><br><span class="line">        print(index)</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="keyword">break</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>
<pre><code>7
8
12
28
32
</code></pre>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment">#join &#x7528;&#x4E00;&#x4E2A;&#x5B57;&#x7B26;&#x8FDE;&#x63A5;&#x5E8F;&#x5217;&#x6210;&#x4E00;&#x4E2A;&#x5B57;&#x7B26;&#x4E32;</span></span><br><span class="line">str=[<span class="string">&apos;s&apos;</span>,<span class="string">&apos;a&apos;</span>,<span class="string">&apos;b&apos;</span>,<span class="string">&apos;c&apos;</span>]</span><br><span class="line"><span class="string">&apos;+&apos;</span>.join(str)     </span><br></pre></td></tr></table></figure>
<pre><code>&apos;s+a+b+c&apos;
</code></pre>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment">#in</span></span><br><span class="line">str=[<span class="string">&apos;s&apos;</span>,<span class="string">&apos;a&apos;</span>,<span class="string">&apos;b&apos;</span>,<span class="string">&apos;c&apos;</span>]</span><br><span class="line"><span class="keyword">if</span>(<span class="string">&apos;s&apos;</span><span class="keyword">in</span> str):</span><br><span class="line">    print(<span class="string">&apos;niupi&apos;</span>)</span><br></pre></td></tr></table></figure>
<pre><code>niupi
</code></pre>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment">#lower </span></span><br><span class="line">str=<span class="string">&quot;DDDDDDDDDDDDDD&quot;</span></span><br><span class="line">str.lower()</span><br></pre></td></tr></table></figure>
<pre><code>&apos;dddddddddddddd&apos;
</code></pre>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment">#upper</span></span><br><span class="line">str=<span class="string">&apos;aaaaaaaaaa&apos;</span></span><br><span class="line">str.upper()</span><br></pre></td></tr></table></figure>
<pre><code>&apos;AAAAAAAAAA&apos;
</code></pre>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment">#title &#x8BCD;&#x9996;&#x5927;&#x5199;</span></span><br><span class="line"><span class="string">&quot;that&apos;s all folks&quot;</span>.title()</span><br></pre></td></tr></table></figure>
<pre><code>&quot;That&apos;S All Folks&quot;
</code></pre>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment">#replace</span></span><br><span class="line"><span class="string">&apos;This is a is test&apos;</span>.replace(<span class="string">&apos;is&apos;</span>, <span class="string">&apos;eez&apos;</span>)</span><br></pre></td></tr></table></figure>
<pre><code>&apos;Theez eez a eez test&apos;
</code></pre>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment">#split</span></span><br><span class="line">s=<span class="string">&apos;This is a is test&apos;</span>.split(<span class="string">&apos; &apos;</span>)</span><br><span class="line">s[<span class="number">1</span>]</span><br></pre></td></tr></table></figure>
<pre><code>&apos;is&apos;
</code></pre>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      <tags>
        <tag>python</tag>
      </tags>
  </entry>
  <entry>
    <title>leetcode-5600. Kth Smallest Instructions</title>
    <url>/2020/11/02/leetcode-5600-Kth-Smallest-Instructions/</url>
    <content><![CDATA[<h4 id="5600-Kth-Smallest-Instructions"><a href="https://leetcode-cn.com/problems/kth-smallest-instructions/">5600. Kth Smallest Instructions</a></h4>
<a id="more"></a>
<p>&#x96BE;&#x5EA6;&#x56F0;&#x96BE;14</p>
<p>Bob is standing at cell <code>(0, 0)</code>, and he wants to reach <code>destination</code>: <code>(row, column)</code>. He can only travel <strong>right</strong> and <strong>down</strong>. You are going to help Bob by providing <strong>instructions</strong> for him to reach <code>destination</code>.</p>
<p>The <strong>instructions</strong> are represented as a string, where each character is either:</p>
<ul>
<li><code>&apos;H&apos;</code>, meaning move horizontally (go <strong>right</strong>), or</li>
<li><code>&apos;V&apos;</code>, meaning move vertically (go <strong>down</strong>).</li>
</ul>
<p>Multiple <strong>instructions</strong> will lead Bob to <code>destination</code>. For example, if <code>destination</code> is <code>(2, 3)</code>, both <code>&quot;HHHVV&quot;</code> and <code>&quot;HVHVH&quot;</code> are valid <strong>instructions</strong>.</p>
<p>However, Bob is very picky. Bob has a lucky number <code>k</code>, and he wants the <code>kth</code> <strong>lexicographically smallest instructions</strong> that will lead him to <code>destination</code>. <code>k</code> is <strong>1-indexed</strong>.</p>
<p>Given an integer array <code>destination</code> and an integer <code>k</code>, return <em>the</em> <code>kth</code><em><strong>lexicographically smallest instructions</strong> that will take Bob to</em> <code>destination</code>.</p>
<p><strong>Example 1:</strong></p>
<p><img src="https://assets.leetcode.com/uploads/2020/10/12/ex1.png" alt="img"></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Input: destination = [2,3], k = 1</span><br><span class="line">Output: &quot;HHHVV&quot;</span><br><span class="line">Explanation: All the instructions that reach (2, 3) in lexicographic order are as follows:</span><br><span class="line">[&quot;HHHVV&quot;, &quot;HHVHV&quot;, &quot;HHVVH&quot;, &quot;HVHHV&quot;, &quot;HVHVH&quot;, &quot;HVVHH&quot;, &quot;VHHHV&quot;, &quot;VHHVH&quot;, &quot;VHVHH&quot;, &quot;VVHHH&quot;].</span><br></pre></td></tr></table></figure>
<p><strong>Example 2:</strong></p>
<p><strong><img src="https://assets.leetcode.com/uploads/2020/10/12/ex2.png" alt="img"></strong></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Input: destination = [2,3], k = 2</span><br><span class="line">Output: &quot;HHVHV&quot;</span><br></pre></td></tr></table></figure>
<p><strong>Example 3:</strong></p>
<p><strong><img src="https://assets.leetcode.com/uploads/2020/10/12/ex3.png" alt="img"></strong></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Input: destination = [2,3], k = 3</span><br><span class="line">Output: &quot;HHVVH&quot;</span><br></pre></td></tr></table></figure>
<p><strong>Constraints:</strong></p>
<ul>
<li><code>destination.length == 2</code></li>
<li><code>1 &lt;= row, column &lt;= 15</code></li>
<li><code>1 &lt;= k &lt;= nCr(row + column, row)</code>, where <code>nCr(a, b)</code> denotes <code>a</code> choose <code>b</code>.</li>
</ul>
<p><font color="red">solution</font></p>
<p>&#x4E00;&#x9053;&#x7EC4;&#x5408;&#x6570;&#x5B66;&#x7684;&#x9898;</p>
<p><em>c</em>[<em>n</em>][<em>k</em>]=<em>c</em>[<em>n</em>&#x2212;1][<em>k</em>&#x2212;1]+<em>c</em>[<em>n</em>&#x2212;1][<em>k</em>]</p>
<p>&#xB7;&#xB7;&#xB7;</p>
<p>&#x5224;&#x65AD;K&#x6709;&#x6CA1;&#x6709;&#x6BD4;H&#x5F00;&#x5934;&#x7684;&#x5B50;&#x5E8F;&#x5217;&#x6570;&#x76EE;&#x5927;&#xFF0C;&#x5982;&#x679C;&#x6709;&#x90A3;&#x4E48;&#x5C31;&#x662F;&#x4EE5;H&#x5F00;&#x5934;&#xFF0C;&#x7136;&#x540E;&#x5F80;&#x540E;&#x79FB;&#x52A8;&#x4E00;&#x4F4D;</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> {</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="keyword">int</span> com[<span class="number">40</span>][<span class="number">20</span>];</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">init</span><span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>{</span><br><span class="line">        com[<span class="number">0</span>][<span class="number">0</span>]=<span class="number">1</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=<span class="number">30</span>;++i)</span><br><span class="line">        {</span><br><span class="line">            com[i][<span class="number">0</span>]=<span class="number">1</span>;</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>;j&lt;=<span class="number">15</span>;++j)</span><br><span class="line">                com[i][j]=com[i<span class="number">-1</span>][j<span class="number">-1</span>]+com[i<span class="number">-1</span>][j];</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line">    <span class="function"><span class="built_in">string</span> <span class="title">kthSmallestPath</span><span class="params">(<span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt;&amp; destination, <span class="keyword">int</span> k)</span> </span>{</span><br><span class="line">            <span class="keyword">int</span> x=destination[<span class="number">0</span>],y=destination[<span class="number">1</span>];<span class="comment">//v,h</span></span><br><span class="line">            init();</span><br><span class="line">            <span class="built_in">string</span> str=<span class="string">&quot;&quot;</span>;</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>,imax=x+y;i&lt;imax;++i)</span><br><span class="line">            {</span><br><span class="line">                <span class="keyword">if</span>(y&gt;<span class="number">0</span>)</span><br><span class="line">                {</span><br><span class="line">                    <span class="keyword">int</span> cnt=com[x+y<span class="number">-1</span>][y<span class="number">-1</span>];</span><br><span class="line">                    <span class="keyword">if</span>(k&gt;cnt)</span><br><span class="line">                    {</span><br><span class="line">                        str+=<span class="string">&apos;V&apos;</span>;</span><br><span class="line">                        x--;</span><br><span class="line">                        k-=cnt;</span><br><span class="line">                    }</span><br><span class="line">                    <span class="keyword">else</span></span><br><span class="line">                    {</span><br><span class="line">                        str+=<span class="string">&apos;H&apos;</span>;</span><br><span class="line">                        y--;</span><br><span class="line">                    }</span><br><span class="line">                }</span><br><span class="line">                <span class="keyword">else</span></span><br><span class="line">                {</span><br><span class="line">                        str+=<span class="string">&apos;V&apos;</span>;</span><br><span class="line">                        x--;</span><br><span class="line">                }</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">return</span> str;</span><br><span class="line">    }</span><br><span class="line">};</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>leetcode</category>
      </categories>
      <tags>
        <tag>好题</tag>
        <tag>combinatorial mathematics</tag>
      </tags>
  </entry>
  <entry>
    <title>leetcode-5556. Furthest Building You Can Reach</title>
    <url>/2020/11/02/leetcode-5556-Furthest-Building-You-Can-Reach/</url>
    <content><![CDATA[<h4 id="5556-Furthest-Building-You-Can-Reach"><a href="https://leetcode-cn.com/problems/furthest-building-you-can-reach/">5556. Furthest Building You Can Reach</a></h4>
<a id="more"></a>
<p>&#x96BE;&#x5EA6;&#x4E2D;&#x7B49;14</p>
<p>You are given an integer array <code>heights</code> representing the heights of buildings, some <code>bricks</code>, and some <code>ladders</code>.</p>
<p>You start your journey from building <code>0</code> and move to the next building by possibly using bricks or ladders.</p>
<p>While moving from building <code>i</code> to building <code>i+1</code> (<strong>0-indexed</strong>),</p>
<ul>
<li>If the current building&#x2019;s height is <strong>greater than or equal</strong> to the next building&#x2019;s height, you do <strong>not</strong> need a ladder or bricks.</li>
<li>If the current building&#x2019;s height is <strong>less than</strong> the next building&#x2019;s height, you can either use <strong>one ladder</strong> or <code>(h[i+1] - h[i])</code> <strong>bricks</strong>.</li>
</ul>
<p><em>Return the furthest building index (0-indexed) you can reach if you use the given ladders and bricks optimally.</em></p>
<p><strong>Example 1:</strong></p>
<p><img src="https://assets.leetcode.com/uploads/2020/10/27/q4.gif" alt="img"></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Input: heights = [4,2,7,6,9,14,12], bricks = 5, ladders = 1</span><br><span class="line">Output: 4</span><br><span class="line">Explanation: Starting at building 0, you can follow these steps:</span><br><span class="line">- Go to building 1 without using ladders nor bricks since 4 &gt;= 2.</span><br><span class="line">- Go to building 2 using 5 bricks. You must use either bricks or ladders because 2 &lt; 7.</span><br><span class="line">- Go to building 3 without using ladders nor bricks since 7 &gt;= 6.</span><br><span class="line">- Go to building 4 using your only ladder. You must use either bricks or ladders because 6 &lt; 9.</span><br><span class="line">It is impossible to go beyond building 4 because you do not have any more bricks or ladders.</span><br></pre></td></tr></table></figure>
<p><strong>Example 2:</strong></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Input: heights = [4,12,2,7,3,18,20,3,19], bricks = 10, ladders = 2</span><br><span class="line">Output: 7</span><br></pre></td></tr></table></figure>
<p><strong>Example 3:</strong></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Input: heights = [14,3,19,3], bricks = 17, ladders = 0</span><br><span class="line">Output: 3</span><br></pre></td></tr></table></figure>
<p><strong>Constraints:</strong></p>
<ul>
<li><code>1 &lt;= heights.length &lt;= 105</code></li>
<li><code>1 &lt;= heights[i] &lt;= 106</code></li>
<li><code>0 &lt;= bricks &lt;= 109</code></li>
<li><code>0 &lt;= ladders &lt;= heights.length</code></li>
</ul>
<h4 id="font-color-green-solution-one-font"><font color="green">solution one</font></h4>
<p>&#x66B4;&#x529B;dfs&#x8D85;&#x65F6;,&#x771F;&#x6EF4;&#x5934;&#x75DB;&#xFF0C;&#x7EE7;&#x7EED;&#x60F3;&#x5427;&#x3002;</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> {</span></span><br><span class="line">	<span class="keyword">int</span> cnt=<span class="number">0</span>;</span><br><span class="line">	<span class="keyword">int</span> len=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="keyword">int</span> <span class="title">furthestBuilding</span><span class="params">(<span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt;&amp; heights, <span class="keyword">int</span> bricks, <span class="keyword">int</span> ladders)</span> </span>{</span><br><span class="line">    	len=heights.size();</span><br><span class="line">    	<span class="keyword">if</span>(len==<span class="number">1</span>)<span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">    	<span class="keyword">return</span> fun(heights,bricks,ladders,<span class="number">0</span>);</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">int</span> <span class="title">fun</span><span class="params">(<span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt;&amp;heights,<span class="keyword">int</span> bricks,<span class="keyword">int</span> ladders,<span class="keyword">int</span> index )</span></span></span><br><span class="line"><span class="function">    </span>{</span><br><span class="line">    	<span class="keyword">if</span>(index==len<span class="number">-1</span>)</span><br><span class="line">    	{</span><br><span class="line">    		<span class="keyword">return</span> index;</span><br><span class="line">    	}</span><br><span class="line">    	<span class="keyword">else</span></span><br><span class="line">    	{</span><br><span class="line">    		<span class="keyword">if</span>(heights[index]&gt;=heights[index+<span class="number">1</span>])</span><br><span class="line">    			<span class="keyword">return</span> fun(heights,bricks,ladders,index+<span class="number">1</span>);</span><br><span class="line">    		<span class="keyword">else</span></span><br><span class="line">    		{</span><br><span class="line">    			<span class="keyword">if</span>(ladders==<span class="number">0</span>&amp;&amp;bricks&lt;heights[index+<span class="number">1</span>]-heights[index])<span class="keyword">return</span> index;</span><br><span class="line">    			<span class="keyword">else</span> <span class="keyword">if</span>(ladders==<span class="number">0</span>)</span><br><span class="line">    				<span class="keyword">return</span> fun(heights,bricks-(heights[index+<span class="number">1</span>]-heights[index]),ladders,index+<span class="number">1</span>);</span><br><span class="line">    			<span class="keyword">else</span> <span class="keyword">if</span>(bricks&lt;heights[index+<span class="number">1</span>]-heights[index])</span><br><span class="line">    				<span class="keyword">return</span> fun(heights,bricks,ladders<span class="number">-1</span>,index+<span class="number">1</span>);</span><br><span class="line">    			<span class="keyword">else</span></span><br><span class="line">    				<span class="keyword">return</span> max(fun(heights,bricks,ladders<span class="number">-1</span>,index+<span class="number">1</span>),fun(heights,bricks-(heights[index+<span class="number">1</span>]-heights[index]),ladders,index+<span class="number">1</span>));</span><br><span class="line">    		}</span><br><span class="line"></span><br><span class="line">    	}</span><br><span class="line">    }</span><br><span class="line">};</span><br></pre></td></tr></table></figure>
<h4 id="font-color-red-solution-two-font"><font color="red">solution two </font></h4>
<p>&#x7EC8;&#x4E8E;&#x60F3;&#x51FA;&#x6765;&#x4E86;&#xFF01;</p>
<p>&#x7528;&#x8D2A;&#x5FC3;&#xFF0C;&#x7136;&#x540E;&#x501F;&#x7528;top k&#x7684;&#x601D;&#x60F3;&#x3002;</p>
<p>&#x5047;&#x8BBE;&#x6700;&#x957F;&#x662F;<code>x</code>&#xFF0C;&#x90A3;&#x4E48;<code>k</code>&#x4E2A;&#x68AF;&#x5B50;&#x6700;&#x597D;&#x662F;&#x7528;&#x5728;&#x8DDD;&#x79BB;&#x5DEE;&#x6700;&#x5927;&#x7684;&#x524D;<code>k</code>&#x4E2A;&#xFF0C;&#x6211;&#x4EEC;&#x7528;&#x4E8C;&#x53C9;&#x5806;&#x53BB;&#x7EF4;&#x62A4;top k&#x3002;</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="comment">//top k</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> {</span></span><br><span class="line"><span class="built_in">priority_queue</span>&lt;<span class="keyword">int</span>&gt;que;</span><br><span class="line"><span class="keyword">int</span> sum=<span class="number">0</span>;<span class="comment">//&#x9AD8;&#x4F4E;&#x5DEE;</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="keyword">int</span> <span class="title">furthestBuilding</span><span class="params">(<span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt;&amp; heights, <span class="keyword">int</span> bricks, <span class="keyword">int</span> ladders)</span> </span>{</span><br><span class="line">    	<span class="keyword">int</span> i=<span class="number">0</span>;</span><br><span class="line">    	<span class="keyword">for</span>( i=<span class="number">0</span>;i&lt;heights.size()<span class="number">-1</span>;i++)</span><br><span class="line">    	{ </span><br><span class="line">    		<span class="keyword">if</span>(heights[i]&gt;=heights[i+<span class="number">1</span>])<span class="keyword">continue</span>;</span><br><span class="line">    		<span class="keyword">else</span></span><br><span class="line">    		{</span><br><span class="line">    			<span class="keyword">int</span> dis=heights[i+<span class="number">1</span>]-heights[i];</span><br><span class="line">    			<span class="keyword">if</span>(que.size()&lt;ladders)<span class="comment">//&#x5806;&#x8FD8;&#x672A;&#x6EE1;</span></span><br><span class="line">    				que.push(dis);</span><br><span class="line">    			<span class="keyword">else</span></span><br><span class="line">    			{</span><br><span class="line">    				<span class="keyword">if</span>(ladders!=<span class="number">0</span>&amp;&amp;dis&gt;que.top())<span class="comment">//&#x7EF4;&#x62A4; top k&#x7684;&#x4F18;&#x5148;&#x961F;&#x5217;</span></span><br><span class="line">    				{</span><br><span class="line">    					sum+=que.top();</span><br><span class="line">    					que.pop();</span><br><span class="line">    					que.push(dis);</span><br><span class="line">    				}</span><br><span class="line">    				<span class="keyword">else</span></span><br><span class="line">    					sum+=dis;</span><br><span class="line">    			}</span><br><span class="line"></span><br><span class="line">    		}</span><br><span class="line">            <span class="keyword">if</span>(sum&gt;bricks)<span class="keyword">break</span>;</span><br><span class="line">    	}</span><br><span class="line">    	<span class="keyword">return</span> i;</span><br><span class="line">    }</span><br><span class="line">};</span><br></pre></td></tr></table></figure>
<p>&#x6267;&#x884C;&#x7ED3;&#x679C;&#xFF1A;</p>
<p>&#x901A;&#x8FC7;</p>
<p>&#x663E;&#x793A;&#x8BE6;&#x60C5;</p>
<p>&#x6267;&#x884C;&#x7528;&#x65F6;&#xFF1A;172 ms, &#x5728;&#x6240;&#x6709; C++ &#x63D0;&#x4EA4;&#x4E2D;&#x51FB;&#x8D25;&#x4E86;100.00%&#x7684;&#x7528;&#x6237;</p>
<p>&#x5185;&#x5B58;&#x6D88;&#x8017;&#xFF1A;44.8 MB, &#x5728;&#x6240;&#x6709; C++ &#x63D0;&#x4EA4;&#x4E2D;&#x51FB;&#x8D25;&#x4E86;100.00%&#x7684;&#x7528;&#x6237;</p>
<h4 id="Supplementary-knowledge">Supplementary  knowledge</h4>
<p>&#x4F18;&#x5148;&#x961F;&#x5217;&#x7684;&#x4E00;&#x4E9B;&#x7528;&#x6CD5;&#xFF0C;&#x6709;&#x70B9;&#x5FD8;&#x4E86;&#xFF0C;&#x8865;&#x5145;&#x4E00;&#x4E0B;</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"> <span class="built_in">priority_queue</span>&#x9ED8;&#x8BA4;&#x4E3A;&#x5927;&#x9876;&#x5806;&#xFF0C;&#x5373;&#x5806;&#x9876;&#x5143;&#x7D20;&#x4E3A;&#x5806;&#x4E2D;&#x6700;&#x5927;&#x5143;&#x7D20;&#x3002;</span><br><span class="line"> <span class="built_in">priority_queue</span>&lt;<span class="keyword">int</span>, <span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt;, greater&lt;<span class="keyword">int</span>&gt; &gt; q;  <span class="comment">// &#x5347;&#x5E8F; &#x5C0F;&#x9876;&#x5806; &#x548C;sort&#x91CC;&#x7684;greater&#x4E0D;&#x4E00;&#x6837;</span></span><br><span class="line"> <span class="comment">//&#x6CE8;&#x610F; &gt; &gt;&#x5FC5;&#x987B;&#x5206;&#x5F00; &#x5426;&#x5219;&#x7F16;&#x8BD1;&#x5668;&#x4F1A;&#x8BEF;&#x8BA4;</span></span><br><span class="line">q.top();</span><br><span class="line"></span><br><span class="line"><span class="comment">//pair&#x7684;&#x6BD4;&#x8F83;&#x7ED3;&#x679C;&#xFF0C;&#x5148;&#x6309;&#x7167;pair&#x7684;first&#x5143;&#x7D20;&#x964D;&#x5E8F;&#xFF0C;first&#x5143;&#x7D20;&#x76F8;&#x7B49;&#x65F6;&#xFF0C;&#x518D;&#x6309;&#x7167;second&#x5143;&#x7D20;&#x964D;&#x5E8F;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">//&#x81EA;&#x5B9A;&#x4E49;&#x6BD4;&#x8F83;</span></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">Node</span>{</span></span><br><span class="line">    <span class="keyword">int</span> x, y;</span><br><span class="line">    Node(<span class="keyword">int</span> a=<span class="number">0</span>, <span class="keyword">int</span> b=<span class="number">0</span>):</span><br><span class="line">        x(a),y(b){}</span><br><span class="line">};</span><br><span class="line"><span class="keyword">bool</span> <span class="keyword">operator</span>&lt;(Node a, Node b){<span class="comment">//&#x8FD4;&#x56DE;true&#x65F6;&#xFF0C;&#x8BF4;&#x660E;a&#x7684;&#x4F18;&#x5148;&#x7EA7;&#x4F4E;&#x4E8E;b &#x91CD;&#x8F7D;&#x5C0F;&#x4E8E;&#x53F7;</span></span><br><span class="line">    <span class="comment">//x&#x503C;&#x8F83;&#x5927;&#x7684;Node&#x4F18;&#x5148;&#x7EA7;&#x4F4E;&#xFF08;x&#x5C0F;&#x7684;Node&#x6392;&#x5728;&#x961F;&#x524D;&#xFF09;</span></span><br><span class="line">    <span class="comment">//x&#x76F8;&#x7B49;&#x65F6;&#xFF0C;y&#x5927;&#x7684;&#x4F18;&#x5148;&#x7EA7;&#x4F4E;&#xFF08;y&#x5C0F;&#x7684;Node&#x6392;&#x5728;&#x961F;&#x524D;&#xFF09;</span></span><br><span class="line">    <span class="keyword">if</span>( a.x== b.x ) <span class="keyword">return</span> a.y&gt; b.y;</span><br><span class="line">    <span class="keyword">return</span> a.x&gt; b.x;</span><br><span class="line">}</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>leetcode</category>
      </categories>
      <tags>
        <tag>贪心</tag>
        <tag>好题</tag>
        <tag>top k</tag>
      </tags>
  </entry>
  <entry>
    <title>leetcode-5555. Count Sorted Vowel Strings</title>
    <url>/2020/11/01/leetcode-5555-Count-Sorted-Vowel-Strings/</url>
    <content><![CDATA[<h4 id="5555-Count-Sorted-Vowel-Strings"><a href="https://leetcode-cn.com/problems/count-sorted-vowel-strings/">5555. Count Sorted Vowel Strings</a></h4>
<a id="more"></a>
<p>&#x96BE;&#x5EA6;&#x4E2D;&#x7B49;8</p>
<p>Given an integer <code>n</code>, return <em>the number of strings of length</em> <code>n</code> <em>that consist only of vowels (</em><code>a</code><em>,</em> <code>e</code><em>,</em> <code>i</code><em>,</em> <code>o</code><em>,</em> <code>u</code><em>) and are <strong>lexicographically sorted</strong>.</em></p>
<p>A string <code>s</code> is <strong>lexicographically sorted</strong> if for all valid <code>i</code>, <code>s[i]</code> is the same as or comes before <code>s[i+1]</code> in the alphabet.</p>
<p><strong>Example 1:</strong></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Input: n = 1</span><br><span class="line">Output: 5</span><br><span class="line">Explanation: The 5 sorted strings that consist of vowels only are [&quot;a&quot;,&quot;e&quot;,&quot;i&quot;,&quot;o&quot;,&quot;u&quot;].</span><br></pre></td></tr></table></figure>
<p><strong>Example 2:</strong></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Input: n = 2</span><br><span class="line">Output: 15</span><br><span class="line">Explanation: The 15 sorted strings that consist of vowels only are</span><br><span class="line">[&quot;aa&quot;,&quot;ae&quot;,&quot;ai&quot;,&quot;ao&quot;,&quot;au&quot;,&quot;ee&quot;,&quot;ei&quot;,&quot;eo&quot;,&quot;eu&quot;,&quot;ii&quot;,&quot;io&quot;,&quot;iu&quot;,&quot;oo&quot;,&quot;ou&quot;,&quot;uu&quot;].</span><br><span class="line">Note that &quot;ea&quot; is not a valid string since &apos;e&apos; comes after &apos;a&apos; in the alphabet.</span><br></pre></td></tr></table></figure>
<p><strong>Example 3:</strong></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Input: n = 33</span><br><span class="line">Output: 66045</span><br></pre></td></tr></table></figure>
<p><strong>Constraints:</strong></p>
<ul>
<li><code>1 &lt;= n &lt;= 50</code></li>
</ul>
<h4 id="font-color-red-my-solution-font"><font color="red"> my solution</font></h4>
<p>&#x66B4;&#x529B;<code>dfs</code></p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> {</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="keyword">int</span> cnt=<span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">    <span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt;tmp;</span><br><span class="line">    <span class="function"><span class="keyword">int</span> <span class="title">countVowelStrings</span><span class="params">(<span class="keyword">int</span> n)</span> </span>{</span><br><span class="line">    	fun(n,<span class="number">0</span>,<span class="number">0</span>);</span><br><span class="line">    	<span class="keyword">return</span> cnt;</span><br><span class="line">    }</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">fun</span><span class="params">(<span class="keyword">int</span> n,<span class="keyword">int</span> times,<span class="keyword">int</span> last)</span></span></span><br><span class="line"><span class="function">    </span>{</span><br><span class="line">    	<span class="keyword">if</span>(times==n)</span><br><span class="line">    	{</span><br><span class="line">    		<span class="keyword">for</span>(<span class="keyword">auto</span> x:tmp)</span><br><span class="line">    			<span class="built_in">cout</span>&lt;&lt;x&lt;&lt;<span class="string">&quot; &quot;</span>;</span><br><span class="line">    		<span class="built_in">cout</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">    		cnt++;<span class="keyword">return</span> ;</span><br><span class="line">    	}</span><br><span class="line">    	<span class="keyword">else</span></span><br><span class="line">    	{</span><br><span class="line">    		<span class="keyword">for</span>(<span class="keyword">int</span> i=last;i&lt;<span class="number">5</span>;++i)</span><br><span class="line">    		{</span><br><span class="line">    			tmp.push_back(i);</span><br><span class="line">    			fun(n,times+<span class="number">1</span>,i);</span><br><span class="line">    			tmp.pop_back();</span><br><span class="line">    		}</span><br><span class="line">    	}</span><br><span class="line">    }</span><br><span class="line">};</span><br></pre></td></tr></table></figure>
<h4 id="darao&#x2019;s-solution">darao&#x2019;s solution</h4>
<p>&#x6211;&#x5176;&#x5B9E;&#x4E5F;&#x89C9;&#x5F97;&#x6709;&#x66F4;&#x7B80;&#x5355;&#x7684;&#x65B9;&#x6CD5;&#xFF0C;&#x4F46;&#x662F;&#x56E0;&#x4E3A;&#x6BD4;&#x8D5B;&#x6CA1;&#x6709;&#x4ED4;&#x7EC6;&#x53BB;&#x60F3;&#xFF0C;&#x8FD8;&#x5F97;&#x591A;&#x7EC3;&#x54CE;</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> {</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">countVowelStrings</span><span class="params">(<span class="keyword">int</span> n)</span> </span>{</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">int</span>[][] dp = <span class="keyword">new</span> <span class="keyword">int</span>[<span class="number">6</span>][n+<span class="number">1</span>];</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;<span class="number">6</span>; ++i){</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">0</span>; j&lt;=n; ++j){</span><br><span class="line">                <span class="keyword">if</span>(i == <span class="number">0</span>) dp[i][j] = <span class="number">0</span>;</span><br><span class="line">                <span class="keyword">if</span>(j == <span class="number">0</span>) dp[i][j] = <span class="number">1</span>;</span><br><span class="line">                <span class="keyword">if</span>(i!= <span class="number">0</span> &amp;&amp; j!=<span class="number">0</span>){</span><br><span class="line">                    dp[i][j] = dp[i][j<span class="number">-1</span>] +dp[i<span class="number">-1</span>][j];</span><br><span class="line">                }</span><br><span class="line">            }</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">return</span> dp[<span class="number">5</span>][n];</span><br><span class="line">    }</span><br><span class="line">}</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>leetcode</category>
      </categories>
      <tags>
        <tag>好题</tag>
        <tag>dp</tag>
        <tag>dfs</tag>
      </tags>
  </entry>
  <entry>
    <title>leetcode-5554. Check Array Formation Through Concatenation</title>
    <url>/2020/11/01/leetcode-5554-Check-Array-Formation-Through-Concatenation/</url>
    <content><![CDATA[<p>213&#x5468;&#x8D5B; Q1</p>
<h4 id="5554-Check-Array-Formation-Through-Concatenation"><a href="https://leetcode-cn.com/problems/check-array-formation-through-concatenation/">5554. Check Array Formation Through Concatenation</a></h4>
<a id="more"></a>
<p>You are given an array of <strong>distinct</strong> integers <code>arr</code> and an array of integer arrays <code>pieces</code>, where the integers in <code>pieces</code> are <strong>distinct</strong>. Your goal is to form <code>arr</code> by concatenating the arrays in <code>pieces</code> <strong>in any order</strong>. However, you are <strong>not</strong> allowed to reorder the integers in each array <code>pieces[i]</code>.</p>
<p>Return <code>true</code> <em>if it is possible</em> <em>to form the array</em> <code>arr</code> <em>from</em> <code>pieces</code>. Otherwise, return <code>false</code>.</p>
<p><strong>Example 1:</strong></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Input: arr = [85], pieces = [[85]]</span><br><span class="line">Output: true</span><br></pre></td></tr></table></figure>
<p><strong>Example 2:</strong></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Input: arr = [15,88], pieces = [[88],[15]]</span><br><span class="line">Output: true</span><br><span class="line">Explanation: Concatenate [15] then [88]</span><br></pre></td></tr></table></figure>
<p><strong>Example 3:</strong></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Input: arr = [49,18,16], pieces = [[16,18,49]]</span><br><span class="line">Output: false</span><br><span class="line">Explanation: Even though the numbers match, we cannot reorder pieces[0].</span><br></pre></td></tr></table></figure>
<p><strong>Example 4:</strong></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Input: arr = [91,4,64,78], pieces = [[78],[4,64],[91]]</span><br><span class="line">Output: true</span><br><span class="line">Explanation: Concatenate [91] then [4,64] then [78]</span><br></pre></td></tr></table></figure>
<p><strong>Example 5:</strong></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Input: arr = [1,3,5,7], pieces = [[2,4,6,8]]</span><br><span class="line">Output: false</span><br></pre></td></tr></table></figure>
<p><strong>Constraints:</strong></p>
<ul>
<li><code>1 &lt;= pieces.length &lt;= arr.length &lt;= 100</code></li>
<li><code>sum(pieces[i].length) == arr.length</code></li>
<li><code>1 &lt;= pieces[i].length &lt;= arr.length</code></li>
<li><code>1 &lt;= arr[i], pieces[i][j] &lt;= 100</code></li>
<li>The integers in <code>arr</code> are <strong>distinct</strong>.</li>
<li>The integers in <code>pieces</code> are <strong>distinct</strong> (i.e., If we flatten pieces in a 1D array, all the integers in this array are distinct).</li>
</ul>
<p><font size="10" color="red">solution </font></p>
<p>&#x7528;&#x4E86;<code>find</code>&#x5B8C;&#x4E8B;&#x4E86;</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> {</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">	<span class="function"><span class="keyword">static</span> <span class="keyword">bool</span> <span class="title">cmp</span><span class="params">(<span class="built_in">std</span>::<span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; v,<span class="built_in">std</span>::<span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; w)</span></span></span><br><span class="line"><span class="function">    </span>{</span><br><span class="line">    	<span class="keyword">return</span> v[<span class="number">0</span>]&lt;w[<span class="number">0</span>];</span><br><span class="line">    }</span><br><span class="line">    <span class="function"><span class="keyword">bool</span> <span class="title">canFormArray</span><span class="params">(<span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt;&amp; arr, <span class="built_in">vector</span>&lt;<span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt;&gt;&amp; pieces)</span> </span>{</span><br><span class="line">    	<span class="keyword">for</span>(<span class="keyword">auto</span> x:pieces)</span><br><span class="line">    	{</span><br><span class="line">    		<span class="keyword">int</span> index=lower_bound(arr.begin(),arr.end(),x[<span class="number">0</span>])-arr.begin();</span><br><span class="line">    		<span class="keyword">for</span>(<span class="keyword">auto</span> j:x)</span><br><span class="line">    			<span class="keyword">if</span>(j!=arr[index++])</span><br><span class="line">    				<span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    	}</span><br><span class="line">    	<span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">};</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>leetcode</category>
      </categories>
  </entry>
  <entry>
    <title>Rich dad por dad</title>
    <url>/2020/10/31/Rich-dad-por-dad/</url>
    <content><![CDATA[<p>reading rich dad poor dad</p>
<a id="more"></a>
<h1>Introduction</h1>
<div class="note primary">
            <p>There is a difference between being poor and being broke. Broke is temporary. Poor is eternal.</p>
          </div>
<p>&#x4E00;&#x4E2A;&#x6682;&#x65F6;&#x6027;&#x548C;&#x666E;&#x904D;&#x6027;&#x7684;&#x95EE;&#x9898;&#x3002;&#x5F88;&#x591A;&#x5730;&#x65B9;&#x90FD;&#x5B58;&#x5728;&#xFF0C;&#x6BD4;&#x5982;&#x4F60;&#x5B66;&#x4E60;&#x597D;&#xFF0C;&#x4F46;&#x662F;&#x67D0;&#x6B21;&#x8003;&#x8BD5;broken&#x4E86;&#xFF0C;&#x8981;&#x544A;&#x8BC9;&#x81EA;&#x5DF1;&#x8FD9;&#x662F;&#x6682;&#x65F6;&#x7684;&#xFF0C;keep moving&#x3002;&#x540C;&#x7406;&#xFF0C;&#x5982;&#x679C;&#x4F60;&#x91D1;&#x878D;&#x80FD;&#x529B;&#x4E0D;&#x5F3A;&#xFF0C;&#x4F46;&#x662F;&#x67D0;&#x6B21;&#x6295;&#x8D44;&#x5F88;&#x6210;&#x529F;&#xFF0C;&#x4E5F;&#x8981;&#x544A;&#x8BC9;&#x81EA;&#x5DF1;&#x8FD9;&#x662F;&#x4FA5;&#x5E78;&#x3002;&#x6211;&#x8BA4;&#x4E3A;&#x4F60;&#x7684;&#x80FD;&#x529B;&#x662F;&#x4F60;&#x7684;&#x4EF7;&#x503C;&#xFF0C;&#x4F60;&#x7684;&#x56DE;&#x62A5;&#x662F;&#x4F60;&#x7684;&#x4EF7;&#x683C;&#xFF0C;&#xFF0C;&#x628A;&#x65F6;&#x95F4;&#x62C9;&#x957F;&#x8FDC;&#x4E00;&#x4E9B;&#xFF0C;&#x4EF7;&#x683C;&#x56DE;&#x5FE0;&#x4E8E;&#x4EF7;&#x503C;&#x7684;&#xFF0C;&#x6240;&#x4EE5;&#x8981;&#x52AA;&#x529B;&#x63D0;&#x5347;&#x81EA;&#x5DF1;&#x7684;&#x80FD;&#x529B;&#x3002;</p>
<h1>LESSION 1</h1>
<div class="note primary">
            <p>I may sound unkind because I&#x2019;m doing my best to point something out to the two of you.</p>
          </div>
<div class="note primary">
            <p>First, the fear of being without money motivates us to work hard, and then once we get that paycheck, greed or desire starts us thinking about all the wonderful<br>things money can buy.</p>
          </div>
<div class="note primary">
            <p>So many people say, &#x201C;Oh, I&#x2019;m not interested in money.&#x201D; Yet they&#x2019;ll work at a job for<br>eight hours a day.</p>
          </div>
<div class="note primary">
            <p>Rich dad went on to explain that a human&#x2019;s life is a struggle between ignorance and illumination. He explained that once a person stops searching for information and self-knowledge, ignorance sets in. That struggle is a moment-to moment decision&#x2014;to learn to open or close one&#x2019;s mind.</p>
          </div>]]></content>
      <categories>
        <category>reading note</category>
      </categories>
      <tags>
        <tag>finance</tag>
      </tags>
  </entry>
  <entry>
    <title>激光炸弹</title>
    <url>/2020/10/30/%E6%BF%80%E5%85%89%E7%82%B8%E5%BC%B9/</url>
    <content><![CDATA[<p>&#x4E00;&#x79CD;&#x65B0;&#x578B;&#x7684;&#x6FC0;&#x5149;&#x70B8;&#x5F39;&#xFF0C;&#x53EF;&#x4EE5;&#x6467;&#x6BC1;&#x4E00;&#x4E2A;&#x8FB9;&#x957F;&#x4E3A;R&#x7684;&#x6B63;&#x65B9;&#x5F62;&#x5185;&#x7684;&#x6240;&#x6709;&#x7684;&#x76EE;&#x6807;&#x3002;&#x73B0;&#x5728;&#x5730;&#x56FE;&#x4E0A;&#x6709;n(N&lt;=10000)&#x4E2A;&#x76EE;&#x6807;&#xFF0C;&#x7528;&#x6574;&#x6570;Xi,Yi(&#x5176;&#x503C;&#x5728;[0,5000])&#x8868;&#x793A;&#x76EE;&#x6807;&#x5728;&#x5730;&#x56FE;&#x4E0A;&#x7684;&#x4F4D;&#x7F6E;&#xFF0C;&#x6BCF;&#x4E2A;&#x76EE;&#x6807;&#x90FD;&#x6709;&#x4E00;&#x4E2A;&#x4EF7;&#x503C;&#x3002;&#x6FC0;&#x5149;&#x70B8;&#x5F39;&#x7684;&#x6295;&#x653E;&#x662F;&#x901A;&#x8FC7;&#x536B;&#x661F;&#x5B9A;&#x4F4D;&#x7684;&#xFF0C;&#x4F46;&#x5176;&#x6709;&#x4E00;&#x4E2A;&#x7F3A;&#x70B9;&#xFF0C;&#x5C31;&#x662F;&#x5176;&#x7206;&#x7834;&#x8303;&#x56F4;&#xFF0C;&#x5373;&#x90A3;&#x4E2A;&#x8FB9;&#x957F;&#x4E3A;R&#x7684;&#x6B63;&#x65B9;&#x5F62;&#x7684;&#x8FB9;&#x5FC5;&#x987B;&#x548C;x&#xFF0C;y&#x8F74;&#x5E73;&#x884C;&#x3002;&#x82E5;&#x76EE;&#x6807;&#x4F4D;&#x4E8E;&#x7206;&#x7834;&#x6B63;&#x65B9;&#x5F62;&#x7684;&#x8FB9;&#x4E0A;&#xFF0C;&#x8BE5;&#x76EE;&#x6807;&#x5C06;&#x4E0D;&#x4F1A;&#x88AB;&#x6467;&#x6BC1;&#x3002;</p>
<a id="more"></a>
<h3 id="&#x8F93;&#x5165;&#x683C;&#x5F0F;">&#x8F93;&#x5165;&#x683C;&#x5F0F;</h3>
<p>&#x8F93;&#x5165;&#x6587;&#x4EF6;&#x7684;&#x7B2C;&#x4E00;&#x884C;&#x4E3A;&#x6B63;&#x6574;&#x6570;n&#x548C;&#x6B63;&#x6574;&#x6570;R&#xFF0C;&#x63A5;&#x4E0B;&#x6765;&#x7684;n&#x884C;&#x6BCF;&#x884C;&#x6709;3&#x4E2A;&#x6B63;&#x6574;&#x6570;&#xFF0C;&#x5206;&#x522B;&#x8868;&#x793A;xi,yi,vi</p>
<h3 id="&#x8F93;&#x51FA;&#x683C;&#x5F0F;">&#x8F93;&#x51FA;&#x683C;&#x5F0F;</h3>
<p>&#x8F93;&#x51FA;&#x6587;&#x4EF6;&#x4EC5;&#x6709;&#x4E00;&#x4E2A;&#x6B63;&#x6574;&#x6570;&#xFF0C;&#x8868;&#x793A;&#x4E00;&#x9897;&#x70B8;&#x5F39;&#x6700;&#x591A;&#x80FD;&#x70B8;&#x6389;&#x5730;&#x56FE;&#x4E0A;&#x603B;&#x4EF7;&#x503C;&#x4E3A;&#x591A;&#x5C11;&#x7684;&#x76EE;&#x6807;&#xFF08;&#x7ED3;&#x679C;&#x4E0D;&#x4F1A;&#x8D85;&#x8FC7;32767&#xFF09;&#x3002;</p>
<p>Sample Input</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">2 1</span><br><span class="line">0 0 1</span><br><span class="line">1 1 1</span><br></pre></td></tr></table></figure>
<p>Sample Output</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">1</span><br></pre></td></tr></table></figure>
<p><font color="red">solution</font></p>
<p>&#x524D;&#x7F00;&#x548C;&#x7684;&#x57FA;&#x672C;&#x5E94;&#x7528;</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn=<span class="number">5005</span>;</span><br><span class="line"><span class="keyword">int</span> maze[maxn][maxn];</span><br><span class="line"><span class="keyword">int</span> n,r;</span><br><span class="line"><span class="keyword">int</span> z=INT_MIN;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">int</span> argc, <span class="keyword">char</span> <span class="keyword">const</span> *argv[])</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">	<span class="built_in">cin</span>&gt;&gt;n&gt;&gt;r;</span><br><span class="line">	<span class="keyword">int</span> x,y,v;</span><br><span class="line">	<span class="keyword">while</span>(n--)</span><br><span class="line">	{</span><br><span class="line">		<span class="built_in">cin</span>&gt;&gt;x&gt;&gt;y&gt;&gt;v;</span><br><span class="line">		maze[x+<span class="number">1</span>][y+<span class="number">1</span>]=v;</span><br><span class="line">	}</span><br><span class="line"></span><br><span class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;maxn;++i)</span><br><span class="line">		<span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>;j&lt;maxn;++j)</span><br><span class="line">			maze[i][j]+=maze[i<span class="number">-1</span>][j]+maze[i][j<span class="number">-1</span>]-maze[i<span class="number">-1</span>][j<span class="number">-1</span>];</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=r;i&lt;maxn;++i)</span><br><span class="line">		<span class="keyword">for</span>(<span class="keyword">int</span> j=r;j&lt;maxn;++j)</span><br><span class="line">			z=max(z,maze[i][j]-maze[i-r][j]-maze[i][j-r]+maze[i-r][j-r]);</span><br><span class="line">	<span class="built_in">cout</span>&lt;&lt;z;</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">}</span><br></pre></td></tr></table></figure>
<h4 id="&#x8865;&#x5145;">&#x8865;&#x5145;</h4>
<p><strong>1&#x3001;&#x7B80;&#x4ECB;</strong><br>
&#x524D;&#x7F00;&#x548C;&#x4E5F;&#x662F;&#x4E00;&#x4E2A;&#x5728;&#x6BD4;&#x8D5B;&#x4E2D;&#x6BD4;&#x8F83;&#x5B9E;&#x7528;&#x7684;&#x65B9;&#x6CD5;&#xFF0C;&#x4ED6;&#x80FD;&#x5F88;&#x5FEB;&#x5F97;&#x6C42;&#x51FA;&#x4E00;&#x4E2A;&#x533A;&#x95F4;&#x7684;&#x548C;&#xFF0C;&#x901F;&#x5EA6;&#x4E3A;O(1)&#x3002;<br>
&#x4E00;&#x7EF4;&#x7684;&#x524D;&#x7F00;&#x548C;&#x5982;sum[ i ]&#x662F;&#x6307;&#x6570;&#x7EC4;&#x524D;i&#x4F4D;&#x7684;&#x6240;&#x6709;&#x548C;&#xFF0C;&#x5982;&#x6C42;&#x533A;&#x95F4;x&#x5230;y&#x7684;&#x548C;&#x53EA;&#x9700;sum[ y ] - sum[ x ]&#x3002;<br>
&#x4E8C;&#x7EF4;&#x7684;&#x524D;&#x7F00;&#x548C;&#x5982;sum[ i ][ j ]&#x662F;&#x6307;(i,j)&#x70B9;&#x7684;&#x5DE6;&#x4E0A;&#x89D2;&#x7684;&#x77E9;&#x9635;&#x548C;&#xFF0C;&#x53CA;0 &#x2013; i&#x884C;&#x4E14;0 &#x2013; j&#x5217;&#x7684;&#x548C;&#x3002;&#x4ED6;&#x53EF;&#x4EE5;&#x5FEB;&#x901F;&#x7684;&#x6C42;&#x51FA;&#x77E9;&#x9635;&#x4E2D;&#x4EFB;&#x4F55;&#x4E00;&#x4E2A;&#x5B50;&#x77E9;&#x9635;&#x7684;&#x548C;&#xFF0C;&#x5982;&#x6C42;&#x957F;&#x4E3A;l&#x4E14;&#x53F3;&#x4E0B;&#x89D2;&#x9876;&#x70B9;&#x4E3A;(i,j)&#x7684;&#x6B63;&#x65B9;&#x5F62;&#x53EA;&#x9700;sum[ i ][ j ] - sum[ i ][ j - l ] - sum[ i - l ][ j ] + sum[ i - l ][ j - l ]&#x3002;</p>
]]></content>
      <categories>
        <category>vjudge</category>
      </categories>
      <tags>
        <tag>前缀和</tag>
      </tags>
  </entry>
  <entry>
    <title>lambda</title>
    <url>/2020/10/30/lambda/</url>
    <content><![CDATA[<blockquote class="blockquote-center">
            <i class="fa fa-quote-left"></i>
            <p>lambda</p>

            <i class="fa fa-quote-right"></i>
          </blockquote>
<a id="more"></a>
<p>1100=11*2^10^</p>
<p>12=3*2^2^</p>
]]></content>
      <categories>
        <category>python</category>
      </categories>
      <tags>
        <tag>python</tag>
      </tags>
  </entry>
  <entry>
    <title>python-part1</title>
    <url>/2020/10/29/python-part1/</url>
    <content><![CDATA[<p>&#x8F93;&#x5165;&#x8F93;&#x51FA;&#xFF0C;&#x5E8F;&#x5217;</p>
<a id="more"></a>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># annotation </span></span><br><span class="line"><span class="string">&apos;&apos;&apos;</span></span><br><span class="line"><span class="string">hello world</span></span><br><span class="line"><span class="string">&apos;&apos;&apos;</span></span><br><span class="line">print(<span class="string">&apos;hello world&apos;</span>)</span><br></pre></td></tr></table></figure>
<pre><code>hello world
</code></pre>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment">#&#x9664;&#x6CD5;&#x6D6E;&#x70B9;&#x6570;</span></span><br><span class="line">print(<span class="number">1</span>/<span class="number">2</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">#&#x9664;&#x6CD5;&#x4FDD;&#x7559;&#x6574;&#x6570;</span></span><br><span class="line">print(<span class="number">1</span>//<span class="number">2</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">#&#x5E42;&#x8FD0;&#x7B97;</span></span><br><span class="line">print(<span class="number">2</span>**<span class="number">3</span>)</span><br><span class="line">print(pow(<span class="number">2</span>,<span class="number">3</span>))</span><br><span class="line"></span><br><span class="line"><span class="comment">#abs absolute &#x7EDD;&#x5BF9;&#x503C;</span></span><br><span class="line">print(abs(<span class="number">-4</span>))</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> math</span><br><span class="line"><span class="comment">#floor &#x5411;&#x4E0B;&#x53D6;&#x6574;</span></span><br><span class="line">print(math.floor(<span class="number">1.2</span>))</span><br><span class="line"><span class="comment">#ceil &#x5411;&#x4E0A;&#x53D6;&#x6574;</span></span><br><span class="line">print(math.ceil(<span class="number">1.2</span>))</span><br></pre></td></tr></table></figure>
<pre><code>0.5
0
8
8
4
1
2
</code></pre>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment">#input</span></span><br><span class="line">name=input(<span class="string">&quot;what&apos;s your name?&quot;</span>)</span><br><span class="line">school=input(<span class="string">&quot;what&apos;s your school&quot;</span>)</span><br><span class="line">print(name+<span class="string">&quot; comes from &quot;</span>+school)</span><br><span class="line"></span><br><span class="line">x=input(<span class="string">&quot;x:&quot;</span>)</span><br><span class="line">y=input(<span class="string">&quot;y:&quot;</span>)</span><br><span class="line">print(x*y)</span><br></pre></td></tr></table></figure>
<pre><code>what&apos;s your name?cozy
what&apos;s your schoolmoyu
cozy comes from moyu
x:2
y:3



---------------------------------------------------------------------------

TypeError                                 Traceback (most recent call last)

&lt;ipython-input-43-10e99196240a&gt; in &lt;module&gt;()
      6 x=input(&quot;x:&quot;)
      7 y=input(&quot;y:&quot;)
----&gt; 8 print(x*y)


TypeError: can&apos;t multiply sequence by non-int of type &apos;str&apos;
</code></pre>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment">#input&#x8FD4;&#x56DE;&#x7684;&#x662F;str&#x7C7B;&#x578B;&#x7684;&#xFF0C;&#x6240;&#x4EE5;&#x9700;&#x8981;&#x7C7B;&#x578B;&#x8F6C;&#x6362;</span></span><br><span class="line">x=input(<span class="string">&quot;x:&quot;</span>)</span><br><span class="line">y=input(<span class="string">&quot;y:&quot;</span>)</span><br><span class="line">print(int(x)*int(y))</span><br></pre></td></tr></table></figure>
<pre><code>x:2
y:3
6
</code></pre>
<p>#&#x5E8F;&#x5217;</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="string">&apos;&apos;&apos;</span></span><br><span class="line"><span class="string">&#x5E8F;&#x5217;</span></span><br><span class="line"><span class="string">&apos;&apos;&apos;</span></span><br><span class="line">faker=[<span class="string">&apos;shenzheng&apos;</span>,<span class="number">19</span>]</span><br><span class="line">truth=[<span class="string">&apos;beijing&apos;</span>,<span class="number">21</span>]</span><br><span class="line">future=[faker,truth]</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">#index</span></span><br><span class="line">print(future)</span><br><span class="line">print(future[<span class="number">0</span>])</span><br><span class="line">print(future[<span class="number">0</span>][<span class="number">0</span>])</span><br><span class="line">print(future[<span class="number">-1</span>])<span class="comment">#last one</span></span><br></pre></td></tr></table></figure>
<pre><code>[[&apos;shenzheng&apos;, 19], [&apos;beijing&apos;, 21]]
[&apos;shenzheng&apos;, 19]
shenzheng
[&apos;beijing&apos;, 21]
</code></pre>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment">#&#x591A;&#x884C;&#x663E;&#x793A; \</span></span><br><span class="line"></span><br><span class="line">a=<span class="number">1</span>+<span class="number">2</span>+<span class="number">3</span>\</span><br><span class="line">  +<span class="number">2</span>*<span class="number">2</span></span><br><span class="line">    </span><br><span class="line">print(a)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">#&#x8BED;&#x53E5;&#x4E2D;&#x5305;&#x542B; [], {} &#x6216; () &#x62EC;&#x53F7;&#x5C31;&#x4E0D;&#x9700;&#x8981;&#x4F7F;&#x7528;&#x591A;&#x884C;&#x8FDE;&#x63A5;&#x7B26;&#x3002;</span></span><br><span class="line">truth=[<span class="string">&apos;beijing&apos;</span>,</span><br><span class="line">               <span class="number">21</span>]</span><br><span class="line">print(truth)</span><br></pre></td></tr></table></figure>
<pre><code>10
[&apos;beijing&apos;, 21]
</code></pre>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment">#slicing</span></span><br><span class="line"><span class="comment">#&#x7B2C;&#x4E8C;&#x4E2A;&#x7D22;&#x5F15;&#x662F;&#x5207;&#x7247;&#x540E;&#x4F59;&#x4E0B;&#x7684;&#x7B2C;&#x4E00;&#x4E2A;&#x5143;&#x7D20;&#x7684;&#x7F16;&#x53F7;</span></span><br><span class="line">dream=<span class="string">&quot;be a nice boy&quot;</span></span><br><span class="line">print(dream[<span class="number">0</span>:<span class="number">1</span>])</span><br><span class="line">print(dream[<span class="number">0</span>:<span class="number">0</span>])</span><br><span class="line">print(dream[<span class="number">0</span>:<span class="number">-1</span>])</span><br><span class="line"></span><br><span class="line"><span class="comment">#&#x4F46;&#x7B2C;&#x4E8C;&#x4E2A;&#x7D22;&#x5F15;&#x662F;&#x5207;&#x7247;&#x540E;&#x4F59;&#x4E0B;&#x7684;&#x7B2C;&#x4E00;&#x4E2A;&#x5143;&#x7D20;&#x7684;&#x7F16;&#x53F7;</span></span><br><span class="line">test=<span class="string">&quot;12&quot;</span></span><br><span class="line">print(test[<span class="number">0</span>:<span class="number">2</span>])</span><br><span class="line"><span class="comment">#&#x7B49;&#x4EF7;&#x4E8E;</span></span><br><span class="line">print(test[<span class="number">0</span>:])</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">#&#x8C03;&#x6574;&#x6B65;&#x957F;</span></span><br><span class="line">print(dream[::<span class="number">3</span>])</span><br><span class="line">print(dream[::<span class="number">-1</span>])</span><br></pre></td></tr></table></figure>
<pre><code>b

be a nice bo
12
12
bai y
yob ecin a eb
</code></pre>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="string">&apos;&apos;&apos;</span></span><br><span class="line"><span class="string">&#x5E8F;&#x5217;&#x76F8;&#x52A0;</span></span><br><span class="line"><span class="string">&apos;&apos;&apos;</span></span><br><span class="line">[<span class="string">&apos;co&apos;</span>]+[<span class="string">&apos;z&apos;</span>,<span class="string">&apos;y&apos;</span>]</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<pre><code>[&apos;xiao&apos;, &apos;jun&apos;, &apos;yi&apos;]
</code></pre>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="string">&apos;&apos;&apos;</span></span><br><span class="line"><span class="string">&#x4E58;&#x6CD5;</span></span><br><span class="line"><span class="string">&apos;&apos;&apos;</span></span><br><span class="line">[<span class="number">1</span>,<span class="number">2</span>]*<span class="number">10</span></span><br></pre></td></tr></table></figure>
<pre><code>[1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2]
</code></pre>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment">#&#x5728;Python&#x4E2D;&#xFF0C;None&#x8868;&#x793A;&#x4EC0;&#x4E48;&#x90FD;&#x6CA1;&#x6709; none &#x7A7A;&#x5217;&#x8868; &#x521D;&#x59CB;&#x5316;</span></span><br><span class="line">sequence=[<span class="literal">None</span>]*<span class="number">10</span></span><br><span class="line">sequence</span><br></pre></td></tr></table></figure>
<pre><code>[None, None, None, None, None, None, None, None, None, None]
</code></pre>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment">#length minimum maximum</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#length</span></span><br><span class="line">numbers=[<span class="number">2020</span>,<span class="number">10</span>,<span class="number">29</span>]</span><br><span class="line">print(len(numbers))</span><br><span class="line"></span><br><span class="line">print(min(numbers))</span><br><span class="line"></span><br><span class="line">print(max(numbers))</span><br></pre></td></tr></table></figure>
<pre><code>3
10
2020
</code></pre>
<p><font color="red">&#x5143;&#x7EC4;&#x548C;&#x5217;&#x8868;&#x90FD;&#x5C5E;&#x4E8E;&#x5E8F;&#x5217;&#xFF0C;&#x4F46;&#x662F;&#x5143;&#x7EC4;&#x4E0D;&#x53EF;&#x4EE5;&#x4FEE;&#x6539;&#xFF0C;&#x5217;&#x8868;&#x53EF;&#x4EE5;</font></p>
<p>##list</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment">#list </span></span><br><span class="line"><span class="comment">##list are mutable you can change their contents</span></span><br><span class="line"></span><br><span class="line">list(<span class="string">&apos;cozy&apos;</span>)</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<pre><code>[&apos;c&apos;, &apos;o&apos;, &apos;z&apos;, &apos;y&apos;]
</code></pre>
<p>###basic list operations</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment">#item assignments</span></span><br><span class="line">x=[<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>]</span><br><span class="line">x[<span class="number">1</span>]=<span class="number">1</span></span><br><span class="line">print(x)</span><br><span class="line"></span><br><span class="line"><span class="comment">#deleting elements</span></span><br><span class="line"><span class="keyword">del</span> x[<span class="number">1</span>]</span><br><span class="line">print(<span class="string">&quot;after del&quot;</span>)</span><br><span class="line">print(x)</span><br><span class="line"></span><br><span class="line"><span class="comment">#assigning to slices</span></span><br><span class="line">print(<span class="string">&quot;after assigning to slices&quot;</span>)</span><br><span class="line">name=list(<span class="string">&quot;assigning&quot;</span>)</span><br><span class="line">name[<span class="number">1</span>:]=<span class="string">&quot;lice&quot;</span></span><br><span class="line">print(name)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">#append</span></span><br><span class="line">print(<span class="string">&quot;after appending&quot;</span>)</span><br><span class="line">x.append(<span class="number">6</span>)</span><br><span class="line">print(x)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">#count The count method counts the occurrences of an element in a list.</span></span><br><span class="line">print(x.count(<span class="number">1</span>))</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">#&#x6D45;&#x62F7;&#x8D1D; &#x53EA;&#x662F;&#x5C06;&#x53E6;&#x4E00;&#x4E2A;&#x540D;&#x79F0;&#x5173;&#x8054;&#x5230;&#x5217;&#x8868;&#x3002;</span></span><br><span class="line">y=x</span><br><span class="line">y[<span class="number">0</span>]=<span class="number">9</span></span><br><span class="line">print(<span class="string">&quot;x&quot;</span>)</span><br><span class="line">print(x)</span><br><span class="line">print(<span class="string">&quot;y&quot;</span>)</span><br><span class="line">print(y)</span><br><span class="line"><span class="comment">#&#x6DF1;&#x62F7;&#x8D1D;</span></span><br><span class="line"></span><br><span class="line">print(<span class="string">&quot;deep copy&quot;</span>)</span><br><span class="line">z=x.copy()</span><br><span class="line">z[<span class="number">0</span>]=<span class="number">7</span></span><br><span class="line">print(<span class="string">&quot;z&quot;</span>)</span><br><span class="line">print(z)</span><br><span class="line">print(<span class="string">&quot;x&quot;</span>)</span><br><span class="line">print(x)</span><br><span class="line"></span><br><span class="line"><span class="comment">#expand   compare with append</span></span><br><span class="line">a = [<span class="number">1</span>, <span class="number">2</span>,<span class="number">3</span>]</span><br><span class="line">b=[<span class="number">4</span>,<span class="number">5</span>,<span class="number">6</span>]</span><br><span class="line">print(<span class="string">&quot;expand&quot;</span>)</span><br><span class="line">a.extend(b)</span><br><span class="line">print(a)</span><br><span class="line"><span class="comment">#clear</span></span><br><span class="line">x.clear()</span><br><span class="line"></span><br><span class="line"><span class="string">&apos;&apos;&apos;</span></span><br><span class="line"><span class="string">&#x8FD9;&#x53EF;&#x80FD;&#x770B;&#x8D77;&#x6765;&#x7C7B;&#x4F3C;&#x4E8E;&#x62FC;&#x63A5;&#xFF0C;&#x4F46;&#x5B58;&#x5728;&#x4E00;&#x4E2A;&#x91CD;&#x8981;&#x5DEE;&#x522B;&#xFF0C;&#x90A3;&#x5C31;&#x662F;&#x5C06;&#x4FEE;&#x6539;&#x88AB;&#x6269;&#x5C55;&#x7684;&#x5E8F;&#x5217;&#xFF08;&#x8FD9;&#x91CC;&#x662F;a&#xFF09;&#x3002;</span></span><br><span class="line"><span class="string">&#x5728;&#x5E38;&#x89C4;&#x62FC;&#x63A5;&#x4E2D;&#xFF0C;&#x60C5;&#x51B5;&#x662F;&#x8FD4;&#x56DE;&#x4E00;&#x4E2A;&#x5168;&#x65B0;&#x7684;&#x5E8F;&#x5217;&#x3002;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">a = [1, 2, 3] b = [4, 5, 6]</span></span><br><span class="line"><span class="string"><span class="meta">&gt;&gt;&gt; </span>a + b</span></span><br><span class="line"><span class="string">[1, 2, 3, 4, 5, 6]</span></span><br><span class="line"><span class="string"><span class="meta">&gt;&gt;&gt; </span>a</span></span><br><span class="line"><span class="string">[1, 2, 3]</span></span><br><span class="line"><span class="string">&#x5982;&#x4F60;&#x6240;&#x89C1;&#xFF0C;&#x62FC;&#x63A5;&#x51FA;&#x6765;&#x7684;&#x5217;&#x8868;&#x4E0E;&#x524D;&#x4E00;&#x4E2A;&#x793A;&#x4F8B;&#x6269;&#x5C55;&#x5F97;&#x5230;&#x7684;&#x5217;&#x8868;&#x5B8C;&#x5168;&#x76F8;&#x540C;&#xFF0C;&#x4F46;&#x5728;&#x8FD9;&#x91CC;a&#x5E76;&#x6CA1;&#x6709;&#x88AB;&#x4FEE;</span></span><br><span class="line"><span class="string">&#x6539;&#x3002;&#x9274;&#x4E8E;&#x5E38;&#x89C4;&#x62FC;&#x63A5;&#x5FC5;&#x987B;&#x4F7F;&#x7528;a&#x548C;b&#x7684;&#x526F;&#x672C;&#x521B;&#x5EFA;&#x4E00;&#x4E2A;&#x65B0;&#x5217;&#x8868;&#xFF0C;&#x56E0;&#x6B64;&#x5982;&#x679C;&#x4F60;&#x8981;&#x83B7;&#x5F97;&#x7C7B;&#x4F3C;&#x4E8E;&#x4E0B;&#x9762;&#x7684;&#x6548;&#x679C;&#xFF0C;</span></span><br><span class="line"><span class="string">&#x62FC;&#x63A5;&#x7684;&#x6548;&#x7387;&#x5C06;&#x6BD4;extend&#x4F4E;&#xFF1A;</span></span><br><span class="line"><span class="string">&apos;&apos;&apos;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#index first occurrence</span></span><br><span class="line">think=[<span class="string">&apos;i&apos;</span>, <span class="string">&apos;hate&apos;</span> ,<span class="string">&apos;you&apos;</span>]</span><br><span class="line">print(think.index(<span class="string">&apos;i&apos;</span>))</span><br><span class="line"></span><br><span class="line"><span class="comment">#insert</span></span><br><span class="line">think.insert(<span class="number">1</span>,<span class="string">&apos;very&apos;</span>)</span><br><span class="line">print(<span class="string">&apos;after inserting&apos;</span>)</span><br><span class="line">print(think)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">#sort</span></span><br><span class="line">num=[<span class="number">7</span>,<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>,<span class="number">6</span>]</span><br><span class="line">num.sort( )<span class="comment">#&#x539F;&#x5E8F;&#x5217;</span></span><br><span class="line">sorted(num)<span class="comment">#create a new list</span></span><br><span class="line"></span><br><span class="line">print(num)</span><br></pre></td></tr></table></figure>
<pre><code>[1, 1, 3, 4, 5]
after del
[1, 3, 4, 5]
after assigning to slices
[&apos;a&apos;, &apos;l&apos;, &apos;i&apos;, &apos;c&apos;, &apos;e&apos;]
after appending
[1, 3, 4, 5, 6]
1
x
[9, 3, 4, 5, 6]
y
[9, 3, 4, 5, 6]
deep copy
z
[7, 3, 4, 5, 6]
x
[9, 3, 4, 5, 6]
expand
[1, 2, 3, 4, 5, 6]
0
after inserting
[&apos;i&apos;, &apos;very&apos;, &apos;hate&apos;, &apos;you&apos;]
[1, 2, 3, 4, 5, 6, 7]
</code></pre>
]]></content>
      <categories>
        <category>python</category>
      </categories>
      <tags>
        <tag>python</tag>
      </tags>
  </entry>
  <entry>
    <title>Game--Tower of Hanoi</title>
    <url>/2020/10/27/Game-Tower-of-Hanoi/</url>
    <content><![CDATA[<p>&#x5B9E;&#x73B0;&#x4E86;&#x53EF;&#x4EE5;&#x81EA;&#x5DF1;&#x73A9;&#x4E5F;&#x53EF;&#x4EE5;&#x81EA;&#x52A8;&#x73A9;&#x7684;&#x6C49;&#x8BFA;&#x5854;&#x5C0F;&#x6E38;&#x620F;&#xFF0C;&#x53EF;&#x89C6;&#x5316;</p>
<a id="more"></a>
<h1>Lab 3: Tower of Hanoi</h1>
<p>In Lab 3, you are required to design and implement a game: Tower of Hanoi.</p>
<h2 id="0-The-puzzle">0 The puzzle</h2>
<p>The Tower of Hanoi is a famous mathematical puzzle. It consists of three rods and a number of<br>
disks of different sizes. Initially, all disks are in the first rod in ascending order of size (i.e., the<br>
smallest is at the top). The objective of the puzzle is to move the entire stack to another rod,<br>
obeying the following simple rules:</p>
<ol>
<li>Only one disk can be moved at a time.</li>
<li>Each move consists of taking the upper disk from one of the stacks and placing it on top of<br>
another stack or on an empty rod.</li>
<li>No larger disk may be placed on top of a smaller disk.</li>
</ol>
<p>The classical way to solve the puzzle is recursion. The algorithm could be described as the<br>
following pseudocode:</p>
<h2 id="1-Lab-Description">1 Lab Description</h2>
<p>Here are some concepts that you need to know first.</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Canvas: The UI of the game.</span><br><span class="line">Rod: There are 3 rods (numbered 1, 2 3) in the canvas. Disks are pushed and popped among</span><br><span class="line">them. The source rod is 1 and the target rod is 2. Rod 3 acts as a temporary rod.</span><br><span class="line">Disk: Each disk is of different sizes. In the beginning, they are all pushed into Rod 1 in</span><br><span class="line">ascending order of size.</span><br></pre></td></tr></table></figure>
<p>You should implement the Hanoi game program with the following functionality:</p>
<ol>
<li><strong>Intial Phase:</strong> When the program starts, it firstly asks the player for the number of disks. The<br>
input should a integer in <strong>[1, 5]</strong>. If input is Q , quit the game. Other invalid input should be<br>
ignored.</li>
<li><strong>Normal Mode:</strong> Then, print the canvas in the console, and the game starts. The program<br>
continuously asks for commands until the player wins. The canvas will be printed after each<br>
move. Command format: from to. Invalid input should be ignored.</li>
<li><strong>Auto Play Mode:</strong> If the game receives command 0 0. Auto-play mode will be activated. The<br>
game will automatically continue without player&#x2019;s commands. The canvas, as well as the</li>
</ol>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">function hanoi(n, A, B, C) { // move n disks from rod A to rod B, use rod C as</span><br><span class="line">a buffer</span><br><span class="line">hanoi(n - 1 , A, C, B);</span><br><span class="line">move(n, A, B); // move the nth disk from rod A to rod B</span><br><span class="line">haoni(n - 1 , C, B, A);</span><br><span class="line">}</span><br></pre></td></tr></table></figure>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">auto-generated command, will be printed after each move.</span><br></pre></td></tr></table></figure>
<h3 id="Requirements">Requirements</h3>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">You have to implement the game using Object-Oriented programming. Hope the following</span><br><span class="line">materials will help you if you&apos;re not familiar with OOP.</span><br><span class="line">Object Oriented Design</span><br><span class="line">Object Oriented Programming in C++</span><br><span class="line">Containers in STL(std::vector, std::stack, std::list, std::queue) are NOT allowed</span><br><span class="line">to use. Please implement your own Stack or Queue if needed.</span><br></pre></td></tr></table></figure>
<h2 id="2-Guidance">2 Guidance</h2>
<h3 id="2-1-Drawing-the-Canvas">2.1 Drawing the Canvas</h3>
<p>We have offered you a file, termio.h. It might be helpful for you to deal with the canvas printing</p>
<p>work.</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">CANVAS_WIDTH and CANVAS_HEIGHT: the width and height of the canvas.</span><br><span class="line">Clear() helps you clear the screen. Using it before Draw() will improve the user</span><br><span class="line">experience.</span><br><span class="line">Draw() helps you draw the buffer to console.</span><br><span class="line">ResetBuffer() fills the buffer with spaces.</span><br></pre></td></tr></table></figure>
<h3 id="2-2-Auto-Play-Mode">2.2 Auto Play Mode</h3>
<p>During the game, players may enter auto-play mode in any state. After entering into auto-play<br>
mode, you need to do two things.</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Restore to the beginning state (simple idea: use a stack to log the player&apos;s commands and</span><br><span class="line">undo these commands when entering auto-play mode).</span><br><span class="line">Auto-play the game from the beginning state.</span><br></pre></td></tr></table></figure>
<h3 id="2-3-Output-format">2.3 Output format</h3>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">For the sake of simplicity, the disk is represented by *.</span><br><span class="line">The number of * that you should draw is calculated by 2* disk_size + 1. For</span><br><span class="line">example, if there are five disks in rod1, then the number of * is 3, 5, 7, 9, 11. The</span><br><span class="line">middle * is vertical aligned with the rod.</span><br><span class="line">You should draw disks from the bottom of the rod. The two examples below show the</span><br><span class="line">canvas when there are 5, 3 disks at the beginning.</span><br><span class="line">The position of the rods should remain unchanged regardless of number of disks.</span><br><span class="line">We have defined CANVAS_WIDTH and CANVAS_HEIGHT for you, you should not change</span><br><span class="line">the value.</span><br></pre></td></tr></table></figure>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Upon wining the game (either from normal mode or auto-play mode), first print</span><br><span class="line">&quot;Congratulations! You win!&quot;, and then start a new round of game.</span><br><span class="line">std::cout &lt;&lt; &quot;Congratulations! You win!&quot; &lt;&lt; std::endl;</span><br><span class="line">std::cout &lt;&lt; &quot;How many disks do you want? (1 ~ 5)&quot; &lt;&lt; std::endl;</span><br><span class="line">About other output formats, please see the example below.</span><br></pre></td></tr></table></figure>
<h2 id="3-Example">3 Example</h2>
<h3 id="3-1-Initial-Phase">3.1 Initial Phase</h3>
<h3 id="3-2-Normal-Mode">3.2 Normal Mode</h3>
<p>As we can see, when we input 1 3 for the first time, the top disk of Rod 1 is popped and pushed<br>
to Rod 3.</p>
<p>Then we give an ilegal command 1 3 (since it violate the rule: No larger disk may be placed on</p>
<p>top of a smaller disk.), it will be ignored, so the previous canvas is printed.</p>
<h3 id="3-3-Auto-Play-Mode">3.3 Auto Play Mode</h3>
<p>Then we tried the auto-play mode by giving the command 0 0. As we can see, the program</p>
<p>executes automatically from the begining state until the player wins.</p>
<h2 id="4-Submission">4 Submission</h2>
<p>Compress your source code into a 7z file, and rename it to lab3-{your studentid}.7z</p>
<p>Upload it to canvas.</p>
<p>Feel free to ask teaching assistants if you have any questions.</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">How many disks do you want? (1 ~ 5)</span><br><span class="line">Q // quit the game now</span><br></pre></td></tr></table></figure>
<h3 id="solution">solution</h3>
<h4 id="hanoitower-h">hanoitower.h</h4>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">pragma</span> once</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&quot;termio.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&quot;myStack.h&quot;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">hanoitower</span></span></span><br><span class="line"><span class="class">{</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">	<span class="keyword">int</span> num;</span><br><span class="line">	Stack&lt;<span class="built_in">pair</span>&lt;<span class="keyword">int</span>,<span class="keyword">int</span>&gt;&gt;step;</span><br><span class="line">	hanoitower(){}</span><br><span class="line">	~hanoitower(){};</span><br><span class="line">	<span class="function"><span class="keyword">void</span> <span class="title">write_hi</span><span class="params">()</span></span></span><br><span class="line"><span class="function">	</span>{</span><br><span class="line">	    <span class="keyword">int</span> width=Termio::CANVAS_WIDTH;</span><br><span class="line">	    <span class="comment">//buttom</span></span><br><span class="line">	    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt;= width; ++i)</span><br><span class="line">	    {</span><br><span class="line">	        <span class="comment">/* code */</span></span><br><span class="line">	         Termio::buffer[<span class="number">10</span>][i] =<span class="string">&apos;-&apos;</span>;</span><br><span class="line">	    }</span><br><span class="line">	    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">5</span>;i&lt;=width;i+=<span class="number">15</span>)</span><br><span class="line">	    {</span><br><span class="line">	        <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">0</span>;j&lt;Termio::CANVAS_HEIGHT;j+=<span class="number">2</span>)</span><br><span class="line">	             {Termio::buffer[j][i] =<span class="string">&apos;|&apos;</span>;}</span><br><span class="line">	          </span><br><span class="line">	    }</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">	    <span class="comment">//plate</span></span><br><span class="line">	    <span class="keyword">int</span> j=<span class="number">11</span>;</span><br><span class="line">	    <span class="keyword">for</span>(<span class="keyword">int</span> i=num;i&gt;=<span class="number">0</span>;i--)</span><br><span class="line">	    {</span><br><span class="line">			<span class="keyword">for</span>(<span class="keyword">int</span> k=<span class="number">5</span>-i<span class="number">-1</span>;k&lt;=<span class="number">5</span>+i+<span class="number">1</span>;k++)</span><br><span class="line">				Termio::buffer[j][k]=<span class="string">&apos;*&apos;</span>;</span><br><span class="line">			j-=<span class="number">2</span>;</span><br><span class="line">	    }	</span><br><span class="line">	    Termio::Draw();</span><br><span class="line"></span><br><span class="line">	}</span><br><span class="line">	<span class="function"><span class="keyword">void</span> <span class="title">undo</span><span class="params">()</span><span class="comment">//&#x6D4B;&#x7ED8;&#x64CD;&#x4F5C;</span></span></span><br><span class="line"><span class="function">	</span>{</span><br><span class="line">		<span class="keyword">while</span>(!step.empty())</span><br><span class="line">		{</span><br><span class="line">			<span class="built_in">pair</span>&lt;<span class="keyword">int</span>,<span class="keyword">int</span>&gt;a=step.top();</span><br><span class="line">			step.pop();</span><br><span class="line">			move(a.first,a.second);</span><br><span class="line">			Termio::Draw();</span><br><span class="line">		}</span><br><span class="line">	}</span><br><span class="line">	<span class="function"><span class="keyword">int</span> <span class="title">init</span><span class="params">()</span></span></span><br><span class="line"><span class="function">	</span>{</span><br><span class="line">		<span class="comment">//Termio::Clear();</span></span><br><span class="line">		Termio::ResetBuffer();</span><br><span class="line">		step.clean();</span><br><span class="line">		<span class="built_in">std</span>::<span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;How many disks do you want? (1 ~ 5)&quot;</span> &lt;&lt; <span class="built_in">std</span>::<span class="built_in">endl</span>;</span><br><span class="line">	    <span class="built_in">cin</span>&gt;&gt;num;</span><br><span class="line">	    <span class="keyword">return</span> num;</span><br><span class="line">	}</span><br><span class="line">	<span class="function"><span class="keyword">bool</span> <span class="title">check</span><span class="params">(<span class="keyword">int</span> a,<span class="keyword">int</span> b)</span><span class="comment">//check if ilegal command</span></span></span><br><span class="line"><span class="function">	</span>{</span><br><span class="line">		<span class="keyword">bool</span> flag=<span class="number">1</span>;</span><br><span class="line">		<span class="keyword">int</span> begin=<span class="number">1</span>;</span><br><span class="line"></span><br><span class="line">		<span class="comment">/**a**/</span></span><br><span class="line">		<span class="keyword">while</span>(Termio::buffer[begin][<span class="number">5</span>+(a<span class="number">-1</span>)*<span class="number">15</span>]!=<span class="string">&apos;*&apos;</span>)begin+=<span class="number">2</span>;</span><br><span class="line">		<span class="keyword">int</span> sizea=<span class="number">-1</span>,start=<span class="number">5</span>+(a<span class="number">-1</span>)*<span class="number">15</span>;</span><br><span class="line">		<span class="keyword">while</span>(Termio::buffer[begin][start]==<span class="string">&apos;*&apos;</span>){sizea++;start--;}</span><br><span class="line"></span><br><span class="line">		<span class="comment">/**b**/</span></span><br><span class="line">		begin=<span class="number">9</span>;</span><br><span class="line">		<span class="keyword">while</span>(Termio::buffer[begin][<span class="number">5</span>+(b<span class="number">-1</span>)*<span class="number">15</span>]!=<span class="string">&apos; &apos;</span>){begin-=<span class="number">2</span>;}</span><br><span class="line">		begin+=<span class="number">2</span>;</span><br><span class="line">		<span class="keyword">int</span> sizeb=<span class="number">-1</span>;</span><br><span class="line">		start=<span class="number">5</span>+(b<span class="number">-1</span>)*<span class="number">15</span>;</span><br><span class="line">		<span class="keyword">while</span>(Termio::buffer[begin][start]==<span class="string">&apos;*&apos;</span>){sizeb++;start--;}</span><br><span class="line"></span><br><span class="line">		<span class="comment">//cout&lt;&lt;&quot;sizea&quot;&lt;&lt;sizea&lt;&lt;&quot; &quot;&lt;&lt;&quot;sizeb&quot;&lt;&lt;sizeb&lt;&lt;endl;</span></span><br><span class="line">		<span class="keyword">if</span>(sizeb&lt;sizea&amp;&amp;sizeb!=<span class="number">-1</span>)flag=<span class="number">0</span>;</span><br><span class="line">		<span class="keyword">return</span> flag;</span><br><span class="line">	}</span><br><span class="line">	<span class="function"><span class="keyword">bool</span> <span class="title">check_finish</span><span class="params">()</span><span class="comment">//&#x662F;&#x5426;&#x6210;&#x529F;</span></span></span><br><span class="line"><span class="function">	</span>{</span><br><span class="line">		<span class="keyword">bool</span> flag=<span class="number">0</span>;</span><br><span class="line">		<span class="keyword">int</span> len=<span class="number">0</span>,begin=<span class="number">9</span>;</span><br><span class="line">		<span class="keyword">while</span>(Termio::buffer[begin][<span class="number">5</span>+<span class="number">15</span>]!=<span class="string">&apos; &apos;</span>&amp;&amp;begin&gt;=<span class="number">0</span>){begin-=<span class="number">2</span>;len++;}</span><br><span class="line">		<span class="keyword">if</span>(len==num)</span><br><span class="line">			flag=<span class="number">1</span>;</span><br><span class="line">		<span class="keyword">return</span> flag;</span><br><span class="line">	}</span><br><span class="line">	<span class="function"><span class="keyword">void</span> <span class="title">move</span><span class="params">(<span class="keyword">int</span> a,<span class="keyword">int</span> b)</span></span></span><br><span class="line"><span class="function">	</span>{</span><br><span class="line">		<span class="keyword">if</span>(check(a,b))</span><br><span class="line">		{</span><br><span class="line">			<span class="keyword">int</span> begin=<span class="number">1</span>;</span><br><span class="line"></span><br><span class="line">			<span class="comment">/**a**/</span></span><br><span class="line">			<span class="keyword">while</span>(Termio::buffer[begin][<span class="number">5</span>+(a<span class="number">-1</span>)*<span class="number">15</span>]!=<span class="string">&apos;*&apos;</span>)begin+=<span class="number">2</span>;</span><br><span class="line">			<span class="keyword">int</span> size=<span class="number">-1</span>,start=<span class="number">5</span>+(a<span class="number">-1</span>)*<span class="number">15</span>;</span><br><span class="line">			<span class="keyword">while</span>(Termio::buffer[begin][start]==<span class="string">&apos;*&apos;</span>){Termio::buffer[begin][start]=<span class="string">&apos; &apos;</span>;size++;start--;}</span><br><span class="line">			start=<span class="number">5</span>+(a<span class="number">-1</span>)*<span class="number">15</span>+<span class="number">1</span>;</span><br><span class="line">			<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;size;i++){Termio::buffer[begin][start]=<span class="string">&apos; &apos;</span>;start++;}</span><br><span class="line"></span><br><span class="line">			<span class="comment">/**b**/</span></span><br><span class="line">			begin=<span class="number">9</span>;</span><br><span class="line">			<span class="keyword">while</span>(Termio::buffer[begin][<span class="number">5</span>+(b<span class="number">-1</span>)*<span class="number">15</span>]!=<span class="string">&apos; &apos;</span>){begin-=<span class="number">2</span>;}</span><br><span class="line">			<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">5</span>+(b<span class="number">-1</span>)*<span class="number">15</span>-size;i&lt;=<span class="number">5</span>+(b<span class="number">-1</span>)*<span class="number">15</span>+size;++i){Termio::buffer[begin][i]=<span class="string">&apos;*&apos;</span>;}</span><br><span class="line">		}</span><br><span class="line">	}</span><br><span class="line">	<span class="function"><span class="keyword">void</span> <span class="title">operation</span><span class="params">()</span></span></span><br><span class="line"><span class="function">	</span>{</span><br><span class="line">		 <span class="built_in">std</span>::<span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;Move a disk. Format: x y&quot;</span> &lt;&lt; <span class="built_in">std</span>::<span class="built_in">endl</span>;</span><br><span class="line">		 <span class="keyword">int</span> x,y;</span><br><span class="line">		 <span class="built_in">std</span>::<span class="built_in">cin</span>&gt;&gt;x&gt;&gt;y;</span><br><span class="line">		 <span class="keyword">if</span>(x==<span class="number">0</span>&amp;&amp;y==<span class="number">0</span>)</span><br><span class="line">		 	{autohanoi();<span class="keyword">return</span>;}</span><br><span class="line">		 <span class="keyword">else</span></span><br><span class="line">		 {</span><br><span class="line">		 	<span class="built_in">pair</span>&lt;<span class="keyword">int</span>,<span class="keyword">int</span>&gt; a={y,x};</span><br><span class="line">		 	step.push(a);</span><br><span class="line">		 	move(x,y);</span><br><span class="line">		 	Termio::Draw();</span><br><span class="line">		 	<span class="keyword">if</span>(!check_finish())</span><br><span class="line">		 		operation();</span><br><span class="line">		 	<span class="keyword">else</span></span><br><span class="line">		 		<span class="keyword">return</span> ;</span><br><span class="line">		 }</span><br><span class="line">	}</span><br><span class="line">	<span class="function"><span class="keyword">void</span> <span class="title">autohanoi</span><span class="params">()</span>  </span></span><br><span class="line"><span class="function">	</span>{                                                                                                                                                         </span><br><span class="line">		undo();</span><br><span class="line">	    Stack&lt;hanoiunrec&gt; s;    </span><br><span class="line">	    s.push(hanoiunrec(num, <span class="number">1</span>, <span class="number">3</span>, <span class="number">2</span>));     </span><br><span class="line">	    <span class="keyword">while</span> (!s.empty())         </span><br><span class="line">	    {  </span><br><span class="line">	        hanoiunrec q = s.top();    </span><br><span class="line">	        s.pop();                </span><br><span class="line">	       	<span class="keyword">int</span> n = q._n;           </span><br><span class="line">	        <span class="keyword">int</span> x = q._x;  </span><br><span class="line">	        <span class="keyword">int</span> y = q._y;  </span><br><span class="line">	        <span class="keyword">int</span> z = q._z;  </span><br><span class="line">	        <span class="keyword">if</span> (n == <span class="number">1</span>)             </span><br><span class="line">	        {  </span><br><span class="line">	            <span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;Auto moving &quot;</span> &lt;&lt; q._x &lt;&lt; <span class="string">&quot;-&gt;&quot;</span> &lt;&lt; q._z &lt;&lt; <span class="built_in">endl</span>;  </span><br><span class="line">	            move(q._x,q._z);</span><br><span class="line">	            Termio::Draw();</span><br><span class="line">	        }  </span><br><span class="line">	        <span class="keyword">else</span>  </span><br><span class="line">	        {  </span><br><span class="line">	            s.push(hanoiunrec(n - <span class="number">1</span>, y, x, z));      </span><br><span class="line">	            s.push(hanoiunrec(<span class="number">1</span>, x, y, z));  </span><br><span class="line">	            s.push(hanoiunrec(n - <span class="number">1</span>, x, z, y));  </span><br><span class="line">	        }  </span><br><span class="line">	    }   </span><br><span class="line">	}</span><br><span class="line"></span><br><span class="line">};</span><br></pre></td></tr></table></figure>
<h4 id="myStack">myStack</h4>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">pragma</span> once</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&quot;hanoiunrec.h&quot;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">template</span> &lt;<span class="class"><span class="keyword">class</span> <span class="title">T</span>&gt;</span></span><br><span class="line"><span class="class"><span class="title">class</span> <span class="title">Stack</span>{</span></span><br><span class="line"><span class="keyword">private</span>:</span><br><span class="line">     <span class="class"><span class="keyword">struct</span> <span class="title">Node</span> {</span></span><br><span class="line">       T item;</span><br><span class="line">      Node* next;</span><br><span class="line">     };</span><br><span class="line">     Node *first;</span><br><span class="line">     <span class="keyword">int</span> count;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">     Stack() {count = <span class="number">0</span>;}</span><br><span class="line">     <span class="function"><span class="keyword">void</span> <span class="title">push</span><span class="params">(T n)</span> </span>{</span><br><span class="line">      count++;</span><br><span class="line">      Node *oldfirst = first;</span><br><span class="line">      first = <span class="keyword">new</span> Node();</span><br><span class="line">      first-&gt;item = n;</span><br><span class="line">      first-&gt;next = oldfirst;</span><br><span class="line">     }</span><br><span class="line">     <span class="function"><span class="keyword">void</span> <span class="title">pop</span><span class="params">()</span> </span>{</span><br><span class="line">      <span class="keyword">if</span> (empty()) <span class="keyword">return</span>;</span><br><span class="line">      count--;</span><br><span class="line">      first = first-&gt;next;</span><br><span class="line">     }</span><br><span class="line">     <span class="function">T <span class="title">top</span><span class="params">()</span> </span>{</span><br><span class="line">      <span class="keyword">return</span> first-&gt;item;</span><br><span class="line">     }</span><br><span class="line">     <span class="function"><span class="keyword">bool</span> <span class="title">empty</span><span class="params">()</span> </span>{</span><br><span class="line">      <span class="keyword">return</span> !count;</span><br><span class="line">     }</span><br><span class="line">     <span class="function"><span class="keyword">int</span> <span class="title">getCount</span><span class="params">()</span></span></span><br><span class="line"><span class="function">     </span>{</span><br><span class="line">      <span class="keyword">return</span> count;</span><br><span class="line">     }</span><br><span class="line">     <span class="function"><span class="keyword">void</span> <span class="title">clean</span><span class="params">()</span></span></span><br><span class="line"><span class="function">     </span>{</span><br><span class="line">       <span class="keyword">while</span>(!empty())</span><br><span class="line">        pop();</span><br><span class="line">     }</span><br><span class="line">};</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<h4 id="hanoiunrec">hanoiunrec</h4>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">pragma</span> once</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">hanoiunrec</span></span></span><br><span class="line"><span class="class"> {</span></span><br><span class="line"> <span class="keyword">public</span>:</span><br><span class="line">	 hanoiunrec() {};</span><br><span class="line">    hanoiunrec(<span class="keyword">int</span> n, <span class="keyword">int</span> a, <span class="keyword">int</span> b, <span class="keyword">int</span> c):_n(n), _x(a), _y(b), _z(c){}          <span class="comment">//&#x6784;&#x9020;&#x51FD;&#x6570; </span></span><br><span class="line">    <span class="keyword">int</span> _n;         </span><br><span class="line">    <span class="keyword">int</span> _x, _y, _z;     </span><br><span class="line"> 	</span><br><span class="line"> };   <span class="comment">//&#x7ED3;&#x6784;&#x4F53;&#xFF0C;&#x8868;&#x793A;&#x6C49;&#x8BFA;&#x5854;&#x7684;&#x4FE1;&#x606F;</span></span><br></pre></td></tr></table></figure>
<h4 id="termio">termio</h4>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">pragma</span> once</span></span><br><span class="line"><span class="comment">/* some code from Libconio 1.0 (C) 2004 FSL A.C. */</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">ifdef</span> _WIN32</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;conio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">clrscr</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">    system(<span class="string">&quot;cls&quot;</span>);</span><br><span class="line">}</span><br><span class="line"><span class="meta">#<span class="meta-keyword">else</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;termios.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ESC 033 <span class="comment">/* Escape char */</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">static</span> <span class="keyword">int</span> <span class="title">getch</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">    <span class="class"><span class="keyword">struct</span> <span class="title">termios</span> <span class="title">t</span>;</span></span><br><span class="line">    <span class="keyword">int</span> c;</span><br><span class="line"></span><br><span class="line">    tcgetattr(<span class="number">0</span>, &amp;t);</span><br><span class="line">    t.c_lflag &amp;= ~ECHO + ~ICANON;</span><br><span class="line">    tcsetattr(<span class="number">0</span>, TCSANOW, &amp;t);</span><br><span class="line">    fflush(<span class="built_in">stdout</span>);</span><br><span class="line">    c = getchar();</span><br><span class="line">    t.c_lflag |= ICANON + ECHO;</span><br><span class="line">    tcsetattr(<span class="number">0</span>, TCSANOW, &amp;t);</span><br><span class="line">    <span class="keyword">return</span> c;</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">clrscr</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%c[2J&quot;</span>, ESC);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%c[%d;%dH&quot;</span>, ESC, <span class="number">0</span>, <span class="number">0</span>);</span><br><span class="line">}</span><br><span class="line"><span class="meta">#<span class="meta-keyword">endif</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Termio</span></span></span><br><span class="line"><span class="class">{</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="comment">// donot change the width and height</span></span><br><span class="line">    <span class="keyword">static</span> <span class="keyword">const</span> <span class="keyword">int</span> CANVAS_WIDTH = <span class="number">41</span>;</span><br><span class="line">    <span class="keyword">static</span> <span class="keyword">const</span> <span class="keyword">int</span> CANVAS_HEIGHT = <span class="number">11</span>;</span><br><span class="line">    <span class="keyword">static</span> <span class="keyword">char</span> buffer[CANVAS_HEIGHT][CANVAS_WIDTH + <span class="number">1</span>];</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">static</span> <span class="keyword">char</span> <span class="title">GetChar</span><span class="params">()</span> </span>{</span><br><span class="line">        <span class="keyword">return</span> getch();</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">Clear</span><span class="params">()</span> </span>{</span><br><span class="line">        clrscr();</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">Draw</span><span class="params">()</span> </span>{</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; CANVAS_HEIGHT; i++)</span><br><span class="line">        {</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">0</span>;j&lt;CANVAS_WIDTH;j++)</span><br><span class="line">                <span class="built_in">cout</span> &lt;&lt; buffer[i][j] ;</span><br><span class="line">            <span class="built_in">cout</span>&lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">        }</span><br><span class="line">        <span class="built_in">cout</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">ResetBuffer</span><span class="params">()</span> </span>{</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; CANVAS_HEIGHT; i++)</span><br><span class="line">            <span class="built_in">memset</span>(buffer[i], <span class="string">&apos; &apos;</span>, CANVAS_WIDTH);</span><br><span class="line">    }</span><br><span class="line">};</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<h4 id="hanoi">hanoi</h4>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&quot;termio.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&quot;myStack.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&quot;hanoitower.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// Do not delete the following line</span></span><br><span class="line"><span class="keyword">char</span> Termio::buffer[Termio::CANVAS_HEIGHT][Termio::CANVAS_WIDTH + <span class="number">1</span>];</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>{</span><br><span class="line">    hanoitower h;</span><br><span class="line">    <span class="keyword">while</span>(<span class="number">1</span>)</span><br><span class="line">    {</span><br><span class="line">        <span class="keyword">int</span> n=h.init();</span><br><span class="line">        <span class="keyword">if</span>(n==<span class="number">0</span>)<span class="keyword">break</span>;</span><br><span class="line">        h.write_hi();</span><br><span class="line">        h.operation();</span><br><span class="line">         <span class="built_in">std</span>::<span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;Congratulations! You win!&quot;</span> &lt;&lt; <span class="built_in">std</span>::<span class="built_in">endl</span>; </span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">}</span><br><span class="line"></span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>外接</category>
      </categories>
  </entry>
  <entry>
    <title>洛谷-P1216-number triangles</title>
    <url>/2020/10/26/%E6%B4%9B%E8%B0%B7-P1216-number-triangles/</url>
    <content><![CDATA[<h2 id="description">description</h2>
<p>&#x89C2;&#x5BDF;&#x4E0B;&#x9762;&#x7684;&#x6570;&#x5B57;&#x91D1;&#x5B57;&#x5854;&#x3002;</p>
<p>&#x5199;&#x4E00;&#x4E2A;&#x7A0B;&#x5E8F;&#x6765;&#x67E5;&#x627E;&#x4ECE;&#x6700;&#x9AD8;&#x70B9;&#x5230;&#x5E95;&#x90E8;&#x4EFB;&#x610F;&#x5904;&#x7ED3;&#x675F;&#x7684;&#x8DEF;&#x5F84;&#xFF0C;&#x4F7F;&#x8DEF;&#x5F84;&#x7ECF;&#x8FC7;&#x6570;&#x5B57;&#x7684;&#x548C;&#x6700;&#x5927;&#x3002;&#x6BCF;&#x4E00;&#x6B65;&#x53EF;&#x4EE5;&#x8D70;&#x5230;&#x5DE6;&#x4E0B;&#x65B9;&#x7684;&#x70B9;&#x4E5F;&#x53EF;&#x4EE5;&#x5230;&#x8FBE;&#x53F3;&#x4E0B;&#x65B9;&#x7684;&#x70B9;&#x3002;</p>
<a id="more"></a>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line">        <span class="number">7</span> </span><br><span class="line">      <span class="number">3</span>   <span class="number">8</span> </span><br><span class="line">    <span class="number">8</span>   <span class="number">1</span>   <span class="number">0</span> </span><br><span class="line">  <span class="number">2</span>   <span class="number">7</span>   <span class="number">4</span>   <span class="number">4</span> </span><br><span class="line"><span class="number">4</span>   <span class="number">5</span>   <span class="number">2</span>   <span class="number">6</span>   <span class="number">5</span> </span><br></pre></td></tr></table></figure>
<p>&#x5728;&#x4E0A;&#x9762;&#x7684;&#x6837;&#x4F8B;&#x4E2D;,&#x4ECE; 7&#x2192;3&#x2192;8&#x2192;7&#x2192;5 &#x7684;&#x8DEF;&#x5F84;&#x4EA7;&#x751F;&#x4E86;&#x6700;&#x5927;</p>
<h2 id="input">input</h2>
<p>&#x7B2C;&#x4E00;&#x4E2A;&#x884C;&#x4E00;&#x4E2A;&#x6B63;&#x6574;&#x6570; <em>r</em> ,&#x8868;&#x793A;&#x884C;&#x7684;&#x6570;&#x76EE;&#x3002;</p>
<p>&#x540E;&#x9762;&#x6BCF;&#x884C;&#x4E3A;&#x8FD9;&#x4E2A;&#x6570;&#x5B57;&#x91D1;&#x5B57;&#x5854;&#x7279;&#x5B9A;&#x884C;&#x5305;&#x542B;&#x7684;&#x6574;&#x6570;&#x3002;</p>
<h2 id="output">output</h2>
<p>&#x5355;&#x72EC;&#x7684;&#x4E00;&#x884C;,&#x5305;&#x542B;&#x90A3;&#x4E2A;&#x53EF;&#x80FD;&#x5F97;&#x5230;&#x7684;&#x6700;&#x5927;&#x7684;&#x548C;&#x3002;</p>
<h2 id="example">example</h2>
<p><strong>&#x8F93;&#x5165; #1</strong>&#x590D;&#x5236;</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">5</span><br><span class="line">7</span><br><span class="line">3 8</span><br><span class="line">8 1 0</span><br><span class="line">2 7 4 4</span><br><span class="line">4 5 2 6 5 </span><br></pre></td></tr></table></figure>
<p><strong>&#x8F93;&#x51FA; #1</strong>&#x590D;&#x5236;</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">30</span><br></pre></td></tr></table></figure>
<h2 id="hint">hint</h2>
<p>&#x3010;&#x6570;&#x636E;&#x8303;&#x56F4;&#x3011;<br>
&#x5BF9;&#x4E8E;100% &#x7684;&#x6570;&#x636E;&#xFF0C;1&#x2264;<em>r</em>&#x2264;1000&#xFF0C;&#x6240;&#x6709;&#x8F93;&#x5165;&#x5728; [0,100][0,100] &#x8303;&#x56F4;&#x5185;&#x3002;</p>
<p>&#x9898;&#x76EE;&#x7FFB;&#x8BD1;&#x6765;&#x81EA;NOCOW&#x3002;</p>
<p>USACO Training Section 1.5</p>
<p>IOI1994 Day1T1</p>
<h2 id="solution">solution</h2>
<p><code>&#x7B80;&#x5355;dp</code></p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> maxn 1005</span></span><br><span class="line"><span class="keyword">int</span> n;</span><br><span class="line"><span class="keyword">int</span> maze[maxn][maxn];</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">int</span> argc, <span class="keyword">char</span> <span class="keyword">const</span> *argv[])</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">	<span class="built_in">cin</span>&gt;&gt;n;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;n;i++)</span><br><span class="line">	{</span><br><span class="line">		<span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">0</span>;j&lt;=i;++j)</span><br><span class="line">		{</span><br><span class="line">			<span class="built_in">cin</span>&gt;&gt;maze[i][j];</span><br><span class="line">		}</span><br><span class="line">	}</span><br><span class="line">	<span class="keyword">if</span>(n==<span class="number">1</span>){<span class="built_in">cout</span>&lt;&lt;maze[<span class="number">0</span>][<span class="number">0</span>];<span class="keyword">return</span> <span class="number">0</span>;}</span><br><span class="line"></span><br><span class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=n<span class="number">-2</span>;i&gt;=<span class="number">0</span>;--i)</span><br><span class="line">		<span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">0</span>;j&lt;=i;j++)</span><br><span class="line">			maze[i][j]+=max(maze[i+<span class="number">1</span>][j],maze[i+<span class="number">1</span>][j+<span class="number">1</span>]);</span><br><span class="line">	<span class="built_in">cout</span>&lt;&lt;maze[<span class="number">0</span>][<span class="number">0</span>];</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">}</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>洛谷</category>
      </categories>
      <tags>
        <tag>dp</tag>
      </tags>
  </entry>
  <entry>
    <title>洛谷 P1434 滑雪</title>
    <url>/2020/10/25/%E6%B4%9B%E8%B0%B7-P1434-%E6%BB%91%E9%9B%AA/</url>
    <content><![CDATA[<h2 id="description">description</h2>
<p>Michael &#x559C;&#x6B22;&#x6ED1;&#x96EA;&#x3002;&#x8FD9;&#x5E76;&#x4E0D;&#x5947;&#x602A;&#xFF0C;&#x56E0;&#x4E3A;&#x6ED1;&#x96EA;&#x7684;&#x786E;&#x5F88;&#x523A;&#x6FC0;&#x3002;&#x53EF;&#x662F;&#x4E3A;&#x4E86;&#x83B7;&#x5F97;&#x901F;&#x5EA6;&#xFF0C;&#x6ED1;&#x7684;&#x533A;&#x57DF;&#x5FC5;&#x987B;&#x5411;&#x4E0B;&#x503E;&#x659C;&#xFF0C;&#x800C;&#x4E14;&#x5F53;&#x4F60;&#x6ED1;&#x5230;&#x5761;&#x5E95;&#xFF0C;&#x4F60;&#x4E0D;&#x5F97;&#x4E0D;&#x518D;&#x6B21;&#x8D70;&#x4E0A;&#x5761;&#x6216;&#x8005;&#x7B49;&#x5F85;&#x5347;&#x964D;&#x673A;&#x6765;&#x8F7D;&#x4F60;&#x3002;Michael &#x60F3;&#x77E5;&#x9053;&#x5728;&#x4E00;&#x4E2A;&#x533A;&#x57DF;&#x4E2D;&#x6700;&#x957F;&#x7684;&#x6ED1;&#x5761;&#x3002;&#x533A;&#x57DF;&#x7531;&#x4E00;&#x4E2A;&#x4E8C;&#x7EF4;&#x6570;&#x7EC4;&#x7ED9;&#x51FA;&#x3002;&#x6570;&#x7EC4;&#x7684;&#x6BCF;&#x4E2A;&#x6570;&#x5B57;&#x4EE3;&#x8868;&#x70B9;&#x7684;&#x9AD8;&#x5EA6;&#x3002;&#x4E0B;&#x9762;&#x662F;&#x4E00;&#x4E2A;&#x4F8B;&#x5B50;&#xFF1A;</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">1   2   3   4   5</span><br><span class="line">16  17  18  19  6</span><br><span class="line">15  24  25  20  7</span><br><span class="line">14  23  22  21  8</span><br><span class="line">13  12  11  10  9</span><br></pre></td></tr></table></figure>
<p>&#x4E00;&#x4E2A;&#x4EBA;&#x53EF;&#x4EE5;&#x4ECE;&#x67D0;&#x4E2A;&#x70B9;&#x6ED1;&#x5411;&#x4E0A;&#x4E0B;&#x5DE6;&#x53F3;&#x76F8;&#x90BB;&#x56DB;&#x4E2A;&#x70B9;&#x4E4B;&#x4E00;&#xFF0C;&#x5F53;&#x4E14;&#x4EC5;&#x5F53;&#x9AD8;&#x5EA6;&#x4F1A;&#x51CF;&#x5C0F;&#x3002;&#x5728;&#x4E0A;&#x9762;&#x7684;&#x4F8B;&#x5B50;&#x4E2D;&#xFF0C;&#x4E00;&#x6761;&#x53EF;&#x884C;&#x7684;&#x6ED1;&#x5761;&#x4E3A; 24&#xFF0D;17&#xFF0D;16&#xFF0D;11&#xFF08;&#x4ECE; 2424 &#x5F00;&#x59CB;&#xFF0C;&#x5728; 11 &#x7ED3;&#x675F;&#xFF09;&#x3002;&#x5F53;&#x7136; 25&#xFF0D;24&#xFF0D;23&#xFF0D;&#x2026;&#xFF0D;3&#xFF0D;2&#xFF0D;1 &#x66F4;&#x957F;&#x3002;&#x4E8B;&#x5B9E;&#x4E0A;&#xFF0C;&#x8FD9;&#x662F;&#x6700;&#x957F;&#x7684;&#x4E00;&#x6761;&#x3002;</p>
<a id="more"></a>
<h2 id="input">input</h2>
<p>&#x8F93;&#x5165;&#x7684;&#x7B2C;&#x4E00;&#x884C;&#x4E3A;&#x8868;&#x793A;&#x533A;&#x57DF;&#x7684;&#x4E8C;&#x7EF4;&#x6570;&#x7EC4;&#x7684;&#x884C;&#x6570; R<em>R</em> &#x548C;&#x5217;&#x6570; C<em>C</em>&#x3002;&#x4E0B;&#x9762;&#x662F; R<em>R</em> &#x884C;&#xFF0C;&#x6BCF;&#x884C;&#x6709; C<em>C</em> &#x4E2A;&#x6570;&#xFF0C;&#x4EE3;&#x8868;&#x9AD8;&#x5EA6;(&#x4E24;&#x4E2A;&#x6570;&#x5B57;&#x4E4B;&#x95F4;&#x7528; 11 &#x4E2A;&#x7A7A;&#x683C;&#x95F4;&#x9694;)&#x3002;</p>
<h2 id="output">output</h2>
<p>&#x8F93;&#x51FA;&#x533A;&#x57DF;&#x4E2D;&#x6700;&#x957F;&#x6ED1;&#x5761;&#x7684;&#x957F;&#x5EA6;&#x3002;</p>
<h2 id="example">example</h2>
<p><strong>&#x8F93;&#x5165; #1</strong>&#x590D;&#x5236;</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">5 5</span><br><span class="line">1 2 3 4 5</span><br><span class="line">16 17 18 19 6</span><br><span class="line">15 24 25 20 7</span><br><span class="line">14 23 22 21 8</span><br><span class="line">13 12 11 10 9</span><br></pre></td></tr></table></figure>
<p><strong>&#x8F93;&#x51FA; #1</strong>&#x590D;&#x5236;</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">25</span><br></pre></td></tr></table></figure>
<h2 id="hint">hint</h2>
<p>&#x5BF9;&#x4E8E; 100% &#x7684;&#x6570;&#x636E;&#xFF0C;1&lt;= R,<em>C</em>&#x2264;100&#x3002;</p>
<h2 id="solution">solution</h2>
<p>&#x8BB0;&#x5FC6;&#x5316;&#x641C;&#x7D22; dfs &#x91CD;&#x70B9;<code>return</code></p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> maxn 1005</span></span><br><span class="line"><span class="keyword">int</span> dp[maxn][maxn];</span><br><span class="line"><span class="keyword">int</span> maze[maxn][maxn];</span><br><span class="line"><span class="keyword">int</span> n,m,z;</span><br><span class="line"><span class="keyword">int</span> arr1[<span class="number">4</span>]={<span class="number">1</span>,<span class="number">0</span>,<span class="number">-1</span>,<span class="number">0</span>},arr2[<span class="number">4</span>]={<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">-1</span>};</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">check2</span><span class="params">(<span class="keyword">int</span> i,<span class="keyword">int</span> j)</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">	<span class="keyword">int</span> x=maze[i][j];</span><br><span class="line">	<span class="keyword">if</span>((i<span class="number">-1</span>)&gt;=<span class="number">0</span>&amp;&amp;maze[i<span class="number">-1</span>][j]&lt;x)<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">	<span class="keyword">if</span>((i+<span class="number">1</span>)&lt;n&amp;&amp;maze[i+<span class="number">1</span>][j]&lt;x)<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">	<span class="keyword">if</span>((j+<span class="number">1</span>)&lt;m&amp;&amp;maze[i][j+<span class="number">1</span>]&lt;x)<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">	<span class="keyword">if</span>((j<span class="number">-1</span>)&gt;=<span class="number">0</span>&amp;&amp;maze[i][j<span class="number">-1</span>]&lt;x)<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">	<span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">}</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">init</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;n;++i)</span><br><span class="line">		<span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">0</span>;j&lt;m;j++)</span><br><span class="line">			dp[i][j]=check2(i,j);</span><br><span class="line">}</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">dfs</span><span class="params">(<span class="keyword">int</span> i,<span class="keyword">int</span> j)</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">	<span class="comment">//cout&lt;&lt;i&lt;&lt;&quot; &quot;&lt;&lt;j&lt;&lt;&quot; &quot;&lt;&lt;dp[i][j]&lt;&lt;endl;</span></span><br><span class="line">	<span class="keyword">if</span>(dp[i][j]!=<span class="number">0</span>)<span class="keyword">return</span> dp[i][j];</span><br><span class="line">	<span class="keyword">int</span> ma=<span class="number">0</span>,q=<span class="number">0</span>;</span><br><span class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> k=<span class="number">0</span>;k&lt;<span class="number">4</span>;++k)</span><br><span class="line">	{</span><br><span class="line">		<span class="keyword">int</span> y=arr1[k],x=arr2[k];<span class="comment">//cout&lt;&lt;i+y&lt;&lt;&quot;d &quot;&lt;&lt;j+x&lt;&lt;endl;</span></span><br><span class="line">		<span class="keyword">if</span>(i+y&gt;=<span class="number">0</span>&amp;&amp;i+y&lt;n&amp;&amp;j+x&gt;=<span class="number">0</span>&amp;&amp;j+x&lt;m)</span><br><span class="line">		{</span><br><span class="line"></span><br><span class="line">			<span class="keyword">if</span>(maze[i+y][j+x]&lt;maze[i][j])</span><br><span class="line">			{</span><br><span class="line">				<span class="comment">//cout&lt;&lt;i+y&lt;&lt;&quot;d &quot;&lt;&lt;j+x&lt;&lt;&quot; &quot;&lt;&lt;dp[i+y][j+x]&lt;&lt;endl;</span></span><br><span class="line">				<span class="comment">//cout&lt;&lt;&quot;SSSS&quot;&lt;&lt;endl;</span></span><br><span class="line">				<span class="keyword">if</span>(dp[i+y][j+x]==<span class="number">0</span>)</span><br><span class="line">					q=dfs(i+y,j+x)+<span class="number">1</span>;</span><br><span class="line">				<span class="keyword">else</span></span><br><span class="line">					q=dp[i+y][j+x]+<span class="number">1</span>;</span><br><span class="line">				<span class="comment">//cout&lt;&lt;q&lt;&lt;&quot;q&quot;&lt;&lt;endl;</span></span><br><span class="line">				ma=max(q,ma);</span><br><span class="line">			}</span><br><span class="line">		}</span><br><span class="line">	}</span><br><span class="line">	dp[i][j]=ma;</span><br><span class="line">	<span class="keyword">return</span> dp[i][j];</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">int</span> argc, <span class="keyword">char</span> <span class="keyword">const</span> *argv[])</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">	<span class="built_in">cin</span>&gt;&gt;n&gt;&gt;m;</span><br><span class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;n;++i)</span><br><span class="line">		<span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">0</span>;j&lt;m;++j)</span><br><span class="line">			<span class="built_in">cin</span>&gt;&gt;maze[i][j];</span><br><span class="line">	init();</span><br><span class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;n;++i)</span><br><span class="line">	{</span><br><span class="line">		<span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">0</span>;j&lt;m;++j)</span><br><span class="line">		{</span><br><span class="line">			z=max(z,dfs(i,j));</span><br><span class="line">		}</span><br><span class="line">		</span><br><span class="line">	}<span class="built_in">cout</span>&lt;&lt;z&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">}</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>洛谷</category>
      </categories>
      <tags>
        <tag>好题</tag>
        <tag>记忆化搜索</tag>
      </tags>
  </entry>
  <entry>
    <title>如何在pc端合并俩张照片</title>
    <url>/2020/10/23/%E5%A6%82%E4%BD%95%E5%9C%A8pc%E7%AB%AF%E5%90%88%E5%B9%B6%E4%BF%A9%E5%BC%A0%E7%85%A7%E7%89%87/</url>
    <content><![CDATA[<blockquote class="blockquote-center">
            <i class="fa fa-quote-left"></i>
            <p>&#x5982;&#x4F55;&#x5728;pc&#x7AEF;&#x5408;&#x5E76;&#x4FE9;&#x5F20;&#x7167;&#x7247;?</p>

            <i class="fa fa-quote-right"></i>
          </blockquote>
<a id="more"></a>
<p>1.&#x7528;<span class="label success">&#x201D;&#x753B;&#x56FE;&#x201C;</span>&#x8F6F;&#x4EF6;&#x6253;&#x5F00;&#x5176;&#x4E2D;&#x4E00;&#x5F20;&#x56FE;</p>
<p>2.&#x62C9;&#x51FA;&#x4E00;&#x7247;&#x7A7A;&#x767D;&#x533A;</p>
<p><img src="https://cdn.jsdelivr.net/gh/jun-yi-xiao/jun-yi-xiao.github.io/2020/10/23/%E5%A6%82%E4%BD%95%E5%9C%A8pc%E7%AB%AF%E5%90%88%E5%B9%B6%E4%BF%A9%E5%BC%A0%E7%85%A7%E7%89%87/1.png" alt="https://cdn.jsdelivr.net/gh/jun-yi-xiao/jun-yi-xiao.github.io/2020/10/23/%E5%A6%82%E4%BD%95%E5%9C%A8pc%E7%AB%AF%E5%90%88%E5%B9%B6%E4%BF%A9%E5%BC%A0%E7%85%A7%E7%89%87/1.png"></p>
<p>3.&#x70B9;&#x51FB; &#x7C98;&#x8D34;&#x2013;&gt;&#x7C98;&#x8D34;&#x6765;&#x6E90;&#x2013;&gt;&#x9009;&#x62E9;&#x7B2C;&#x4E8C;&#x5F20;&#x56FE;&#x7247;&#x2013;&gt;&#x8C03;&#x6574;&#x4F4D;&#x7F6E;</p>
<p><img src="https://cdn.jsdelivr.net/gh/jun-yi-xiao/jun-yi-xiao.github.io/2020/10/23/%E5%A6%82%E4%BD%95%E5%9C%A8pc%E7%AB%AF%E5%90%88%E5%B9%B6%E4%BF%A9%E5%BC%A0%E7%85%A7%E7%89%87/2.png" alt="2"></p>
<p>4.&#x4FDD;&#x5B58;</p>
]]></content>
      <categories>
        <category>pc-tips</category>
      </categories>
      <tags>
        <tag>tips</tag>
      </tags>
  </entry>
  <entry>
    <title>hexo next structure</title>
    <url>/2020/10/20/hexo-next-structure/</url>
    <content><![CDATA[<div class="note info">
            <p>structure of code</p>
          </div>
<a id="more"></a>
<p>hexo</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">.</span><br><span class="line">&#x251C;&#x2500;&#x2500; .deploy          #&#x90E8;&#x7F72;&#x6587;&#x4EF6;&#x5939;</span><br><span class="line">&#x251C;&#x2500;&#x2500; public           #html&#x6E90;&#x7801;&#xFF0C;hexo g&#x751F;&#x6210;</span><br><span class="line">&#x251C;&#x2500;&#x2500; scaffolds        #&#x6A21;&#x677F;</span><br><span class="line">&#x251C;&#x2500;&#x2500; scripts          #&#x6269;&#x5C55;&#x811A;&#x672C;</span><br><span class="line">&#x251C;&#x2500;&#x2500; source           #&#x6587;&#x7AE0;&#x6E90;&#x7801;</span><br><span class="line">|   &#x251C;&#x2500;&#x2500; _drafts      #&#x8349;&#x7A3F;</span><br><span class="line">|   &#x2514;&#x2500;&#x2500; _posts       #&#x6587;&#x7AE0;</span><br><span class="line">&#x251C;&#x2500;&#x2500; themes           #&#x4E3B;&#x9898;</span><br><span class="line">|   &#x251C;&#x2500;&#x2500; next         #NexT&#x4E3B;&#x9898;</span><br><span class="line">&#x251C;&#x2500;&#x2500; _config.yml      #&#x535A;&#x5BA2;&#x914D;&#x7F6E;</span><br><span class="line">&#x2514;&#x2500;&#x2500; package.json     #&#x5E94;&#x7528;&#x7A0B;&#x5E8F;&#x6570;&#x636E;</span><br></pre></td></tr></table></figure>
<p>next</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#x251C;&#x2500;&#x2500; .github                #github&#x4FE1;&#x606F;</span><br><span class="line">&#x251C;&#x2500;&#x2500; languages              #&#x591A;&#x8BED;&#x8A00;</span><br><span class="line">|   &#x251C;&#x2500;&#x2500; _en.yml            #&#x9ED8;&#x8BA4;&#x8BED;&#x8A00;</span><br><span class="line">|   &#x2514;&#x2500;&#x2500; zh-CN.yml          #&#x7B80;&#x4F53;&#x4E2D;&#x6587;</span><br><span class="line">|   &#x2514;&#x2500;&#x2500; zh-TW.yml          #&#x7E41;&#x4F53;&#x4E2D;&#x6587;</span><br><span class="line">&#x251C;&#x2500;&#x2500; layout                 #&#x5E03;&#x5C40;&#xFF0C;&#x6839;&#x76EE;&#x5F55;&#x4E0B;&#x7684;*.swig&#x6587;&#x4EF6;&#x662F;&#x5BF9;&#x4E3B;&#x9875;&#xFF0C;&#x5206;&#x9875;&#xFF0C;&#x5B58;&#x6863;&#x7B49;&#x7684;&#x63A7;&#x5236;</span><br><span class="line">|   &#x251C;&#x2500;&#x2500; _custom            #&#x53EF;&#x4EE5;&#x81EA;&#x5B9A;&#x4E49;&#x7684;&#x6A21;&#x677F;&#xFF0C;&#x8986;&#x76D6;&#x539F;&#x6709;&#x6A21;&#x677F;</span><br><span class="line">|   |   &#x251C;&#x2500;&#x2500; head.swig      #&#x6587;&#x9996;&#x6837;&#x5F0F;</span><br><span class="line">|   |   &#x251C;&#x2500;&#x2500; header.swig    #&#x5934;&#x90E8;&#x6837;&#x5F0F;</span><br><span class="line">|   |   &#x251C;&#x2500;&#x2500; sidebar.swig   #&#x4FA7;&#x8FB9;&#x680F;&#x6837;&#x5F0F;</span><br><span class="line">|   &#x251C;&#x2500;&#x2500; _macro             #&#x53EF;&#x4EE5;&#x81EA;&#x5B9A;&#x4E49;&#x7684;&#x6A21;&#x677F;&#xFF0C;&#x8986;&#x76D6;&#x539F;&#x6709;&#x6A21;&#x677F;</span><br><span class="line">|   |   &#x251C;&#x2500;&#x2500; post.swig      #&#x6587;&#x7AE0;&#x6A21;&#x677F;</span><br><span class="line">|   |   &#x251C;&#x2500;&#x2500; reward.swig    #&#x6253;&#x8D4F;&#x6A21;&#x677F;</span><br><span class="line">|   |   &#x251C;&#x2500;&#x2500; sidebar.swig   #&#x4FA7;&#x8FB9;&#x680F;&#x6A21;&#x677F;</span><br><span class="line">|   &#x251C;&#x2500;&#x2500; _partial           #&#x5C40;&#x90E8;&#x7684;&#x5E03;&#x5C40;</span><br><span class="line">|   |   &#x251C;&#x2500;&#x2500; head           #&#x5934;&#x90E8;&#x6A21;&#x677F;</span><br><span class="line">|   |   &#x251C;&#x2500;&#x2500; search         #&#x641C;&#x7D22;&#x6A21;&#x677F;</span><br><span class="line">|   |   &#x251C;&#x2500;&#x2500; share          #&#x5206;&#x4EAB;&#x6A21;&#x677F;</span><br><span class="line">|   &#x251C;&#x2500;&#x2500; _script            #&#x5C40;&#x90E8;&#x7684;&#x5E03;&#x5C40;</span><br><span class="line">|   &#x251C;&#x2500;&#x2500; _third-party       #&#x7B2C;&#x4E09;&#x65B9;&#x6A21;&#x677F;</span><br><span class="line">|   &#x251C;&#x2500;&#x2500; _layout.swig       #&#x4E3B;&#x9875;&#x9762;&#x6A21;&#x677F;</span><br><span class="line">|   &#x251C;&#x2500;&#x2500; index.swig         #&#x4E3B;&#x9875;&#x9762;&#x6A21;&#x677F;</span><br><span class="line">|   &#x251C;&#x2500;&#x2500; page               #&#x9875;&#x9762;&#x6A21;&#x677F;</span><br><span class="line">|   &#x2514;&#x2500;&#x2500; tag.swig           #tag&#x6A21;&#x677F;</span><br><span class="line">&#x251C;&#x2500;&#x2500; scripts                #script&#x6E90;&#x7801;</span><br><span class="line">|   &#x251C;&#x2500;&#x2500; tags               #tags&#x7684;script&#x6E90;&#x7801;</span><br><span class="line">|   &#x251C;&#x2500;&#x2500; marge.js           #&#x9875;&#x9762;&#x6A21;&#x677F;</span><br><span class="line">&#x251C;&#x2500;&#x2500; source                 #&#x6E90;&#x7801;</span><br><span class="line">|   &#x251C;&#x2500;&#x2500; css                #css&#x6E90;&#x7801;</span><br><span class="line">|   |   &#x251C;&#x2500;&#x2500; _common        #*.styl&#x57FA;&#x7840;css</span><br><span class="line">|   |   &#x251C;&#x2500;&#x2500; _custom        #*.styl&#x81EA;&#x5B9A;&#x4E49;&#x5C40;&#x90E8;css</span><br><span class="line">|   |   &#x2514;&#x2500;&#x2500; _mixins        #mixins&#x7684;css</span><br><span class="line">|   &#x251C;&#x2500;&#x2500; fonts              #&#x5B57;&#x4F53;</span><br><span class="line">|   &#x251C;&#x2500;&#x2500; images             #&#x56FE;&#x7247;</span><br><span class="line">|   &#x251C;&#x2500;&#x2500; js                 #javascript&#x6E90;&#x4EE3;&#x7801;</span><br><span class="line">|   &#x2514;&#x2500;&#x2500; lib                #&#x5F15;&#x7528;&#x5E93;</span><br><span class="line">&#x251C;&#x2500;&#x2500; _config.yml            #&#x4E3B;&#x9898;&#x914D;&#x7F6E;&#x6587;&#x4EF6;</span><br><span class="line">&#x2514;&#x2500;&#x2500; README.md              #&#x8BF4;&#x660E;&#x6587;&#x4EF6;</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>hexo</category>
      </categories>
      <tags>
        <tag>hexo</tag>
      </tags>
  </entry>
  <entry>
    <title>hexo tips</title>
    <url>/2020/10/20/hexo-tips/</url>
    <content><![CDATA[<div class="note info">
            <p>info some tips to use hexo next</p>
          </div>
<a id="more"></a>
<h3 id="categories">categories</h3>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">categories: </span><br><span class="line">	-hexo	</span><br><span class="line">    -tips</span><br><span class="line">//&#x8868;&#x793A;&#x5728;hexo&#x5206;&#x7C7B;&#x4E2D;&#x7684;tips&#x7D2B;&#x5206;&#x7C7B;</span><br></pre></td></tr></table></figure>
<h2 id="update">update</h2>
<p>&#x66F4;&#x65B0;&#x7684;&#x65F6;&#x5019;&#xFF0C;&#x4E0D;&#x9700;&#x8981;&#x91CD;&#x542F;&#x670D;&#x52A1;&#x5668;&#xFF0C;&#x53EA;&#x9700;&#x5237;&#x65B0;&#x9875;&#x9762;&#x5373;&#x53EF;&#x9884;&#x89C8;&#x6548;&#x679C;</p>
]]></content>
      <categories>
        <category>hexo</category>
        <category>tips</category>
      </categories>
      <tags>
        <tag>hexo</tag>
      </tags>
  </entry>
  <entry>
    <title>update blog</title>
    <url>/2020/10/19/update-log/</url>
    <content><![CDATA[<blockquote class="blockquote-center">
            <i class="fa fa-quote-left"></i>
            <p>&#x535A;&#x5BA2;&#x66F4;&#x65B0;&#x65E5;&#x5FD7;</p>

            <i class="fa fa-quote-right"></i>
          </blockquote>
<a id="more"></a>
<h1>encrypt blog</h1>
<p>install</p>
<p><code>npm install hexo-encrypt --save</code></p>
<p>config</p>
<p>&#x5728;&#x672B;&#x5C3E;&#x6DFB;&#x52A0;</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">encrypt: </span><br><span class="line">  enable: true</span><br><span class="line">  password: 123456</span><br></pre></td></tr></table></figure>
<span class="label success">updated by cozy 2020/10/18</span>
<h1>set width of content</h1>
<figure class="highlight stylus"><table><tr><td class="code"><pre><span class="line">D:\blog\themes\next\source\_data\sytle</span><br><span class="line">.header{</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">72%</span>;</span><br><span class="line">    +tablet() {</span><br><span class="line">        <span class="attribute">width</span>: <span class="number">100%</span>;</span><br><span class="line">    }</span><br><span class="line">    +mobile() {</span><br><span class="line">        <span class="attribute">width</span>: <span class="number">100%</span>;</span><br><span class="line">    }</span><br><span class="line">}</span><br><span class="line"><span class="selector-class">.container</span> <span class="selector-class">.main-inner</span> {</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">72%</span>;</span><br><span class="line">    +tablet() {</span><br><span class="line">        <span class="attribute">width</span>: <span class="number">100%</span>;</span><br><span class="line">    }</span><br><span class="line">    +mobile() {</span><br><span class="line">        <span class="attribute">width</span>: <span class="number">100%</span>;</span><br><span class="line">    }</span><br><span class="line">}</span><br><span class="line"><span class="selector-class">.content-wrap</span> {</span><br><span class="line">    <span class="attribute">width</span>: calc(<span class="number">100%</span> - <span class="number">260px</span>);</span><br><span class="line">    +tablet() {</span><br><span class="line">        <span class="attribute">width</span>: <span class="number">100%</span>;</span><br><span class="line">    }</span><br><span class="line">    +mobile() {</span><br><span class="line">        <span class="attribute">width</span>: <span class="number">100%</span>;</span><br><span class="line">    }</span><br><span class="line">}</span><br></pre></td></tr></table></figure>
<span class="label success">updated by cozy 2020/10/19</span>
<h1>add  colorful tag bubble</h1>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">cd next/layout</span><br><span class="line">touch tag-bubble.swig</span><br></pre></td></tr></table></figure>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="css">  <span class="selector-class">.wrapper</span> {</span></span><br><span class="line">    margin: 0 auto;</span><br><span class="line"><span class="css">    <span class="selector-tag">padding</span><span class="selector-pseudo">:0</span>;</span></span><br><span class="line">    width: 700px;</span><br><span class="line">    min-width: 100px;</span><br><span class="line">  }</span><br><span class="line"><span class="css">  <span class="selector-class">.tagbubble</span> {</span></span><br><span class="line">    position: relative;</span><br><span class="line">    margin-top: 300px;</span><br><span class="line">  }</span><br><span class="line"><span class="css">  <span class="selector-class">.tagbubble</span> <span class="selector-tag">a</span> {</span></span><br><span class="line">    display: block;</span><br><span class="line">    border-radius: 50%;</span><br><span class="line"><span class="css">    <span class="selector-tag">color</span>: <span class="selector-id">#fff</span>;</span></span><br><span class="line">    font-weight: bold;</span><br><span class="line">    font-size: 14px;</span><br><span class="line">    text-decoration: none;</span><br><span class="line">    text-align: center;</span><br><span class="line">  }</span><br><span class="line"></span><br><span class="line"><span class="css">  <span class="selector-class">.b0</span>{</span></span><br><span class="line">      width: 95px;</span><br><span class="line">      height: 90px;</span><br><span class="line">      line-height: 90px;</span><br><span class="line">  }</span><br><span class="line"><span class="css">  <span class="selector-class">.b1</span>{</span></span><br><span class="line">      width: 70px;</span><br><span class="line">      height: 70px;</span><br><span class="line">      line-height: 55px;</span><br><span class="line">  }</span><br><span class="line"><span class="css">  <span class="selector-class">.b2</span>{</span></span><br><span class="line">      width: 60px;</span><br><span class="line">      height: 60px;</span><br><span class="line">      line-height: 60px;</span><br><span class="line">  }</span><br><span class="line"><span class="css">  <span class="selector-class">.b3</span>{</span></span><br><span class="line">      width: 45px;</span><br><span class="line">      height: 45px;</span><br><span class="line">      line-height: 40px;</span><br><span class="line">  }</span><br><span class="line"></span><br><span class="line"><span class="css">  <span class="selector-class">.c0</span>{</span></span><br><span class="line"><span class="css">      <span class="selector-tag">background</span>: <span class="selector-tag">-moz-linear-gradient</span>(<span class="selector-tag">top</span>, <span class="selector-id">#d1e5fd</span> 0%, <span class="selector-id">#3d86f4</span> 100%);</span></span><br><span class="line"><span class="css">      <span class="selector-tag">background</span>: <span class="selector-tag">-webkit-linear-gradient</span>(<span class="selector-tag">top</span>, <span class="selector-id">#d1e5fd</span> 0%,<span class="selector-id">#3d86f4</span> 100%);</span></span><br><span class="line"><span class="css">      <span class="selector-tag">background</span>: <span class="selector-tag">-o-linear-gradient</span>(<span class="selector-tag">top</span>, <span class="selector-id">#d1e5fd</span> 0%,<span class="selector-id">#3d86f4</span> 100%);</span></span><br><span class="line"><span class="css">      <span class="selector-tag">background</span>: <span class="selector-tag">-ms-linear-gradient</span>(<span class="selector-tag">top</span>, <span class="selector-id">#d1e5fd</span> 0%,<span class="selector-id">#3d86f4</span> 100%);</span></span><br><span class="line"><span class="css">      <span class="selector-tag">background</span>: <span class="selector-tag">linear-gradient</span>(<span class="selector-tag">to</span> <span class="selector-tag">bottom</span>, <span class="selector-id">#d1e5fd</span> 0%,<span class="selector-id">#3d86f4</span> 100%);</span></span><br><span class="line">  }</span><br><span class="line"><span class="css">  <span class="selector-class">.c1</span>{</span></span><br><span class="line"><span class="css">      <span class="selector-tag">background</span>: <span class="selector-tag">-moz-linear-gradient</span>(<span class="selector-tag">top</span>, <span class="selector-id">#b9f8ff</span> 0%, <span class="selector-id">#1de7ff</span> 100%);</span></span><br><span class="line"><span class="css">      <span class="selector-tag">background</span>: <span class="selector-tag">-webkit-linear-gradient</span>(<span class="selector-tag">top</span>, <span class="selector-id">#b9f8ff</span> 0%,<span class="selector-id">#1de7ff</span> 100%);</span></span><br><span class="line"><span class="css">      <span class="selector-tag">background</span>: <span class="selector-tag">-o-linear-gradient</span>(<span class="selector-tag">top</span>, <span class="selector-id">#b9f8ff</span> 0%,<span class="selector-id">#1de7ff</span> 100%);</span></span><br><span class="line"><span class="css">      <span class="selector-tag">background</span>: <span class="selector-tag">-ms-linear-gradient</span>(<span class="selector-tag">top</span>, <span class="selector-id">#b9f8ff</span> 0%,<span class="selector-id">#1de7ff</span> 100%);</span></span><br><span class="line"><span class="css">      <span class="selector-tag">background</span>: <span class="selector-tag">linear-gradient</span>(<span class="selector-tag">to</span> <span class="selector-tag">bottom</span>, <span class="selector-id">#b9f8ff</span> 0%,<span class="selector-id">#1de7ff</span> 100%);</span></span><br><span class="line">  }</span><br><span class="line"><span class="css">  <span class="selector-class">.c2</span>{</span></span><br><span class="line"><span class="css">      <span class="selector-tag">background</span>: <span class="selector-tag">-moz-linear-gradient</span>(<span class="selector-tag">top</span>, <span class="selector-id">#fff4e2</span> 0%, <span class="selector-id">#ffd79c</span> 100%);</span></span><br><span class="line"><span class="css">      <span class="selector-tag">background</span>: <span class="selector-tag">-webkit-linear-gradient</span>(<span class="selector-tag">top</span>, <span class="selector-id">#fff4e2</span> 0%,<span class="selector-id">#ffd79c</span> 100%);</span></span><br><span class="line"><span class="css">      <span class="selector-tag">background</span>: <span class="selector-tag">-o-linear-gradient</span>(<span class="selector-tag">top</span>, <span class="selector-id">#fff4e2</span> 0%,<span class="selector-id">#ffd79c</span> 100%);</span></span><br><span class="line"><span class="css">      <span class="selector-tag">background</span>: <span class="selector-tag">-ms-linear-gradient</span>(<span class="selector-tag">top</span>, <span class="selector-id">#fff4e2</span> 0%,<span class="selector-id">#ffd79c</span> 100%);</span></span><br><span class="line"><span class="css">      <span class="selector-tag">background</span>: <span class="selector-tag">linear-gradient</span>(<span class="selector-tag">to</span> <span class="selector-tag">bottom</span>, <span class="selector-id">#fff4e2</span> 0%,<span class="selector-id">#ffd79c</span> 100%);</span></span><br><span class="line">  }</span><br><span class="line"><span class="css">  <span class="selector-class">.c3</span>{</span></span><br><span class="line"><span class="css">      <span class="selector-tag">background</span>: <span class="selector-tag">-moz-linear-gradient</span>(<span class="selector-tag">top</span>, <span class="selector-id">#fef4fa</span> 0%, <span class="selector-id">#fbbae0</span> 100%);</span></span><br><span class="line"><span class="css">      <span class="selector-tag">background</span>: <span class="selector-tag">-webkit-linear-gradient</span>(<span class="selector-tag">top</span>, <span class="selector-id">#fef4fa</span> 0%,<span class="selector-id">#fbbae0</span> 100%);</span></span><br><span class="line"><span class="css">      <span class="selector-tag">background</span>: <span class="selector-tag">-o-linear-gradient</span>(<span class="selector-tag">top</span>, <span class="selector-id">#fef4fa</span> 0%,<span class="selector-id">#fbbae0</span> 100%);</span></span><br><span class="line"><span class="css">      <span class="selector-tag">background</span>: <span class="selector-tag">-ms-linear-gradient</span>(<span class="selector-tag">top</span>, <span class="selector-id">#fef4fa</span> 0%,<span class="selector-id">#fbbae0</span> 100%);</span></span><br><span class="line"><span class="css">      <span class="selector-tag">background</span>: <span class="selector-tag">linear-gradient</span>(<span class="selector-tag">to</span> <span class="selector-tag">bottom</span>, <span class="selector-id">#fef4fa</span> 0%,<span class="selector-id">#fbbae0</span> 100%);</span></span><br><span class="line">  }</span><br><span class="line"><span class="css">  <span class="selector-class">.c4</span>{</span></span><br><span class="line"><span class="css">      <span class="selector-tag">background</span>: <span class="selector-tag">-moz-linear-gradient</span>(<span class="selector-tag">top</span>, <span class="selector-id">#fedc90</span> 0%, <span class="selector-id">#ffb515</span> 100%);</span></span><br><span class="line"><span class="css">      <span class="selector-tag">background</span>: <span class="selector-tag">-webkit-linear-gradient</span>(<span class="selector-tag">top</span>, <span class="selector-id">#fedc90</span> 0%,<span class="selector-id">#ffb515</span> 100%);</span></span><br><span class="line"><span class="css">      <span class="selector-tag">background</span>: <span class="selector-tag">-o-linear-gradient</span>(<span class="selector-tag">top</span>, <span class="selector-id">#fedc90</span> 0%,<span class="selector-id">#ffb515</span> 100%);</span></span><br><span class="line"><span class="css">      <span class="selector-tag">background</span>: <span class="selector-tag">-ms-linear-gradient</span>(<span class="selector-tag">top</span>, <span class="selector-id">#fedc90</span> 0%,<span class="selector-id">#ffb515</span> 100%);</span></span><br><span class="line"><span class="css">      <span class="selector-tag">background</span>: <span class="selector-tag">linear-gradient</span>(<span class="selector-tag">to</span> <span class="selector-tag">bottom</span>, <span class="selector-id">#fedc90</span> 0%,<span class="selector-id">#ffb515</span> 100%);</span></span><br><span class="line">  }</span><br><span class="line"><span class="css">  <span class="selector-class">.c5</span>{</span></span><br><span class="line"><span class="css">      <span class="selector-tag">background</span>: <span class="selector-tag">-moz-linear-gradient</span>(<span class="selector-tag">top</span>, <span class="selector-id">#bcf7ca</span> 0%, <span class="selector-id">#1fda4b</span> 100%);</span></span><br><span class="line"><span class="css">      <span class="selector-tag">background</span>: <span class="selector-tag">-webkit-linear-gradient</span>(<span class="selector-tag">top</span>, <span class="selector-id">#bcf7ca</span> 0%,<span class="selector-id">#1fda4b</span> 100%);</span></span><br><span class="line"><span class="css">      <span class="selector-tag">background</span>: <span class="selector-tag">-o-linear-gradient</span>(<span class="selector-tag">top</span>, <span class="selector-id">#bcf7ca</span> 0%,<span class="selector-id">#1fda4b</span> 100%);</span></span><br><span class="line"><span class="css">      <span class="selector-tag">background</span>: <span class="selector-tag">-ms-linear-gradient</span>(<span class="selector-tag">top</span>, <span class="selector-id">#bcf7ca</span> 0%,<span class="selector-id">#1fda4b</span> 100%);</span></span><br><span class="line"><span class="css">      <span class="selector-tag">background</span>: <span class="selector-tag">linear-gradient</span>(<span class="selector-tag">to</span> <span class="selector-tag">bottom</span>, <span class="selector-id">#bcf7ca</span> 0%,<span class="selector-id">#1fda4b</span> 100%);</span></span><br><span class="line">  }</span><br><span class="line"><span class="css">  <span class="selector-class">.c6</span>{</span></span><br><span class="line"><span class="css">      <span class="selector-tag">background</span>: <span class="selector-tag">-moz-linear-gradient</span>(<span class="selector-tag">top</span>, <span class="selector-id">#f7cdf8</span> 0%, <span class="selector-id">#db43e7</span> 100%);</span></span><br><span class="line"><span class="css">      <span class="selector-tag">background</span>: <span class="selector-tag">-webkit-linear-gradient</span>(<span class="selector-tag">top</span>, <span class="selector-id">#f7cdf8</span> 0%,<span class="selector-id">#db43e7</span> 100%);</span></span><br><span class="line"><span class="css">      <span class="selector-tag">background</span>: <span class="selector-tag">-o-linear-gradient</span>(<span class="selector-tag">top</span>, <span class="selector-id">#f7cdf8</span> 0%,<span class="selector-id">#db43e7</span> 100%);</span></span><br><span class="line"><span class="css">      <span class="selector-tag">background</span>: <span class="selector-tag">-ms-linear-gradient</span>(<span class="selector-tag">top</span>, <span class="selector-id">#f7cdf8</span> 0%,<span class="selector-id">#db43e7</span> 100%);</span></span><br><span class="line"><span class="css">      <span class="selector-tag">background</span>: <span class="selector-tag">linear-gradient</span>(<span class="selector-tag">to</span> <span class="selector-tag">bottom</span>, <span class="selector-id">#f7cdf8</span> 0%,<span class="selector-id">#db43e7</span> 100%);</span></span><br><span class="line">  }</span><br><span class="line"></span><br><span class="line"><span class="css">  <span class="comment">/* &#x79FB;&#x52A8;&#x7AEF;&#x6837;&#x5F0F; */</span></span></span><br><span class="line"><span class="css">  <span class="keyword">@media</span> (<span class="attribute">max-width:</span> <span class="number">767px</span>){</span></span><br><span class="line"><span class="css">    <span class="selector-class">.wrapper</span> {</span></span><br><span class="line">        width: 10px;</span><br><span class="line"><span class="css">        <span class="selector-tag">margin-left</span><span class="selector-pseudo">:20px</span>;</span></span><br><span class="line">        min-width: 0px;</span><br><span class="line">    }</span><br><span class="line"><span class="css">    <span class="selector-class">.tagbubble</span>{</span></span><br><span class="line">        width: 300px;</span><br><span class="line">        min-width: 0px;</span><br><span class="line">        margin-top: 200px;</span><br><span class="line">        margin-left: 10px;</span><br><span class="line">    }</span><br><span class="line"><span class="css">    <span class="selector-class">.tagbubble</span> <span class="selector-tag">a</span> {</span></span><br><span class="line">      font-size: 13px;</span><br><span class="line">    }</span><br><span class="line"><span class="css">    <span class="selector-class">.b0</span>{</span></span><br><span class="line">        width: 65px;</span><br><span class="line">        height: 65px;</span><br><span class="line">        line-height: 60px;</span><br><span class="line">    }</span><br><span class="line"><span class="css">    <span class="selector-class">.b1</span>{</span></span><br><span class="line">        width: 50px;</span><br><span class="line">        height: 50px;</span><br><span class="line">        line-height: 45px;</span><br><span class="line">    }</span><br><span class="line"><span class="css">    <span class="selector-class">.b2</span>{</span></span><br><span class="line">        width: 40px;</span><br><span class="line">        height: 40px;</span><br><span class="line">        line-height: 40px;</span><br><span class="line">    }</span><br><span class="line"><span class="css">    <span class="selector-class">.b3</span>{</span></span><br><span class="line">        width: 35px;</span><br><span class="line">        height: 35px;</span><br><span class="line">        line-height: 35px;</span><br><span class="line">    }</span><br><span class="line">  }</span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;wrapper&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;tagbubble&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="javascript">     <span class="keyword">var</span> alltags = <span class="built_in">document</span>.getElementsByClassName(<span class="string">&apos;tag-cloud-tags&apos;</span>);</span></span><br><span class="line"><span class="javascript">     <span class="keyword">var</span> tags = alltags[<span class="number">0</span>].getElementsByTagName(<span class="string">&apos;a&apos;</span>);</span></span><br><span class="line"></span><br><span class="line"><span class="javascript">     <span class="keyword">var</span> bo = <span class="keyword">new</span> <span class="built_in">Array</span>();</span></span><br><span class="line"><span class="javascript">     <span class="keyword">var</span> co = <span class="keyword">new</span> <span class="built_in">Array</span>();</span></span><br><span class="line"><span class="javascript">     <span class="keyword">for</span>(<span class="keyword">var</span> i=<span class="number">0</span>;i&lt;<span class="number">4</span>;i++){</span></span><br><span class="line"><span class="javascript">        bo.push(<span class="string">&quot;b&quot;</span> + i);</span></span><br><span class="line">     }</span><br><span class="line"><span class="javascript">     <span class="keyword">for</span>(<span class="keyword">var</span> i=<span class="number">0</span>;i&lt;<span class="number">7</span>;i++){</span></span><br><span class="line"><span class="javascript">        co.push(<span class="string">&quot;c&quot;</span> + i);</span></span><br><span class="line">     }</span><br><span class="line"></span><br><span class="line"><span class="javascript">     <span class="keyword">var</span> divDom = <span class="built_in">document</span>.querySelector(<span class="string">&apos;.tagbubble&apos;</span>)</span></span><br><span class="line"><span class="javascript">     <span class="comment">//var divDom = document.getElementsByClassName(&apos;tagbubble&apos;)[0];</span></span></span><br><span class="line"><span class="javascript">     <span class="keyword">for</span>(<span class="keyword">var</span> i=<span class="number">0</span>;i&lt;tags.length;i++){</span></span><br><span class="line"><span class="javascript">        <span class="keyword">var</span> atag = <span class="built_in">document</span>.createElement(<span class="string">&apos;a&apos;</span>);</span></span><br><span class="line"><span class="javascript">        <span class="keyword">var</span> boStyle = bo[<span class="built_in">Math</span>.floor(<span class="built_in">Math</span>.random()*<span class="number">4</span>)];</span></span><br><span class="line"><span class="javascript">        <span class="keyword">var</span> coStyle = co[<span class="built_in">Math</span>.floor(<span class="built_in">Math</span>.random()*<span class="number">7</span>)];</span></span><br><span class="line">        if(tags[i].innerText.length &gt; 10){</span><br><span class="line"><span class="javascript">            boStyle = <span class="string">&quot;b0&quot;</span>;</span></span><br><span class="line"><span class="javascript">        }<span class="keyword">else</span> <span class="keyword">if</span>(tags[i].innerText.length &gt; <span class="number">5</span> &amp;&amp; tags[i].innerText.length &lt; <span class="number">10</span>){</span></span><br><span class="line"><span class="javascript">            boStyle = <span class="string">&quot;b1&quot;</span>;</span></span><br><span class="line">        }</span><br><span class="line"><span class="javascript">        atag.setAttribute(<span class="string">&quot;class&quot;</span>, boStyle+<span class="string">&quot; &quot;</span>+coStyle);</span></span><br><span class="line"><span class="javascript">        atag.setAttribute(<span class="string">&quot;href&quot;</span>, tags[i].href);</span></span><br><span class="line">        atag.innerText = tags[i].innerText;</span><br><span class="line">        divDom.appendChild(atag);</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line"><span class="javascript">    <span class="function"><span class="keyword">function</span> <span class="title">browserRedirect</span>(<span class="params"></span>) </span>{</span></span><br><span class="line"><span class="javascript">        <span class="keyword">var</span> sUserAgent = navigator.userAgent.toLowerCase();</span></span><br><span class="line"><span class="javascript">        <span class="keyword">var</span> bIsIpad = sUserAgent.match(<span class="regexp">/ipad/i</span>) == <span class="string">&quot;ipad&quot;</span>;</span></span><br><span class="line"><span class="javascript">        <span class="keyword">var</span> bIsIphoneOs = sUserAgent.match(<span class="regexp">/iphone os/i</span>) == <span class="string">&quot;iphone os&quot;</span>;</span></span><br><span class="line"><span class="javascript">        <span class="keyword">var</span> bIsMidp = sUserAgent.match(<span class="regexp">/midp/i</span>) == <span class="string">&quot;midp&quot;</span>;</span></span><br><span class="line"><span class="javascript">        <span class="keyword">var</span> bIsUc7 = sUserAgent.match(<span class="regexp">/rv:1.2.3.4/i</span>) == <span class="string">&quot;rv:1.2.3.4&quot;</span>;</span></span><br><span class="line"><span class="javascript">        <span class="keyword">var</span> bIsUc = sUserAgent.match(<span class="regexp">/ucweb/i</span>) == <span class="string">&quot;ucweb&quot;</span>;</span></span><br><span class="line"><span class="javascript">        <span class="keyword">var</span> bIsAndroid = sUserAgent.match(<span class="regexp">/android/i</span>) == <span class="string">&quot;android&quot;</span>;</span></span><br><span class="line"><span class="javascript">        <span class="keyword">var</span> bIsCE = sUserAgent.match(<span class="regexp">/windows ce/i</span>) == <span class="string">&quot;windows ce&quot;</span>;</span></span><br><span class="line"><span class="javascript">        <span class="keyword">var</span> bIsWM = sUserAgent.match(<span class="regexp">/windows mobile/i</span>) == <span class="string">&quot;windows mobile&quot;</span>;</span></span><br><span class="line">        if (bIsIpad || bIsIphoneOs || bIsMidp || bIsUc7 || bIsUc || bIsAndroid || bIsCE || bIsWM) {</span><br><span class="line"><span class="javascript">            <span class="comment">//&#x79FB;&#x52A8;&#x7AEF;&#x9875;&#x9762;</span></span></span><br><span class="line"><span class="javascript">            <span class="keyword">return</span> <span class="number">80</span>;</span></span><br><span class="line"><span class="javascript">        } <span class="keyword">else</span> {</span></span><br><span class="line"><span class="javascript">            <span class="comment">//pc&#x7AEF;&#x9875;&#x9762;</span></span></span><br><span class="line"><span class="javascript">            <span class="keyword">return</span> <span class="number">150</span>;</span></span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line"><span class="javascript">    <span class="keyword">var</span> tagRadius = browserRedirect();</span></span><br><span class="line"></span><br><span class="line"><span class="javascript">    <span class="comment">/*3D&#x6807;&#x7B7E;&#x4E91;*/</span></span></span><br><span class="line">    tagcloud({</span><br><span class="line"><span class="javascript">        selector: <span class="string">&quot;.tagbubble&quot;</span>,   <span class="comment">//&#x5143;&#x7D20;&#x9009;&#x62E9;&#x5668;</span></span></span><br><span class="line"><span class="javascript">        fontsize: <span class="number">14</span>,             <span class="comment">//&#x57FA;&#x672C;&#x5B57;&#x4F53;&#x5927;&#x5C0F;, &#x5355;&#x4F4D;px</span></span></span><br><span class="line"><span class="javascript">        radius: tagRadius,        <span class="comment">//&#x6EDA;&#x52A8;&#x534A;&#x5F84;, &#x5355;&#x4F4D;px &#x9875;&#x9762;&#x5BBD;&#x5EA6;&#x548C;&#x9AD8;&#x5EA6;&#x7684;&#x4E94;&#x5206;&#x4E4B;&#x4E00;</span></span></span><br><span class="line"><span class="javascript">        mspeed: <span class="string">&quot;slow&quot;</span>,           <span class="comment">//&#x6EDA;&#x52A8;&#x6700;&#x5927;&#x901F;&#x5EA6;, &#x53D6;&#x503C;: slow, normal(&#x9ED8;&#x8BA4;), fast</span></span></span><br><span class="line"><span class="javascript">        ispeed: <span class="string">&quot;slow&quot;</span>,           <span class="comment">//&#x6EDA;&#x52A8;&#x521D;&#x901F;&#x5EA6;, &#x53D6;&#x503C;: slow, normal(&#x9ED8;&#x8BA4;), fast</span></span></span><br><span class="line"><span class="javascript">        direction: <span class="number">135</span>,           <span class="comment">//&#x521D;&#x59CB;&#x6EDA;&#x52A8;&#x65B9;&#x5411;, &#x53D6;&#x503C;&#x89D2;&#x5EA6;(&#x987A;&#x65F6;&#x9488;360): 0&#x5BF9;&#x5E94;top, 90&#x5BF9;&#x5E94;left, 135&#x5BF9;&#x5E94;right-bottom(&#x9ED8;&#x8BA4;)...</span></span></span><br><span class="line"><span class="javascript">        keep: <span class="literal">false</span>               <span class="comment">//&#x9F20;&#x6807;&#x79FB;&#x51FA;&#x7EC4;&#x4EF6;&#x540E;&#x662F;&#x5426;&#x7EE7;&#x7EED;&#x968F;&#x9F20;&#x6807;&#x6EDA;&#x52A8;, &#x53D6;&#x503C;: false, true(&#x9ED8;&#x8BA4;) &#x5BF9;&#x5E94; &#x51CF;&#x901F;&#x81F3;&#x521D;&#x901F;&#x5EA6;&#x6EDA;&#x52A8;, &#x968F;&#x9F20;&#x6807;&#x6EDA;&#x52A8;</span></span></span><br><span class="line">    });</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">cd next/source/js</span><br><span class="line">touch bubble.js</span><br></pre></td></tr></table></figure>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">* 3d&#x6807;&#x7B7E;&#x4E91;</span></span><br><span class="line"><span class="comment">* &#x529F;&#x80FD;&#xFF1A;&#x9F20;&#x6807;&#x79FB;&#x5165;&#x6807;&#x7B7E;&#xFF0C;&#x5F53;&#x524D;&#x6807;&#x7B7E;&#x9759;&#x6B62;&#x653E;&#x5927;</span></span><br><span class="line"><span class="comment">* &#x8BF4;&#x660E;&#xFF1A;</span></span><br><span class="line"><span class="comment">* */</span></span><br><span class="line"><span class="built_in">window</span>.tagcloud = (<span class="function"><span class="keyword">function</span>(<span class="params">win, doc</span>) </span>{ <span class="comment">// ns</span></span><br><span class="line">    <span class="comment">// &#x5224;&#x65AD;&#x5BF9;&#x8C61;</span></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">isObject</span> (<span class="params">obj</span>) </span>{</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">Object</span>.prototype.toString.call(obj) === <span class="string">&apos;[object Object]&apos;</span>;</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="comment">// &#x6784;&#x9020;&#x51FD;&#x6570;</span></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">TagCloud</span> (<span class="params">options</span>) </span>{</span><br><span class="line">        <span class="keyword">var</span> self = <span class="built_in">this</span>;</span><br><span class="line"></span><br><span class="line">        self.config = TagCloud._getConfig(options);</span><br><span class="line">        self.box = self.config.element;  <span class="comment">//&#x7EC4;&#x4EF6;&#x5143;&#x7D20;</span></span><br><span class="line">        self.fontsize = self.config.fontsize; <span class="comment">//&#x5E73;&#x5747;&#x5B57;&#x4F53;&#x5927;&#x5C0F;</span></span><br><span class="line">        self.radius = self.config.radius; <span class="comment">//&#x6EDA;&#x52A8;&#x534A;&#x5F84;</span></span><br><span class="line">        self.depth = <span class="number">2</span> * self.radius;   <span class="comment">//&#x6EDA;&#x52A8;&#x6DF1;&#x5EA6;</span></span><br><span class="line">        self.size = <span class="number">2</span> * self.radius;    <span class="comment">//&#x968F;&#x9F20;&#x6807;&#x6EDA;&#x52A8;&#x53D8;&#x901F;&#x4F5C;&#x7528;&#x533A;&#x57DF;</span></span><br><span class="line"></span><br><span class="line">        self.mspeed = TagCloud._getMsSpeed(self.config.mspeed);</span><br><span class="line">        self.ispeed = TagCloud._getIsSpeed(self.config.ispeed);</span><br><span class="line">        self.items = self._getItems();</span><br><span class="line"></span><br><span class="line">        self.direction = self.config.direction;   <span class="comment">//&#x521D;&#x59CB;&#x6EDA;&#x52A8;&#x65B9;&#x5411;</span></span><br><span class="line">        self.keep = self.config.keep; <span class="comment">//&#x9F20;&#x6807;&#x79FB;&#x51FA;&#x540E;&#x662F;&#x5426;&#x4FDD;&#x6301;&#x4E4B;&#x524D;&#x6EDA;&#x52A8;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">//&#x521D;&#x59CB;&#x5316;</span></span><br><span class="line">        self.active = <span class="literal">false</span>;   <span class="comment">//&#x662F;&#x5426;&#x4E3A;&#x6FC0;&#x6D3B;&#x72B6;&#x6001;</span></span><br><span class="line">        self.lasta = <span class="number">1</span>;</span><br><span class="line">        self.lastb = <span class="number">1</span>;</span><br><span class="line">        self.mouseX0 = self.ispeed * <span class="built_in">Math</span>.sin(self.direction * <span class="built_in">Math</span>.PI / <span class="number">180</span>);    <span class="comment">//&#x9F20;&#x6807;&#x4E0E;&#x6EDA;&#x52A8;&#x5706;&#x5FC3;x&#x8F74;&#x521D;&#x59CB;&#x8DDD;&#x79BB;</span></span><br><span class="line">        self.mouseY0 = -self.ispeed * <span class="built_in">Math</span>.cos(self.direction * <span class="built_in">Math</span>.PI / <span class="number">180</span>);   <span class="comment">//&#x9F20;&#x6807;&#x4E0E;&#x6EDA;&#x52A8;&#x5706;&#x5FC3;y&#x8F74;&#x521D;&#x59CB;&#x8DDD;&#x79BB;</span></span><br><span class="line">        self.mouseX = self.mouseX0;   <span class="comment">//&#x9F20;&#x6807;&#x4E0E;&#x6EDA;&#x52A8;&#x5706;&#x5FC3;x&#x8F74;&#x8DDD;&#x79BB;</span></span><br><span class="line">        self.mouseY = self.mouseY0;   <span class="comment">//&#x9F20;&#x6807;&#x4E0E;&#x6EDA;&#x52A8;&#x5706;&#x5FC3;y&#x8F74;&#x8DDD;&#x79BB;</span></span><br><span class="line">        self.index = <span class="number">-1</span>;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//&#x9F20;&#x6807;&#x79FB;&#x5165;</span></span><br><span class="line">        TagCloud._on(self.box, <span class="string">&apos;mouseover&apos;</span>, <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>{</span><br><span class="line">            self.active = <span class="literal">true</span>;</span><br><span class="line">        });</span><br><span class="line">        <span class="comment">//&#x9F20;&#x6807;&#x79FB;&#x51FA;</span></span><br><span class="line">        TagCloud._on(self.box, <span class="string">&apos;mouseout&apos;</span>, <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>{</span><br><span class="line">            self.active = <span class="literal">false</span>;</span><br><span class="line">        });</span><br><span class="line"></span><br><span class="line">        <span class="comment">//&#x9F20;&#x6807;&#x5728;&#x5185;&#x79FB;&#x52A8;</span></span><br><span class="line">        TagCloud._on(self.keep ? win : self.box, <span class="string">&apos;mousemove&apos;</span>, <span class="function"><span class="keyword">function</span> (<span class="params">ev</span>) </span>{</span><br><span class="line">            <span class="keyword">var</span> oEvent = win.event || ev;</span><br><span class="line">            <span class="keyword">var</span> boxPosition = self.box.getBoundingClientRect();</span><br><span class="line">            self.mouseX = (oEvent.clientX - (boxPosition.left + self.box.offsetWidth / <span class="number">2</span>)) / <span class="number">5</span>;</span><br><span class="line">            self.mouseY = (oEvent.clientY - (boxPosition.top + self.box.offsetHeight / <span class="number">2</span>)) / <span class="number">5</span>;</span><br><span class="line">        });</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">var</span> j = <span class="number">0</span>, len = self.items.length; j &lt; len; j++) {</span><br><span class="line">            self.items[j].element.index=j;</span><br><span class="line"></span><br><span class="line">            <span class="comment">//&#x9F20;&#x6807;&#x79FB;&#x51FA;&#x5B50;&#x5143;&#x7D20;,&#x5F53;&#x524D;&#x5143;&#x7D20;&#x9759;&#x6B62;&#x653E;&#x5927;</span></span><br><span class="line">            self.items[j].element.onmouseover = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>{</span><br><span class="line">                self.index = <span class="built_in">this</span>.index;</span><br><span class="line">            };</span><br><span class="line"></span><br><span class="line">            <span class="comment">//&#x9F20;&#x6807;&#x79FB;&#x51FA;&#x5B50;&#x5143;&#x7D20;,&#x5F53;&#x524D;&#x5143;&#x7D20;&#x7EE7;&#x7EED;&#x6EDA;&#x52A8;</span></span><br><span class="line">            self.items[j].element.onmouseout = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>{</span><br><span class="line">                self.index = <span class="number">-1</span>;</span><br><span class="line">            };</span><br><span class="line">        }</span><br><span class="line"></span><br><span class="line">        <span class="comment">//&#x5B9A;&#x65F6;&#x66F4;&#x65B0;</span></span><br><span class="line">        TagCloud.boxs.push(self.box);</span><br><span class="line">        self.update(self);    <span class="comment">//&#x521D;&#x59CB;&#x66F4;&#x65B0;</span></span><br><span class="line">        self.box.style.visibility = <span class="string">&quot;visible&quot;</span>;</span><br><span class="line">        self.box.style.position = <span class="string">&quot;relative&quot;</span>;</span><br><span class="line">        <span class="comment">// self.box.style.minHeight = 1.2 * self.size + &quot;px&quot;;</span></span><br><span class="line">        <span class="comment">// self.box.style.minWidth = 2.5 * self.size + &quot;px&quot;;</span></span><br><span class="line">        self.box.style.minHeight = <span class="number">0</span> * self.size + <span class="string">&quot;px&quot;</span>;</span><br><span class="line">        self.box.style.minWidth = <span class="number">0</span> * self.size + <span class="string">&quot;px&quot;</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">var</span> j = <span class="number">0</span>, len = self.items.length; j &lt; len; j++) {</span><br><span class="line">            self.items[j].element.style.position = <span class="string">&quot;absolute&quot;</span>;</span><br><span class="line">            self.items[j].element.style.zIndex = j + <span class="number">1</span>;</span><br><span class="line">        }</span><br><span class="line">        self.up = <span class="built_in">setInterval</span>(<span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>{</span><br><span class="line">            self.update(self);</span><br><span class="line">        }, <span class="number">10</span>);</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="comment">//&#x5B9E;&#x4F8B;</span></span><br><span class="line">    TagCloud.boxs = []; <span class="comment">//&#x5B9E;&#x4F8B;&#x5143;&#x7D20;&#x6570;&#x7EC4;</span></span><br><span class="line">    <span class="comment">// &#x9759;&#x6001;&#x65B9;&#x6CD5;&#x4EEC;</span></span><br><span class="line">    TagCloud._set = <span class="function"><span class="keyword">function</span> (<span class="params">element</span>) </span>{</span><br><span class="line">        <span class="keyword">if</span> (TagCloud.boxs.indexOf(element) == <span class="number">-1</span>) {<span class="comment">//ie8&#x4E0D;&#x652F;&#x6301;&#x6570;&#x7EC4;&#x7684;indexOf&#x65B9;&#x6CD5;</span></span><br><span class="line">            <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">        }</span><br><span class="line">    };</span><br><span class="line"></span><br><span class="line">    <span class="comment">//&#x6DFB;&#x52A0;&#x6570;&#x7EC4;IndexOf&#x65B9;&#x6CD5;</span></span><br><span class="line">    <span class="keyword">if</span> (!<span class="built_in">Array</span>.prototype.indexOf){</span><br><span class="line">        <span class="built_in">Array</span>.prototype.indexOf = <span class="function"><span class="keyword">function</span>(<span class="params">elt <span class="regexp">/*, from*/</span></span>)</span>{</span><br><span class="line">            <span class="keyword">var</span> len = <span class="built_in">this</span>.length &gt;&gt;&gt; <span class="number">0</span>;</span><br><span class="line">            <span class="keyword">var</span> <span class="keyword">from</span> = <span class="built_in">Number</span>(<span class="built_in">arguments</span>[<span class="number">1</span>]) || <span class="number">0</span>;</span><br><span class="line">            <span class="keyword">from</span> = (<span class="keyword">from</span> &lt; <span class="number">0</span>)</span><br><span class="line">                ? <span class="built_in">Math</span>.ceil(<span class="keyword">from</span>)</span><br><span class="line">                : <span class="built_in">Math</span>.floor(<span class="keyword">from</span>);</span><br><span class="line">            <span class="keyword">if</span> (<span class="keyword">from</span> &lt; <span class="number">0</span>)</span><br><span class="line">                <span class="keyword">from</span> += len;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">for</span> (; <span class="keyword">from</span> &lt; len; <span class="keyword">from</span>++){</span><br><span class="line">                <span class="keyword">if</span> (<span class="keyword">from</span> <span class="keyword">in</span> <span class="built_in">this</span> &amp;&amp; <span class="built_in">this</span>[<span class="keyword">from</span>] === elt)</span><br><span class="line">                    <span class="keyword">return</span> <span class="keyword">from</span>;</span><br><span class="line">            }</span><br><span class="line">            <span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">        };</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    TagCloud._getConfig = <span class="function"><span class="keyword">function</span> (<span class="params">config</span>) </span>{</span><br><span class="line">        <span class="keyword">var</span> defaultConfig = {   <span class="comment">//&#x9ED8;&#x8BA4;&#x503C;</span></span><br><span class="line">            fontsize: <span class="number">16</span>,       <span class="comment">//&#x57FA;&#x672C;&#x5B57;&#x4F53;&#x5927;&#x5C0F;, &#x5355;&#x4F4D;px</span></span><br><span class="line">            radius: <span class="number">60</span>,         <span class="comment">//&#x6EDA;&#x52A8;&#x534A;&#x5F84;, &#x5355;&#x4F4D;px</span></span><br><span class="line">            mspeed: <span class="string">&quot;normal&quot;</span>,   <span class="comment">//&#x6EDA;&#x52A8;&#x6700;&#x5927;&#x901F;&#x5EA6;, &#x53D6;&#x503C;: slow, normal(&#x9ED8;&#x8BA4;), fast</span></span><br><span class="line">            ispeed: <span class="string">&quot;normal&quot;</span>,   <span class="comment">//&#x6EDA;&#x52A8;&#x521D;&#x901F;&#x5EA6;, &#x53D6;&#x503C;: slow, normal(&#x9ED8;&#x8BA4;), fast</span></span><br><span class="line">            direction: <span class="number">135</span>,     <span class="comment">//&#x521D;&#x59CB;&#x6EDA;&#x52A8;&#x65B9;&#x5411;, &#x53D6;&#x503C;&#x89D2;&#x5EA6;(&#x987A;&#x65F6;&#x9488;360): 0&#x5BF9;&#x5E94;top, 90&#x5BF9;&#x5E94;left, 135&#x5BF9;&#x5E94;right-bottom(&#x9ED8;&#x8BA4;)...</span></span><br><span class="line">            keep: <span class="literal">true</span>          <span class="comment">//&#x9F20;&#x6807;&#x79FB;&#x51FA;&#x7EC4;&#x4EF6;&#x540E;&#x662F;&#x5426;&#x7EE7;&#x7EED;&#x968F;&#x9F20;&#x6807;&#x6EDA;&#x52A8;, &#x53D6;&#x503C;: false, true(&#x9ED8;&#x8BA4;) &#x5BF9;&#x5E94; &#x51CF;&#x901F;&#x81F3;&#x521D;&#x901F;&#x5EA6;&#x6EDA;&#x52A8;, &#x968F;&#x9F20;&#x6807;&#x6EDA;&#x52A8;</span></span><br><span class="line">        };</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span>(isObject(config)) {</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">var</span> i <span class="keyword">in</span> config) {</span><br><span class="line">                <span class="keyword">if</span>(config.hasOwnProperty(i)) {<span class="comment">//hasOwnProperty()&#x7528;&#x6765;&#x5224;&#x65AD;&#x4E00;&#x4E2A;&#x5C5E;&#x6027;&#x662F;&#x5B9A;&#x4E49;&#x5728;&#x5BF9;&#x8C61;&#x672C;&#x8EAB;&#x800C;&#x4E0D;&#x662F;&#x7EE7;&#x627F;&#x81EA;&#x539F;&#x578B;&#x94FE;</span></span><br><span class="line">                    defaultConfig[i] = config[i]; <span class="comment">//&#x7528;&#x6237;&#x914D;&#x7F6E;</span></span><br><span class="line">                }</span><br><span class="line">            }</span><br><span class="line">        }</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> defaultConfig;<span class="comment">// &#x914D;&#x7F6E; Merge</span></span><br><span class="line">    };</span><br><span class="line">    TagCloud._getMsSpeed = <span class="function"><span class="keyword">function</span> (<span class="params">mspeed</span>) </span>{    <span class="comment">//&#x6EDA;&#x52A8;&#x6700;&#x5927;&#x901F;&#x5EA6;</span></span><br><span class="line">        <span class="keyword">var</span> speedMap = {</span><br><span class="line">            slow: <span class="number">1.5</span>, </span><br><span class="line">            normal: <span class="number">3</span>,</span><br><span class="line">            fast: <span class="number">5</span></span><br><span class="line">        };</span><br><span class="line">        <span class="keyword">return</span> speedMap[mspeed] || <span class="number">3</span>;</span><br><span class="line">    };</span><br><span class="line">    TagCloud._getIsSpeed = <span class="function"><span class="keyword">function</span> (<span class="params">ispeed</span>) </span>{    <span class="comment">//&#x6EDA;&#x52A8;&#x521D;&#x901F;&#x5EA6;</span></span><br><span class="line">        <span class="keyword">var</span> speedMap = {</span><br><span class="line">            slow: <span class="number">10</span>,</span><br><span class="line">            normal: <span class="number">25</span>,</span><br><span class="line">            fast: <span class="number">50</span></span><br><span class="line">        };</span><br><span class="line">        <span class="keyword">return</span> speedMap[ispeed] || <span class="number">25</span>;</span><br><span class="line">    };</span><br><span class="line">    TagCloud._getSc = <span class="function"><span class="keyword">function</span>(<span class="params">a, b</span>) </span>{</span><br><span class="line">        <span class="keyword">var</span> l = <span class="built_in">Math</span>.PI / <span class="number">180</span>;</span><br><span class="line">        <span class="comment">//&#x6570;&#x7EC4;&#x987A;&#x5E8F;0,1,2,3&#x8868;&#x793A;asin,acos,bsin,bcos</span></span><br><span class="line">        <span class="keyword">return</span> [</span><br><span class="line">            <span class="built_in">Math</span>.sin(a * l),</span><br><span class="line">            <span class="built_in">Math</span>.cos(a * l),</span><br><span class="line">            <span class="built_in">Math</span>.sin(b * l),</span><br><span class="line">            <span class="built_in">Math</span>.cos(b * l)</span><br><span class="line">        ];</span><br><span class="line">    };</span><br><span class="line"></span><br><span class="line">    TagCloud._on = <span class="function"><span class="keyword">function</span> (<span class="params">ele, eve, handler, cap</span>) </span>{</span><br><span class="line">        <span class="keyword">if</span> (ele.addEventListener) {</span><br><span class="line">            ele.addEventListener(eve, handler, cap);</span><br><span class="line">        } <span class="keyword">else</span> <span class="keyword">if</span> (ele.attachEvent) {</span><br><span class="line">            ele.attachEvent(<span class="string">&apos;on&apos;</span> + eve, handler);</span><br><span class="line">        } <span class="keyword">else</span> {</span><br><span class="line">            ele[<span class="string">&apos;on&apos;</span> + eve] = handler;</span><br><span class="line">        }</span><br><span class="line">    };</span><br><span class="line"></span><br><span class="line">    <span class="comment">// &#x539F;&#x578B;&#x65B9;&#x6CD5;</span></span><br><span class="line">    TagCloud.prototype = {</span><br><span class="line">        <span class="keyword">constructor</span>: TagCloud, // &#x53CD;&#x5411;&#x5F15;&#x7528;&#x6784;&#x9020;&#x5668;</span><br><span class="line"></span><br><span class="line">        update: function () {</span><br><span class="line">            <span class="keyword">var</span> self = <span class="built_in">this</span>, a, b;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span> (!self.active &amp;&amp; !self.keep) {</span><br><span class="line">                self.mouseX = <span class="built_in">Math</span>.abs(self.mouseX - self.mouseX0) &lt; <span class="number">1</span> ? self.mouseX0 : (self.mouseX + self.mouseX0) / <span class="number">2</span>;   <span class="comment">//&#x91CD;&#x7F6E;&#x9F20;&#x6807;&#x4E0E;&#x6EDA;&#x52A8;&#x5706;&#x5FC3;x&#x8F74;&#x8DDD;&#x79BB;</span></span><br><span class="line">                self.mouseY = <span class="built_in">Math</span>.abs(self.mouseY - self.mouseY0) &lt; <span class="number">1</span> ? self.mouseY0 : (self.mouseY + self.mouseY0) / <span class="number">2</span>;   <span class="comment">//&#x91CD;&#x7F6E;&#x9F20;&#x6807;&#x4E0E;&#x6EDA;&#x52A8;&#x5706;&#x5FC3;y&#x8F74;&#x8DDD;&#x79BB;</span></span><br><span class="line">            }</span><br><span class="line"></span><br><span class="line">            a = -(<span class="built_in">Math</span>.min(<span class="built_in">Math</span>.max(-self.mouseY, -self.size), self.size) / self.radius ) * self.mspeed;</span><br><span class="line">            b = (<span class="built_in">Math</span>.min(<span class="built_in">Math</span>.max(-self.mouseX, -self.size), self.size) / self.radius ) * self.mspeed;</span><br><span class="line">            </span><br><span class="line">            <span class="keyword">if</span> (<span class="built_in">Math</span>.abs(a) &lt;= <span class="number">0.01</span> &amp;&amp; <span class="built_in">Math</span>.abs(b) &lt;= <span class="number">0.01</span>) { <span class="keyword">return</span>; }</span><br><span class="line"></span><br><span class="line">            self.lasta = a;</span><br><span class="line">            self.lastb = b;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">var</span> sc = TagCloud._getSc(a, b);</span><br><span class="line"></span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">var</span> j = <span class="number">0</span>, len = self.items.length; j &lt; len; j++) {</span><br><span class="line"></span><br><span class="line">                <span class="keyword">var</span> rx1 = self.items[j].x,</span><br><span class="line">                    ry1 = self.items[j].y*sc[<span class="number">1</span>] + self.items[j].z*(-sc[<span class="number">0</span>]),</span><br><span class="line">                    rz1 = self.items[j].y*sc[<span class="number">0</span>] + self.items[j].z*sc[<span class="number">1</span>];</span><br><span class="line"></span><br><span class="line">                <span class="keyword">var</span> rx2 = rx1 * sc[<span class="number">3</span>] + rz1 * sc[<span class="number">2</span>],</span><br><span class="line">                    ry2 = ry1,</span><br><span class="line">                    rz2 = rz1 * sc[<span class="number">3</span>] - rx1 * sc[<span class="number">2</span>];</span><br><span class="line"></span><br><span class="line">                <span class="keyword">if</span>(self.index==j){</span><br><span class="line"></span><br><span class="line">                    self.items[j].scale = <span class="number">1</span>; <span class="comment">//&#x53D6;&#x503C;&#x8303;&#x56F4;0.6 ~ 3</span></span><br><span class="line">                    self.items[j].fontsize = <span class="number">16</span>;</span><br><span class="line">                    self.items[j].alpha = <span class="number">1</span>;</span><br><span class="line">                    self.items[j].element.style.zIndex = <span class="number">99</span>;</span><br><span class="line">                }<span class="keyword">else</span>{</span><br><span class="line">                    <span class="keyword">var</span> per = self.depth / (self.depth + rz2);</span><br><span class="line">                    self.items[j].x = rx2;</span><br><span class="line">                    self.items[j].y = ry2;</span><br><span class="line">                    self.items[j].z = rz2;</span><br><span class="line"></span><br><span class="line">                    self.items[j].scale = per; <span class="comment">//&#x53D6;&#x503C;&#x8303;&#x56F4;0.6 ~ 3</span></span><br><span class="line">                    self.items[j].fontsize = <span class="built_in">Math</span>.ceil(per * <span class="number">2</span>) + self.fontsize - <span class="number">6</span>;</span><br><span class="line">                    self.items[j].alpha = <span class="number">1.5</span> * per - <span class="number">0.5</span>;</span><br><span class="line">                    self.items[j].element.style.zIndex = <span class="built_in">Math</span>.ceil(per*<span class="number">10</span><span class="number">-5</span>);</span><br><span class="line">                }</span><br><span class="line">                <span class="comment">//self.items[j].element.style.fontSize = self.items[j].fontsize + &quot;px&quot;;//&#x5B57;&#x4F53;&#x53D8;&#x5927;&#x5C0F;</span></span><br><span class="line">                self.items[j].element.style.left = self.items[j].x + (self.box.offsetWidth - self.items[j].offsetWidth) / <span class="number">2</span> + <span class="string">&quot;px&quot;</span>;</span><br><span class="line">                self.items[j].element.style.top = self.items[j].y + (self.box.offsetHeight - self.items[j].offsetHeight) / <span class="number">2</span> + <span class="string">&quot;px&quot;</span>;</span><br><span class="line">                self.items[j].element.style.filter = <span class="string">&quot;alpha(opacity=&quot;</span> + <span class="number">100</span> * self.items[j].alpha + <span class="string">&quot;)&quot;</span>;</span><br><span class="line">                self.items[j].element.style.opacity = self.items[j].alpha;</span><br><span class="line">            }</span><br><span class="line">        },</span><br><span class="line"></span><br><span class="line">        _getItems: <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>{</span><br><span class="line">            <span class="keyword">var</span> self = <span class="built_in">this</span>,</span><br><span class="line">                items = [],</span><br><span class="line">                element = self.box.children, <span class="comment">// children &#x5168;&#x90E8;&#x662F;Element</span></span><br><span class="line">                length = element.length,</span><br><span class="line">                item;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; length; i++) {</span><br><span class="line">                item = {};</span><br><span class="line">                item.angle = {};</span><br><span class="line">                item.angle.phi = <span class="built_in">Math</span>.acos(<span class="number">-1</span> + (<span class="number">2</span> * i + <span class="number">1</span>) / length);</span><br><span class="line">                item.angle.theta = <span class="built_in">Math</span>.sqrt((length + <span class="number">1</span>) * <span class="built_in">Math</span>.PI) * item.angle.phi;</span><br><span class="line">                item.element = element[i];</span><br><span class="line">                item.offsetWidth = item.element.offsetWidth;</span><br><span class="line">                item.offsetHeight = item.element.offsetHeight;</span><br><span class="line">                item.x = self.radius * <span class="number">1.5</span> * <span class="built_in">Math</span>.cos(item.angle.theta) * <span class="built_in">Math</span>.sin(item.angle.phi);</span><br><span class="line">                item.y = self.radius * <span class="number">1.5</span> * <span class="built_in">Math</span>.sin(item.angle.theta) * <span class="built_in">Math</span>.sin(item.angle.phi);</span><br><span class="line">                item.z = self.radius * <span class="number">1.5</span> * <span class="built_in">Math</span>.cos(item.angle.phi);</span><br><span class="line">                item.element.style.left = item.x + (self.box.offsetWidth - item.offsetWidth) / <span class="number">2</span> + <span class="string">&quot;px&quot;</span>;</span><br><span class="line">                item.element.style.top = item.y + (self.box.offsetHeight - item.offsetHeight) / <span class="number">2</span> + <span class="string">&quot;px&quot;</span>;</span><br><span class="line">                items.push(item);</span><br><span class="line">            }</span><br><span class="line"></span><br><span class="line">            <span class="keyword">return</span> items;   <span class="comment">//&#x5355;&#x5143;&#x7D20;&#x6570;&#x7EC4;</span></span><br><span class="line">        }</span><br><span class="line">    };</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (!doc.querySelectorAll) {<span class="comment">//ie7&#x4E0D;&#x652F;&#x6301;querySelectorAll&#xFF0C;&#x6240;&#x4EE5;&#x8981;&#x91CD;&#x65B0;&#x5B9A;&#x4E49;</span></span><br><span class="line">        doc.querySelectorAll = <span class="function"><span class="keyword">function</span> (<span class="params">selectors</span>) </span>{</span><br><span class="line">            <span class="keyword">var</span> style = doc.createElement(<span class="string">&apos;style&apos;</span>), elements = [], element;</span><br><span class="line">            doc.documentElement.firstChild.appendChild(style);</span><br><span class="line">            doc._qsa = [];</span><br><span class="line"></span><br><span class="line">            style.styleSheet.cssText = selectors + <span class="string">&apos;{x-qsa:expression(document._qsa &amp;&amp; document._qsa.push(this))}&apos;</span>;</span><br><span class="line">            <span class="built_in">window</span>.scrollBy(<span class="number">0</span>, <span class="number">0</span>);</span><br><span class="line">            style.parentNode.removeChild(style);</span><br><span class="line"></span><br><span class="line">            <span class="keyword">while</span> (doc._qsa.length) {</span><br><span class="line">                element = doc._qsa.shift();</span><br><span class="line">                element.style.removeAttribute(<span class="string">&apos;x-qsa&apos;</span>);</span><br><span class="line">                elements.push(element);</span><br><span class="line">            }</span><br><span class="line">            doc._qsa = <span class="literal">null</span>;</span><br><span class="line">            <span class="keyword">return</span> elements;</span><br><span class="line">        };</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="function"><span class="keyword">function</span> (<span class="params">options</span>) </span>{ <span class="comment">// factory</span></span><br><span class="line">        options = options || {}; <span class="comment">// &#x77ED;&#x8DEF;&#x8BED;&#x6CD5;</span></span><br><span class="line">        <span class="keyword">var</span> selector = options.selector || <span class="string">&apos;.tagcloud&apos;</span>, <span class="comment">//&#x9ED8;&#x8BA4;&#x9009;&#x62E9;class&#x4E3A;tagcloud&#x7684;&#x5143;&#x7D20;</span></span><br><span class="line">            elements = doc.querySelectorAll(selector),</span><br><span class="line">            instance = [];</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">var</span> index = <span class="number">0</span>, len = elements.length; index &lt; len; index++) {</span><br><span class="line">            options.element = elements[index];</span><br><span class="line">            <span class="keyword">if</span> (!!TagCloud._set(options.element)) {</span><br><span class="line">                instance.push(<span class="keyword">new</span> TagCloud(options));</span><br><span class="line">            }</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">return</span> instance;</span><br><span class="line">    };</span><br><span class="line"></span><br><span class="line">})(<span class="built_in">window</span>, <span class="built_in">document</span>);</span><br></pre></td></tr></table></figure>
<p>&#x5728;next/layout/_layout.swig&#x4E2D;&#x5F15;&#x5165;bubble.js</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span> <span class="attr">src</span>=<span class="string">&quot;/js/clicklove.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;{{ config.language }}&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">+  <span class="comment">&lt;!--&#x7403;&#x578B;&#x6C14;&#x6CE1;&#x6807;&#x7B7E;&#x4E91; --&gt;</span></span><br><span class="line">+  <span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span> <span class="attr">src</span>=<span class="string">&quot;/js/bubble.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span>&gt;</span><br></pre></td></tr></table></figure>
<p>vim next/layout/page.swig</p>
<figure class="highlight"><table><tr><td class="code"><pre><span class="line">+{% include <span class="string">&apos;tag-bubble.swig&apos;</span> %}</span><br><span class="line">&lt;/div&gt;</span><br><span class="line">{#####################}</span><br><span class="line">{### END PAGE BODY ###}</span><br><span class="line">{#####################}</span><br></pre></td></tr></table></figure>
<span class="label success">updated by cozy 2020/10/19</span>
<h1>Code block folding</h1>
<h1>messageboard</h1>
<p>&#x6CE8;&#x518C;leancloud&#x8D26;&#x53F7;</p>
<p>&#x521B;&#x5EFA;&#x5F00;&#x53D1;&#x677F;&#x5E94;&#x7528;</p>
<p>&#x5C06;<code>&#x5E94;&#x7528;keys</code>&#x7684;&#x6570;&#x636E;&#x6DFB;&#x52A0;&#x5230;&#x4E3B;&#x9898;config&#x4E2D;&#x53BB;</p>
<p><img src="/2020/10/19/update-log/update-log/leancloud.png" alt="&#x5E94;&#x7528;keys"></p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">valine:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">false</span></span><br><span class="line">  <span class="attr">appid:</span> <span class="comment"># Your leancloud application appid</span></span><br><span class="line">  <span class="attr">appkey:</span> <span class="comment"># Your leancloud application appkey</span></span><br><span class="line">  <span class="attr">notify:</span> <span class="literal">false</span> <span class="comment"># Mail notifier</span></span><br><span class="line">  <span class="attr">verify:</span> <span class="literal">false</span> <span class="comment"># Verification code</span></span><br><span class="line">  <span class="attr">placeholder:</span> <span class="string">Just</span> <span class="string">go</span> <span class="string">go</span> <span class="comment"># Comment box placeholder</span></span><br><span class="line">  <span class="attr">avatar:</span> <span class="string">mm</span> <span class="comment"># Gravatar style</span></span><br><span class="line">  <span class="attr">guest_info:</span> <span class="string">nick,mail,link</span> <span class="comment"># Custom comment header</span></span><br><span class="line">  <span class="attr">pageSize:</span> <span class="number">10</span> <span class="comment"># Pagination size</span></span><br><span class="line">  <span class="attr">language:</span> <span class="comment"># Language, available values: en, zh-cn</span></span><br><span class="line">  <span class="attr">visitor:</span> <span class="literal">false</span> <span class="comment"># Article reading statistic</span></span><br><span class="line">  <span class="attr">comment_count:</span> <span class="literal">true</span> <span class="comment"># If false, comment count will only be displayed in post page, not in home page</span></span><br><span class="line">  <span class="attr">recordIP:</span> <span class="literal">false</span> <span class="comment"># Whether to record the commenter IP</span></span><br><span class="line">  <span class="attr">serverURLs:</span> <span class="comment"># When the custom domain name is enabled, fill it in here (it will be detected automatically by default, no need to fill in)</span></span><br><span class="line">  <span class="comment">#post_meta_order: 0</span></span><br></pre></td></tr></table></figure>
<h1>typing effect</h1>
<p><a href="https://tding.top/archives/58cff12b.html">https://tding.top/archives/58cff12b.html</a></p>
<h1>hiding blog</h1>
<p>yaml<code>notshow: true</code></p>
<span class="label success">updated by cozy 2020/10/22</span>
<h1>update dynamic bg</h1>
<p>&#x5728;&#x4E3B;&#x9898;&#x914D;&#x7F6E;&#x4E2D;<code>canvas_nest</code>&#x6539;&#x6210;<code>false</code></p>
<h1>To be updated</h1>
<ul>
<li>&#x6587;&#x7AE0;&#x76EE;&#x5F55;&#x70B9;&#x51FB;&#x6CA1;&#x53CD;&#x5E94;</li>
<li>&#x5B57;&#x4F53;&#x8C03;&#x6574;</li>
<li>&#x8D85;&#x94FE;&#x63A5;&#x989C;&#x8272;</li>
<li>&#x8BFB;&#x8005;&#x81EA;&#x5DF1;&#x9009;&#x62E9;&#x80CC;&#x666F;&#x989C;&#x8272;</li>
<li><s>&#x9996;&#x9875;&#x9690;&#x85CF;&#x6307;&#x5B9A;&#x6587;&#x7AE0;</s></li>
<li>&#x9996;&#x9875;&#x7F6E;&#x9876;&#x6587;&#x7AE0;</li>
<li><s>&#x7559;&#x8A00;&#x677F;</s></li>
</ul>
<h1>reference</h1>
<p><a href="https://www.liaofuzhan.com/posts/4158923031.html">tag bubble</a></p>
]]></content>
      <categories>
        <category>hexo</category>
        <category>log</category>
      </categories>
      <tags>
        <tag>hexo</tag>
      </tags>
  </entry>
  <entry>
    <title>test password</title>
    <url>/2020/10/19/test-password/</url>
    <content><![CDATA[<div id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">
  <div class="hbe-input-container">
  <input type="password" id="hbePass" placeholder="" />
    <label for="hbePass">Hey, password is required here.</label>
    <div class="bottom-line"></div>
  </div>
  <script id="hbeData" type="hbeData" data-hmacdigest="9c9d5e21425accc510d734582475e776d2b0ba8b87a59a73099f92835e28ba7d">80bd98c5e49e01cb8fe91d9a4539dd9b</script>
</div>
<script src="/lib/blog-encrypt.js"></script><link href="/css/blog-encrypt.css" rel="stylesheet" type="text/css">]]></content>
      <tags>
        <tag>hexo</tag>
      </tags>
  </entry>
  <entry>
    <title>why I choose master</title>
    <url>/2020/10/19/why-I-choose-master/</url>
    <content><![CDATA[<p>&#x4E3A;&#x4EC0;&#x4E48;&#x6211;&#x9009;&#x62E9;&#x8BFB;&#x7855;&#x58EB;&#x800C;&#x4E0D;&#x662F;<s>&#x76F4;&#x535A;</s>&#xFF1F;&#x5927;&#x6982;&#x662F;&#x5927;&#x4E09;&#x4E0A;&#x5B66;&#x671F;&#x7684;&#x65F6;&#x5019;&#x6211;&#x5C31;&#x5F00;&#x59CB;&#x601D;&#x8003;&#x8FD9;&#x4E2A;&#x95EE;&#x9898;&#xFF0C;&#x800C;&#x5728;&#x4FDD;&#x7814;&#x8FC7;&#x7A0B;&#x4E2D;&#x4E5F;&#x4E00;&#x76F4;&#x6000;&#x7591;&#x81EA;&#x5DF1;&#x7684;&#x9009;&#x62E9;&#x3002;&#x4E0B;&#x9762;&#x5C31;&#x8BF4;&#x8BF4;&#x6211;&#x7684;&#x4E2A;&#x4EBA;&#x770B;&#x6CD5;&#x3002;</p>
<a id="more"></a>
<p>&#x200B;	  &#x6211;&#x5927;&#x4E00;&#x9009;&#x62E9;&#x8FC7;&#x4E00;&#x6B21;&#x8F6C;&#x4E13;&#x4E1A;&#xFF0C;&#x6765;&#x5230;&#x4E86;&#x4E92;&#x8054;&#x7F51;&#x8FD9;&#x4E2A;&#x7CBE;&#x5F69;&#x3001;&#x5145;&#x6EE1;&#x8BF1;&#x60D1;&#x529B;&#x7684;&#x5730;&#x65B9;&#x3002;&#x8BDA;&#x7136;&#xFF0C;&#x6211;&#x627E;&#x5230;&#x4E86;&#x5FEB;&#x4E50;&#x8001;&#x5BB6;&#xFF0C;&#x5F88;&#x5E86;&#x5E78;&#x81EA;&#x5DF1;&#x6CA1;&#x6709;&#x53BB;&#x91D1;&#x878D;&#x6570;&#x5B66;&#x5565;&#x7684;&#x3002;&#x53EF;&#x662F;&#x5728;&#x540E;&#x6765;&#x7684;&#x5927;&#x5B66;&#x751F;&#x6D3B;&#x4E2D;&#xFF0C;&#x6211;&#x6E10;&#x6E10;&#x5730;&#x4E86;&#x89E3;&#x5230;&#x4E86;&#x5F88;&#x591A;&#xFF0C;&#x793E;&#x4EA4;&#xFF0C;&#x91D1;&#x878D;&#x7B49;&#x65B9;&#x9762;&#x3002;&#x6211;&#x5F88;&#x60F3;&#x53BB;&#x5B66;&#x4E60;&#x5176;&#x4ED6;&#x4E1C;&#x897F;&#xFF0C;&#x4E5F;&#x8BB8;&#x6211;&#x66F4;&#x613F;&#x610F;&#x6269;&#x5C55;&#x81EA;&#x5DF1;&#x77E5;&#x8BC6;&#x9762;&#x7684;&#x5E7F;&#x5EA6;&#x3002;<span class="label primary"> &#x56E0;&#x4E3A;&#x79BB;&#x5F00;&#x5728;&#x6821;&#x56ED;&#x8FD9;&#x4E2A;&#x8C61;&#x7259;&#x5854;&#xFF0C;&#x6211;&#x9700;&#x8981;&#x5E94;&#x5BF9;&#x5404;&#x79CD;&#x7EB7;&#x81F3;&#x6C93;&#x6765;&#x7684;&#x6311;&#x6218;&#xFF0C;&#x6240;&#x4EE5;&#x60F3;&#x8BA9;&#x81EA;&#x5DF1;&#x7684;&#x6280;&#x80FD;&#x6811;&#x66F4;&#x5168;&#x9762;&#x4E00;&#x4E9B;&#x3002;</span></p>
<p>&#x200B;	&#x786E;&#x5B9E;&#xFF0C;&#x5728;&#x8BA1;&#x7B97;&#x673A;&#x4FDD;&#x7814;&#x8FC7;&#x7A0B;&#x4E2D;&#x7070;&#x98DE;&#x70DF;&#x706D;&#xFF0C;&#x76F4;&#x535A;&#x7684;&#x96BE;&#x5EA6;&#x6BD4;&#x8F83;&#x4F4E;&#x4E00;&#x70B9;&#x5F88;&#x662F;&#x8BA9;&#x6211;&#x5FC3;&#x52A8;&#xFF0C;&#x4E5F;&#x7533;&#x8BF7;&#x4E86;&#x6E2F;&#x6821;&#x7684;&#x63D0;&#x524D;&#x6279;&#xFF08;<s>&#x94B1;&#x5F88;&#x591A;&#xFF0C;&#x5BFC;&#x5E08;&#x5F88;&#x5389;&#x5BB3;&#xFF0C;&#x800C;&#x4E14;&#x6211;&#x7279;&#x522B;&#x559C;&#x6B22;&#x6D77;</s>&#xFF09;&#xFF0C;&#x53EF;&#x662F;&#x6211;&#x8981;&#x5199;&#x4E94;&#x5E74;&#x7684;&#x8BBA;&#x6587;&#xFF0C;&#x8981;&#x4E0D;&#x65AD;&#x5730;&#x653E;&#x5F03;&#x8EAB;&#x8FB9;&#x7684;&#x7CBE;&#x5F69;&#x53BB;focus on one thing&#xFF0C;&#x4E0D;&#x7B26;&#x5408;&#x6211;&#x7684;&#x521D;&#x5FC3;&#x3002;&#x8FD8;&#x6709;&#x4E2A;&#x539F;&#x56E0;&#x662F;&#xFF0C;&#x6211;&#x4E00;&#x76F4;&#x89C9;&#x5F97;&#x5B66;&#x751F;&#x662F;&#x5F31;&#x52BF;&#x7FA4;&#x4F53;&#xFF0C;&#x4E0D;&#x7BA1;&#x662F;graduate or undergraduate&#xFF0C;&#x6240;&#x4EE5;&#x60F3;&#x6362;&#x79CD;&#x8EAB;&#x4EFD;&#xFF0C;&#x6216;&#x8BB8;&#x53EF;&#x4EE5;&#x81EA;&#x7531;&#x4E00;&#x70B9;&#xFF1F;</p>
<p>&#x200B;	&#x6700;&#x540E;&#x662F;&#x6211;&#x5BF9;&#x79D1;&#x7814;&#xFF0C;&#x5BF9;&#x8BA1;&#x7B97;&#x673A;&#x7406;&#x89E3;&#x7684;&#x4E0D;&#x591F;&#x6DF1;&#x3002;&#x7855;&#x58EB;&#x6BD5;&#x4E1A;&#x540E;&#x5DE5;&#x4F5C;&#x4F1A;&#x52A0;&#x6DF1;&#x6211;&#x5BF9;&#x8BA1;&#x7B97;&#x673A;&#x8FD9;&#x4E2A;&#x884C;&#x4E1A;&#x7684;&#x7406;&#x89E3;&#xFF0C;&#x5982;&#x679C;&#x5DE5;&#x4F5C;&#x51E0;&#x5E74;&#x6211;&#x89C9;&#x5F97;_&#x55EF;&#xFF1F;&#x8C8C;&#x4F3C;&#x6211;&#x73B0;&#x5728;&#x5F88;&#x9002;&#x5408;&#x53BB;&#x5FF5;&#x4E2A;&#x535A;&#x58EB;&#x6B38;&#xFF1F;_&#xFF0C;&#x90A3;&#x6211;&#x4E5F;&#x6765;&#x5F97;&#x53CA;&#x53BB;&#x7533;&#x8BF7;&#x56FD;&#x5916;&#x7684;&#x535A;&#x58EB;&#x3002;</p>
<p>&#x200B;	&#x4EE5;&#x4E0A;&#x5C31;&#x662F;&#x6211;&#x5728;&#x9762;&#x5BF9;&#x7855;&#x58EB;&#x548C;&#x535A;&#x58EB;&#x9009;&#x62E9;&#x7684;&#x601D;&#x8003;&#x3002;&#xFF08;&#x4E0D;&#x4F1A;&#x8BF4;&#x662F;&#x4E3A;&#x4E86;&#x770B;&#x770B;tagcloud&#x7684;&#x6548;&#x679C;</p>
]]></content>
      <tags>
        <tag>life</tag>
      </tags>
  </entry>
  <entry>
    <title>faker的一天</title>
    <url>/2020/10/18/faker/</url>
    <content><![CDATA[<blockquote class="blockquote-center">
            <i class="fa fa-quote-left"></i>
            <p>faker&#x4ECA;&#x5929;&#x548C;&#x5988;&#x5988;&#x53BB;&#x5403;&#x996D;&#x4E86;</p>

            <i class="fa fa-quote-right"></i>
          </blockquote>
<a id="more"></a>
]]></content>
      <tags>
        <tag>faker</tag>
      </tags>
  </entry>
  <entry>
    <title>Hello World</title>
    <url>/2020/10/15/hello-world/</url>
    <content><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p>
<a id="more"></a>
<h2 id="Quick-Start">Quick Start</h2>
<h3 id="Create-a-new-post">Create a new post</h3>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo neddddw <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p>
<h3 id="Run-server">Run server</h3>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p>
<h3 id="Generate-static-files">Generate static files</h3>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p>
<h3 id="Deploy-to-remote-sites">Deploy to remote sites</h3>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>
]]></content>
  </entry>
</search>
